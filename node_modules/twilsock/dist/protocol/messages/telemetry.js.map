{"version":3,"file":"telemetry.js","sources":["../../../src/protocol/messages/telemetry.ts"],"sourcesContent":["import { MessageType } from \"../protocol\";\nimport { AbstractMessage } from \"./abstractmessage\";\n\nclass TelemetryEvent {\n  constructor(\n    readonly start: number, // relative to event send time\n    readonly end: number, // relative to event send time\n    readonly title: string,\n    readonly details: string,\n    readonly id?: string, // optional, default will be random assigned by backend\n    readonly type?: string\n  ) {} // optional, default will be \"SDK\" assigned by backend\n}\n\nclass Telemetry extends AbstractMessage {\n  public readonly method = \"telemetry.v1\" as MessageType;\n  public events: TelemetryEvent[];\n\n  constructor(events: TelemetryEvent[]) {\n    super();\n    this.events = events;\n  }\n}\n\nexport { Telemetry, TelemetryEvent };\n"],"names":["AbstractMessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAM,cAAc,CAAA;IAClB,WACW,CAAA,KAAa;AACb,IAAA,GAAW;AACX,IAAA,KAAa,EACb,OAAe,EACf,EAAW;IACX,IAAa,EAAA;QALb,IAAK,CAAA,KAAA,GAAL,KAAK,CAAQ;QACb,IAAG,CAAA,GAAA,GAAH,GAAG,CAAQ;QACX,IAAK,CAAA,KAAA,GAAL,KAAK,CAAQ;QACb,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;QACf,IAAE,CAAA,EAAA,GAAF,EAAE,CAAS;QACX,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAS;AACrB,KAAC;AACL,CAAA;AAED,MAAM,SAAU,SAAQA,+BAAe,CAAA;AAIrC,IAAA,WAAA,CAAY,MAAwB,EAAA;AAClC,QAAA,KAAK,EAAE,CAAC;QAJM,IAAM,CAAA,MAAA,GAAG,cAA6B,CAAC;AAKrD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AACF;;;;;"}