{"version":3,"file":"packetinterface.js","sources":["../src/packetinterface.ts"],"sourcesContent":["import { log } from \"./logger\";\n\nimport { v4 as uuid } from \"uuid\";\n\nimport { TwilsockError } from \"./error/twilsockerror\";\nimport { TwilsockReplyError } from \"./error/twilsockreplyerror\";\nimport { Configuration } from \"./configuration\";\nimport { Parser } from \"./parser\";\n\nimport * as Messages from \"./protocol/messages\";\n\nimport { Metadata } from \"./metadata\";\n\nconst REQUEST_TIMEOUT = 30000;\n\nfunction isHttpSuccess(code: number): boolean {\n  return code >= 200 && code < 300;\n}\n\n/**\n * Makes sure that body is properly stringified\n */\nfunction preparePayload(payload): string {\n  switch (typeof payload) {\n    case \"undefined\":\n      return \"\";\n    case \"object\":\n      return JSON.stringify(payload);\n    default:\n      return payload;\n  }\n}\n\ninterface PacketRequest {\n  timeout: ReturnType<typeof setTimeout>;\n  reject: (reason?: TwilsockReplyError | TwilsockError) => void;\n  resolve: (value?: unknown | PromiseLike<unknown>) => void;\n}\n\ninterface PacketResponse {\n  id: string;\n  header: {\n    continuation_token: string;\n    continuation_token_status?: ContinuationTokenStatus;\n    offline_storage: string;\n    init_registrations: string;\n    debug_info: string;\n    capabilities: string[];\n    http_status: {\n      status: string;\n      code: number;\n      errorCode?: string;\n    };\n    http_headers: Headers;\n  };\n  body: Context;\n}\n\nimport type { Headers, Header, Context } from \"./protocol/protocol\";\nimport { Channel } from \"./interfaces/channel\";\nimport { ContinuationTokenStatus } from \"./protocol/messages/initReply\";\nimport { ReplyType } from \"./protocol/messages/reply\";\n\nclass PacketInterface {\n  private readonly config: Configuration;\n  private readonly activeRequests: Map<string, PacketRequest>;\n  private readonly channel: Channel;\n\n  constructor(channel: Channel, config: Configuration) {\n    this.config = config;\n    this.activeRequests = new Map<string, PacketRequest>();\n\n    this.channel = channel;\n    this.channel.on(\"reply\", (reply) => this.processReply(reply));\n    this.channel.on(\"disconnected\", () => {\n      this.activeRequests.forEach((descriptor) => {\n        clearTimeout(descriptor.timeout);\n        descriptor.reject(new TwilsockError(\"disconnected\"));\n      });\n      this.activeRequests.clear();\n    });\n  }\n\n  public get isConnected(): boolean {\n    return this.channel.isConnected;\n  }\n\n  public processReply(reply: ReplyType): void {\n    const request = this.activeRequests.get(reply.id);\n    if (request) {\n      clearTimeout(request.timeout);\n      this.activeRequests.delete(reply.id);\n\n      if (!isHttpSuccess(reply.status.code)) {\n        request.reject(\n          new TwilsockReplyError(\n            \"Transport failure: \" + reply.status.status,\n            reply\n          )\n        );\n        log.trace(\"message rejected\");\n      } else {\n        request.resolve(reply);\n      }\n    }\n  }\n\n  private storeRequest(id: string, resolve, reject): void {\n    const requestDescriptor = {\n      resolve: resolve,\n      reject: reject,\n      timeout: setTimeout(() => {\n        log.trace(\"request\", id, \"is timed out\");\n        reject(new TwilsockError(\"Twilsock: request timeout: \" + id));\n      }, REQUEST_TIMEOUT) as ReturnType<typeof setTimeout>,\n    };\n    this.activeRequests.set(id, requestDescriptor);\n  }\n\n  public shutdown(): void {\n    this.activeRequests.forEach((descriptor) => {\n      clearTimeout(descriptor.timeout);\n      descriptor.reject(\n        new TwilsockError(\"Twilsock: request cancelled by user\")\n      );\n    });\n    this.activeRequests.clear();\n  }\n\n  public async sendInit(): Promise<Messages.InitReply> {\n    log.trace(\"sendInit\");\n\n    const metadata = Metadata.getMetadata(this.config);\n    const message = new Messages.Init(\n      this.config.token,\n      this.config.continuationToken,\n      metadata,\n      this.config.initRegistrations,\n      this.config.tweaks\n    );\n\n    const response = await this.sendWithReply(message);\n    return new Messages.InitReply(\n      response.id,\n      response.header.continuation_token,\n      new Set<string>(response.header.capabilities),\n      response.header.continuation_token_status,\n      response.header.offline_storage,\n      response.header.init_registrations,\n      response.header.debug_info\n    );\n  }\n\n  public sendClose(): void {\n    const message = new Messages.Close();\n    //@todo send telemetry AnyEventsIncludingUnfinished\n    this.send(message);\n  }\n\n  public sendWithReply(\n    header: Partial<Header>,\n    payload?: Context\n  ): Promise<PacketResponse> {\n    return new Promise((resolve, reject) => {\n      const id = this.send(header, payload);\n      this.storeRequest(id, resolve, reject);\n    });\n  }\n\n  public send(header: Partial<Header>, payload?: Context): string {\n    header.id = header.id || `TM${uuid()}`;\n    const message = Parser.createPacket(header, preparePayload(payload));\n\n    try {\n      this.channel.send(message);\n      return header.id;\n    } catch (e) {\n      log.debug(\"failed to send \", header, e);\n      log.trace(e.stack);\n      throw e;\n    }\n  }\n}\n\nexport { Channel, PacketResponse, PacketInterface };\n"],"names":["TwilsockError","TwilsockReplyError","log","metadata","Metadata","Messages.Init","Messages.InitReply","Messages.Close","uuid","Parser"],"mappings":"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"}