{"version":3,"file":"twilsock.js","sources":["../src/twilsock.ts"],"sourcesContent":["import * as StateMachine from \"javascript-state-machine\";\nimport { Configuration } from \"./configuration\";\nimport { log } from \"./logger\";\nimport { ConnectionError, ConnectionState } from \"./client\";\nimport type { Header } from \"./protocol/protocol\";\nimport * as Messages from \"./protocol/messages\";\nimport { Parser } from \"./parser\";\nimport { PacketInterface } from \"./packetinterface\";\nimport { WebSocketChannel } from \"./websocketchannel\";\nimport { TwilsockReplyError } from \"./error/twilsockreplyerror\";\nimport { BackoffRetrier } from \"./backoffretrier\";\nimport type { ReplyType } from \"./protocol/messages/reply\";\nimport { ReplayEventEmitter } from \"@twilio/replay-event-emitter\";\n\nconst DISCONNECTING_TIMEOUT = 3000;\n\n// Wraps asynchronous rescheduling\n// Just makes it simpler to find these hacks over the code\n// Currently there's exactly one instance of this in closeSocket()\nfunction trampoline(f: () => void) {\n  setTimeout(f, 0);\n}\n\nclass Response {}\n\ntype TwilsockChannelEvents = {\n  stateChanged: (state: ConnectionState) => void;\n  beforeConnect: () => void;\n  connecting: () => void;\n  connected: () => void;\n  beforeSendInit: () => void;\n  sendInitFailed: () => void;\n  initialized: (initReply: Messages.InitReply) => void;\n  tokenAboutToExpire: () => void;\n  tokenExpired: () => void;\n  tokenUpdated: (error?: Error) => void;\n  message: (messageType: string | undefined, payload: string) => void;\n  disconnected: () => void;\n  connectionError: (data: ConnectionError) => void;\n  error: (\n    terminal: boolean,\n    message: string,\n    httpStatusCode?: number | null,\n    errorCode?: number | null\n  ) => void;\n};\n\n/**\n * Twilsock channel level protocol implementation\n */\nclass TwilsockChannel extends ReplayEventEmitter<TwilsockChannelEvents> {\n  private readonly config: Configuration;\n\n  private readonly fsm: StateMachine;\n\n  private disconnectingTimer: ReturnType<typeof setTimeout> | null = null;\n\n  private disconnectedPromiseResolve: (() => void) | null = null;\n  private retrier: BackoffRetrier;\n\n  private websocket: WebSocketChannel;\n  private transport: PacketInterface;\n\n  private readonly terminalStates: Array<string> = [\"disconnected\", \"rejected\"];\n  private lastEmittedState;\n  private readonly tokenExpiredSasCode = 20104;\n\n  private terminationReason = \"Connection is not initialized\";\n\n  constructor(\n    websocket: WebSocketChannel,\n    transport: PacketInterface,\n    config: Configuration\n  ) {\n    super();\n\n    this.websocket = websocket;\n    this.websocket.on(\"connected\", () => this.fsm.socketConnected());\n    this.websocket.on(\"disconnected\", () => this.fsm.socketClosed());\n    this.websocket.on(\"message\", (message) =>\n      this.onIncomingMessage(message as ArrayBuffer)\n    );\n    this.websocket.on(\"socketError\", (e) => {\n      this.emit(\"connectionError\", {\n        terminal: false,\n        message: `Socket error: ${e.message}`,\n        httpStatusCode: null,\n        errorCode: null,\n      });\n      this.emit(\"stateChanged\", \"retrying\");\n    });\n\n    this.transport = transport;\n    this.config = config;\n\n    this.retrier = new BackoffRetrier(config.retryPolicy);\n    this.retrier.on(\"attempt\", () => this.retry());\n    this.retrier.on(\"failed\", (err) => {\n      log.warn(`Retrying failed: ${err.message}`);\n      this.disconnect();\n    });\n\n    if (\n      typeof window !== \"undefined\" &&\n      typeof window.addEventListener !== \"undefined\"\n    ) {\n      window.addEventListener(\"online\", () => {\n        log.debug(\"Browser reported connectivity state: online\");\n        this.resetBackoff();\n        this.fsm.systemOnline();\n      });\n\n      window.addEventListener(\"offline\", () => {\n        log.debug(\"Browser reported connectivity state: offline\");\n        this.websocket.close();\n        this.fsm.socketClosed();\n      });\n    }\n\n    // We have to use a factory function in here because using the default\n    // StateMachine constructor would cause an error for the consumers of the\n    // rollup bundles. This is a quirk unique to the javascript-state-machine\n    // library.\n\n    const TwilsockStateMachine: StateMachine = StateMachine.factory({\n      init: \"disconnected\",\n      transitions: [\n        {\n          name: \"userConnect\",\n          from: [\"disconnected\", \"rejected\"],\n          to: \"connecting\",\n        },\n        { name: \"userConnect\", from: [\"connecting\", \"connected\"] }, // ignore event\n        {\n          name: \"userDisconnect\",\n          from: [\n            \"connecting\",\n            \"initialising\",\n            \"connected\",\n            \"updating\",\n            \"retrying\",\n            \"rejected\",\n            \"waitSocketClosed\",\n            \"waitOffloadSocketClosed\",\n          ],\n          to: \"disconnecting\",\n        },\n        { name: \"userRetry\", from: [\"retrying\"], to: \"connecting\" },\n        { name: \"socketConnected\", from: [\"connecting\"], to: \"initialising\" },\n        {\n          name: \"socketClosed\",\n          from: [\n            \"connecting\",\n            \"initialising\",\n            \"connected\",\n            \"updating\",\n            \"error\",\n            \"waitOffloadSocketClosed\",\n          ],\n          to: \"retrying\",\n        },\n        { name: \"socketClosed\", from: [\"disconnecting\"], to: \"disconnected\" },\n        {\n          name: \"socketClosed\",\n          from: [\"waitSocketClosed\"],\n          to: \"disconnected\",\n        },\n        { name: \"socketClosed\", from: [\"rejected\"], to: \"rejected\" },\n        { name: \"initSuccess\", from: [\"initialising\"], to: \"connected\" },\n        { name: \"initError\", from: [\"initialising\"], to: \"error\" },\n        {\n          name: \"tokenRejected\",\n          from: [\"initialising\", \"updating\"],\n          to: \"rejected\",\n        },\n        {\n          name: \"protocolError\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"error\",\n        },\n        {\n          name: \"receiveClose\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"waitSocketClosed\",\n        },\n        {\n          name: \"receiveOffload\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"waitOffloadSocketClosed\",\n        },\n        {\n          name: \"unsupportedProtocol\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"unsupported\",\n        },\n        {\n          name: \"receiveFatalClose\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"unsupported\",\n        },\n        {\n          name: \"userUpdateToken\",\n          from: [\"disconnected\", \"rejected\", \"connecting\", \"retrying\"],\n          to: \"connecting\",\n        },\n        { name: \"userUpdateToken\", from: [\"connected\"], to: \"updating\" },\n        { name: \"updateSuccess\", from: [\"updating\"], to: \"connected\" },\n        { name: \"updateError\", from: [\"updating\"], to: \"error\" },\n        { name: \"userSend\", from: [\"connected\"], to: \"connected\" },\n        { name: \"systemOnline\", from: [\"retrying\"], to: \"connecting\" },\n      ],\n      methods: {\n        onConnecting: () => {\n          this.setupSocket();\n          this.emit(\"connecting\");\n        },\n        onEnterInitialising: () => {\n          this.sendInit();\n        },\n        onLeaveInitialising: () => {\n          this.cancelInit();\n        },\n        onEnterUpdating: () => {\n          this.sendUpdate();\n        },\n        onLeaveUpdating: () => {\n          this.cancelUpdate();\n        },\n        onEnterRetrying: () => {\n          this.initRetry();\n          this.emit(\"connecting\");\n        },\n        onEnterConnected: () => {\n          this.resetBackoff();\n          this.onConnected();\n        },\n        onUserUpdateToken: () => {\n          this.resetBackoff();\n        },\n        onTokenRejected: () => {\n          this.resetBackoff();\n          this.closeSocket(true);\n          this.finalizeSocket();\n        },\n        onUserDisconnect: () => {\n          this.closeSocket(true);\n        },\n        onEnterDisconnecting: () => {\n          this.startDisconnectTimer();\n        },\n        onLeaveDisconnecting: () => {\n          this.cancelDisconnectTimer();\n        },\n        onEnterWaitSocketClosed: () => {\n          this.startDisconnectTimer();\n        },\n        onLeaveWaitSocketClosed: () => {\n          this.cancelDisconnectTimer();\n        },\n        onEnterWaitOffloadSocketClosed: () => {\n          this.startDisconnectTimer();\n        },\n        onLeaveWaitOffloadSocketClosed: () => {\n          this.cancelDisconnectTimer();\n        },\n        onDisconnected: () => {\n          this.resetBackoff();\n          this.finalizeSocket();\n        },\n        onReceiveClose: () => {\n          this.onCloseReceived();\n        },\n        onReceiveOffload: (event, args) => {\n          log.debug(\"onreceiveoffload: \", args);\n          this.modifyBackoff(args.body);\n          this.onCloseReceived();\n        },\n        onUnsupported: () => {\n          this.closeSocket(true);\n          this.finalizeSocket();\n        },\n        onError: (lifecycle, graceful: boolean) => {\n          this.closeSocket(graceful);\n          this.finalizeSocket();\n        },\n        onEnterState: (event) => {\n          if (event.from !== \"none\") {\n            this.changeState(event);\n          }\n        },\n        onInvalidTransition: (transition, from, to) => {\n          log.warn(\"FSM: unexpected transition\", from, to);\n        },\n      },\n    });\n    this.fsm = new TwilsockStateMachine();\n  }\n\n  private changeState(event: {\n    transition: unknown;\n    from: string;\n    to: string;\n  }): void {\n    log.debug(`FSM: ${event.transition}: ${event.from} --> ${event.to}`);\n\n    if (this.lastEmittedState !== this.state) {\n      this.lastEmittedState = this.state;\n      this.emit(\"stateChanged\", this.state);\n    }\n  }\n\n  private resetBackoff(): void {\n    log.trace(\"resetBackoff\");\n    this.retrier.stop();\n  }\n\n  private modifyBackoff(body): void {\n    log.trace(\"modifyBackoff\", body);\n\n    const backoffPolicy = body ? body.backoff_policy : null;\n\n    if (backoffPolicy && typeof backoffPolicy.reconnect_min_ms === \"number\") {\n      this.retrier.modifyBackoff(backoffPolicy.reconnect_min_ms);\n    }\n  }\n\n  private startDisconnectTimer(): void {\n    log.trace(\"startDisconnectTimer\");\n\n    if (this.disconnectingTimer) {\n      clearTimeout(this.disconnectingTimer);\n      this.disconnectingTimer = null;\n    }\n\n    this.disconnectingTimer = setTimeout(() => {\n      log.debug(\"disconnecting is timed out\");\n      this.closeSocket(true);\n    }, DISCONNECTING_TIMEOUT);\n  }\n\n  private cancelDisconnectTimer(): void {\n    log.trace(\"cancelDisconnectTimer\");\n\n    if (this.disconnectingTimer) {\n      clearTimeout(this.disconnectingTimer);\n      this.disconnectingTimer = null;\n    }\n  }\n\n  public get isConnected(): boolean {\n    return this.state === \"connected\" && this.websocket.isConnected;\n  }\n\n  public get state(): ConnectionState {\n    switch (this.fsm.state) {\n      case \"connecting\":\n      case \"initialising\":\n      case \"retrying\":\n      case \"error\":\n        return \"connecting\";\n      case \"updating\":\n      case \"connected\":\n        return \"connected\";\n      case \"rejected\":\n        return \"denied\";\n      case \"disconnecting\":\n      case \"waitSocketClosed\":\n      case \"waitOffloadSocketClosed\":\n        return \"disconnecting\";\n      case \"disconnected\":\n      default:\n        return \"disconnected\";\n    }\n  }\n\n  private initRetry() {\n    log.debug(\"initRetry\");\n    if (this.retrier.inProgress) {\n      this.retrier.attemptFailed();\n    } else {\n      this.retrier.start();\n    }\n  }\n\n  private retry(): void {\n    if (this.fsm.state != \"connecting\") {\n      log.trace(\"retry\");\n      this.websocket.close();\n      this.fsm.userRetry();\n    } else {\n      log.trace(\"can\\t retry as already connecting\");\n    }\n  }\n\n  private onConnected(): void {\n    this.emit(\"connected\");\n  }\n\n  private finalizeSocket(): void {\n    log.trace(\"finalizeSocket\");\n\n    this.websocket.close();\n    this.emit(\"disconnected\");\n\n    if (this.disconnectedPromiseResolve) {\n      this.disconnectedPromiseResolve();\n      this.disconnectedPromiseResolve = null;\n    }\n  }\n\n  private setupSocket(): void {\n    log.trace(\"setupSocket:\", this.config.token);\n    this.emit(\"beforeConnect\"); // This is used by client to record startup telemetry event\n    this.websocket.connect();\n  }\n\n  private onIncomingMessage(message: ArrayBuffer): void {\n    const parsedMessage = Parser.parse(message);\n    if (!parsedMessage) {\n      return;\n    }\n    const { method, header, payload } = parsedMessage;\n\n    if (method !== \"reply\") {\n      this.confirmReceiving(header);\n    }\n\n    if (method === \"notification\") {\n      this.emit(\"message\", header.message_type, payload);\n    } else if (header.method === \"reply\") {\n      this.transport.processReply({\n        id: header.id,\n        status: header.status,\n        header: header,\n        body: payload,\n      });\n    } else if (header.method === \"client_update\") {\n      if (header.client_update_type === \"token_about_to_expire\") {\n        this.emit(\"tokenAboutToExpire\");\n      }\n    } else if (header.method === \"close\") {\n      if (header.status.code === 308) {\n        log.debug(\"Connection has been offloaded\");\n        this.fsm.receiveOffload({\n          status: header.status.status,\n          body: payload,\n        });\n      } else if (header.status.code === 406) {\n        // Not acceptable message\n        const message = `Server closed connection because can't parse protocol: ${JSON.stringify(\n          header.status\n        )}`;\n        this.emitReplyConnectionError(message, header, true);\n        log.error(message);\n        this.fsm.receiveFatalClose();\n      } else if (header.status.code === 417) {\n        // Protocol error\n        log.error(\n          `Server closed connection because can't parse client reply: ${JSON.stringify(\n            header.status\n          )}`\n        );\n        this.fsm.receiveFatalClose(header.status.status);\n      } else if (header.status.code === 410) {\n        // Expired token\n        log.warn(`Server closed connection: ${JSON.stringify(header.status)}`);\n        this.fsm.receiveClose(header.status.status);\n        this.emit(\"tokenExpired\");\n      } else if (header.status.code === 401) {\n        // Authentication fail\n        log.error(`Server closed connection: ${JSON.stringify(header.status)}`);\n        this.fsm.receiveClose(header.status.status);\n      } else {\n        log.warn(\"unexpected message: \", header.status);\n        // Try to reconnect\n        this.fsm.receiveOffload({ status: header.status.status, body: null });\n      }\n    }\n  }\n\n  private async sendInit(): Promise<void> {\n    log.trace(\"sendInit\");\n\n    try {\n      this.emit(\"beforeSendInit\"); // This is used by client to record startup telemetry event\n      const reply = await this.transport.sendInit();\n      this.config.updateContinuationToken(reply.continuationToken);\n      this.config.confirmedCapabilities = reply.confirmedCapabilities;\n      this.fsm.initSuccess(reply);\n      this.emit(\"initialized\", reply);\n      this.emit(\"tokenUpdated\");\n    } catch (ex) {\n      if (ex instanceof TwilsockReplyError) {\n        let isTerminalError = false;\n\n        log.warn(`Init rejected by server: ${JSON.stringify(ex.reply.status)}`);\n        this.emit(\"sendInitFailed\"); // This is used by client to record startup telemetry event\n        // @todo emit telemetry from inside \"if\" below for more granularity...\n\n        if (ex.reply.status.code === 401 || ex.reply.status.code === 403) {\n          isTerminalError = true;\n          this.fsm.tokenRejected(ex.reply.status);\n          if (ex.reply.status.errorCode === this.tokenExpiredSasCode) {\n            this.emit(\"tokenExpired\");\n          }\n        } else if (ex.reply.status.code === 429) {\n          this.modifyBackoff(ex.reply.body);\n          this.fsm.initError(true);\n        } else if (ex.reply.status.code === 500) {\n          this.fsm.initError(false);\n        } else {\n          this.fsm.initError(true);\n        }\n\n        this.emitReplyConnectionError(ex.message, ex.reply, isTerminalError);\n      } else {\n        this.terminationReason = ex.message;\n        this.emit(\"connectionError\", {\n          terminal: true,\n          message: `Unknown error during connection initialisation: ${\n            ex.message\n          }\\n${JSON.stringify(ex, null, 2)}`,\n          httpStatusCode: null,\n          errorCode: null,\n        });\n        this.fsm.initError(true);\n      }\n      this.emit(\"tokenUpdated\", ex);\n    }\n  }\n\n  private async sendUpdate(): Promise<void> {\n    log.trace(\"sendUpdate\");\n\n    const message = new Messages.Update(this.config.token);\n\n    try {\n      const reply = await this.transport.sendWithReply(message);\n      this.fsm.updateSuccess(reply.body);\n      this.emit(\"tokenUpdated\");\n    } catch (ex) {\n      if (ex instanceof TwilsockReplyError) {\n        let isTerminalError = false;\n        log.warn(\n          `Token update rejected by server: ${JSON.stringify(ex.reply.status)}`\n        );\n        if (ex.reply.status.code === 401 || ex.reply.status.code === 403) {\n          isTerminalError = true;\n          this.fsm.tokenRejected(ex.reply.status);\n          if (ex.reply.status.errorCode === this.tokenExpiredSasCode) {\n            this.emit(\"tokenExpired\");\n          }\n        } else if (ex.reply.status.code === 429) {\n          this.modifyBackoff(ex.reply.body);\n          this.fsm.updateError(ex.reply.status);\n        } else {\n          this.fsm.updateError(ex.reply.status);\n        }\n        this.emitReplyConnectionError(ex.message, ex.reply, isTerminalError);\n      } else {\n        this.emit(\"error\", false, ex.message, null, null);\n        this.fsm.updateError(ex);\n      }\n      this.emit(\"tokenUpdated\", ex);\n    }\n  }\n\n  private emitReplyConnectionError(\n    message: string,\n    header: Header | ReplyType,\n    terminal: boolean\n  ) {\n    const description =\n      header.status && header.status.description\n        ? header.status.description\n        : message;\n\n    const httpStatusCode = header.status.code;\n\n    const errorCode =\n      header.status && header.status.errorCode ? header.status.errorCode : null;\n\n    if (terminal) {\n      this.terminationReason = description;\n    }\n\n    this.emit(\"connectionError\", {\n      terminal: terminal,\n      message: `Connection error: ${description}`,\n      httpStatusCode: httpStatusCode,\n      errorCode: errorCode,\n    });\n  }\n\n  private cancelInit(): void {\n    log.trace(\"cancelInit\");\n    // TODO: implement\n  }\n\n  private cancelUpdate(): void {\n    log.trace(\"cancelUpdate\");\n    // TODO: implement\n  }\n\n  /**\n   * Should be called for each message to confirm it received\n   */\n\n  private confirmReceiving(messageHeader: Header) {\n    log.trace(\"confirmReceiving\");\n\n    try {\n      //@todo send telemetry events AnyEvents\n      this.transport.send(new Messages.Reply(messageHeader.id));\n    } catch (e) {\n      log.debug(\"failed to confirm packet receiving\", e);\n    }\n  }\n\n  /**\n   * Shutdown connection\n   */\n  private closeSocket(graceful: boolean): void {\n    log.trace(`closeSocket (graceful: ${graceful})`);\n\n    if (graceful && this.transport.isConnected) {\n      this.transport.sendClose();\n    }\n    this.websocket.close();\n\n    trampoline(() => this.fsm.socketClosed());\n  }\n\n  /**\n   * Initiate the twilsock connection\n   * If already connected, it does nothing\n   */\n  connect(): void {\n    log.trace(\"connect\");\n    this.fsm.userConnect();\n  }\n\n  /**\n   * Close twilsock connection\n   * If already disconnected, it does nothing\n   */\n  disconnect(): Promise<void> {\n    log.trace(\"disconnect\");\n\n    if (this.fsm.is(\"disconnected\")) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve) => {\n      this.disconnectedPromiseResolve = resolve;\n      this.fsm.userDisconnect();\n    });\n  }\n\n  /**\n   * Update fpa token for twilsock connection\n   */\n  public updateToken(token: string): Promise<void> {\n    log.trace(\"updateToken:\", token);\n\n    return new Promise((resolve, reject) => {\n      this.once(\"tokenUpdated\", (e) => {\n        if (e) {\n          reject(e);\n        } else {\n          resolve();\n        }\n      });\n\n      this.fsm.userUpdateToken();\n    });\n  }\n\n  public get isTerminalState(): boolean {\n    return this.terminalStates.indexOf(this.fsm.state) !== -1;\n  }\n\n  public get getTerminationReason(): string {\n    return this.terminationReason;\n  }\n\n  private onCloseReceived(): void {\n    this.websocket.close();\n  }\n}\n\nexport { Response, TwilsockChannel };\n"],"names":["ReplayEventEmitter","BackoffRetrier","log","StateMachine","Parser","TwilsockReplyError","Messages.Update","Messages.Reply"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,MAAM,qBAAqB,GAAG,IAAI,CAAC;AAEnC;AACA;AACA;AACA,SAAS,UAAU,CAAC,CAAa,EAAA;AAC/B,IAAA,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnB,CAAC;AA0BD;;AAEG;AACH,MAAM,eAAgB,SAAQA,qCAAyC,CAAA;AAmBrE,IAAA,WAAA,CACE,SAA2B,EAC3B,SAA0B,EAC1B,MAAqB,EAAA;AAErB,QAAA,KAAK,EAAE,CAAC;QAnBF,IAAkB,CAAA,kBAAA,GAAyC,IAAI,CAAC;QAEhE,IAA0B,CAAA,0BAAA,GAAwB,IAAI,CAAC;AAM9C,QAAA,IAAA,CAAA,cAAc,GAAkB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;QAE7D,IAAmB,CAAA,mBAAA,GAAG,KAAK,CAAC;QAErC,IAAiB,CAAA,iBAAA,GAAG,+BAA+B,CAAC;AAS1D,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;AACjE,QAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,cAAc,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AACjE,QAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,OAAO,KACnC,IAAI,CAAC,iBAAiB,CAAC,OAAsB,CAAC,CAC/C,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,KAAI;AACrC,YAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAC3B,gBAAA,QAAQ,EAAE,KAAK;AACf,gBAAA,OAAO,EAAE,CAAA,cAAA,EAAiB,CAAC,CAAC,OAAO,CAAE,CAAA;AACrC,gBAAA,cAAc,EAAE,IAAI;AACpB,gBAAA,SAAS,EAAE,IAAI;AAChB,aAAA,CAAC,CAAC;AACH,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;AACxC,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG,IAAIC,6BAAc,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,KAAI;YAChCC,UAAG,CAAC,IAAI,CAAC,CAAA,iBAAA,EAAoB,GAAG,CAAC,OAAO,CAAE,CAAA,CAAC,CAAC;YAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,SAAC,CAAC,CAAC;QAEH,IACE,OAAO,MAAM,KAAK,WAAW;AAC7B,YAAA,OAAO,MAAM,CAAC,gBAAgB,KAAK,WAAW,EAC9C;AACA,YAAA,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;AACrC,gBAAAA,UAAG,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC1B,aAAC,CAAC,CAAC;AAEH,YAAA,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAK;AACtC,gBAAAA,UAAG,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;AAC1D,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AACvB,gBAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC1B,aAAC,CAAC,CAAC;AACJ,SAAA;;;;;AAOD,QAAA,MAAM,oBAAoB,GAAiBC,uBAAY,CAAC,OAAO,CAAC;AAC9D,YAAA,IAAI,EAAE,cAAc;AACpB,YAAA,WAAW,EAAE;AACX,gBAAA;AACE,oBAAA,IAAI,EAAE,aAAa;AACnB,oBAAA,IAAI,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC;AAClC,oBAAA,EAAE,EAAE,YAAY;AACjB,iBAAA;gBACD,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC,EAAE;AAC1D,gBAAA;AACE,oBAAA,IAAI,EAAE,gBAAgB;AACtB,oBAAA,IAAI,EAAE;wBACJ,YAAY;wBACZ,cAAc;wBACd,WAAW;wBACX,UAAU;wBACV,UAAU;wBACV,UAAU;wBACV,kBAAkB;wBAClB,yBAAyB;AAC1B,qBAAA;AACD,oBAAA,EAAE,EAAE,eAAe;AACpB,iBAAA;AACD,gBAAA,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE;AAC3D,gBAAA,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE;AACrE,gBAAA;AACE,oBAAA,IAAI,EAAE,cAAc;AACpB,oBAAA,IAAI,EAAE;wBACJ,YAAY;wBACZ,cAAc;wBACd,WAAW;wBACX,UAAU;wBACV,OAAO;wBACP,yBAAyB;AAC1B,qBAAA;AACD,oBAAA,EAAE,EAAE,UAAU;AACf,iBAAA;AACD,gBAAA,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE;AACrE,gBAAA;AACE,oBAAA,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,CAAC,kBAAkB,CAAC;AAC1B,oBAAA,EAAE,EAAE,cAAc;AACnB,iBAAA;AACD,gBAAA,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE;AAC5D,gBAAA,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE;AAChE,gBAAA,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE;AAC1D,gBAAA;AACE,oBAAA,IAAI,EAAE,eAAe;AACrB,oBAAA,IAAI,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC;AAClC,oBAAA,EAAE,EAAE,UAAU;AACf,iBAAA;AACD,gBAAA;AACE,oBAAA,IAAI,EAAE,eAAe;AACrB,oBAAA,IAAI,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,CAAC;AAC/C,oBAAA,EAAE,EAAE,OAAO;AACZ,iBAAA;AACD,gBAAA;AACE,oBAAA,IAAI,EAAE,cAAc;AACpB,oBAAA,IAAI,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,CAAC;AAC/C,oBAAA,EAAE,EAAE,kBAAkB;AACvB,iBAAA;AACD,gBAAA;AACE,oBAAA,IAAI,EAAE,gBAAgB;AACtB,oBAAA,IAAI,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,CAAC;AAC/C,oBAAA,EAAE,EAAE,yBAAyB;AAC9B,iBAAA;AACD,gBAAA;AACE,oBAAA,IAAI,EAAE,qBAAqB;AAC3B,oBAAA,IAAI,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,CAAC;AAC/C,oBAAA,EAAE,EAAE,aAAa;AAClB,iBAAA;AACD,gBAAA;AACE,oBAAA,IAAI,EAAE,mBAAmB;AACzB,oBAAA,IAAI,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,CAAC;AAC/C,oBAAA,EAAE,EAAE,aAAa;AAClB,iBAAA;AACD,gBAAA;AACE,oBAAA,IAAI,EAAE,iBAAiB;oBACvB,IAAI,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC;AAC5D,oBAAA,EAAE,EAAE,YAAY;AACjB,iBAAA;AACD,gBAAA,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE;AAChE,gBAAA,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE;AAC9D,gBAAA,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE;AACxD,gBAAA,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE;AAC1D,gBAAA,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE;AAC/D,aAAA;AACD,YAAA,OAAO,EAAE;gBACP,YAAY,EAAE,MAAK;oBACjB,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,oBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACzB;gBACD,mBAAmB,EAAE,MAAK;oBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;gBACD,mBAAmB,EAAE,MAAK;oBACxB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;gBACD,eAAe,EAAE,MAAK;oBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;gBACD,eAAe,EAAE,MAAK;oBACpB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;gBACD,eAAe,EAAE,MAAK;oBACpB,IAAI,CAAC,SAAS,EAAE,CAAC;AACjB,oBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACzB;gBACD,gBAAgB,EAAE,MAAK;oBACrB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;gBACD,iBAAiB,EAAE,MAAK;oBACtB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;gBACD,eAAe,EAAE,MAAK;oBACpB,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,oBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;gBACD,gBAAgB,EAAE,MAAK;AACrB,oBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBACxB;gBACD,oBAAoB,EAAE,MAAK;oBACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC7B;gBACD,oBAAoB,EAAE,MAAK;oBACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;gBACD,uBAAuB,EAAE,MAAK;oBAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC7B;gBACD,uBAAuB,EAAE,MAAK;oBAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;gBACD,8BAA8B,EAAE,MAAK;oBACnC,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC7B;gBACD,8BAA8B,EAAE,MAAK;oBACnC,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;gBACD,cAAc,EAAE,MAAK;oBACnB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;gBACD,cAAc,EAAE,MAAK;oBACnB,IAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;AACD,gBAAA,gBAAgB,EAAE,CAAC,KAAK,EAAE,IAAI,KAAI;AAChC,oBAAAD,UAAG,CAAC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;AACtC,oBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;gBACD,aAAa,EAAE,MAAK;AAClB,oBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;AACD,gBAAA,OAAO,EAAE,CAAC,SAAS,EAAE,QAAiB,KAAI;AACxC,oBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;iBACvB;AACD,gBAAA,YAAY,EAAE,CAAC,KAAK,KAAI;AACtB,oBAAA,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;AACzB,wBAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACzB,qBAAA;iBACF;gBACD,mBAAmB,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,KAAI;oBAC5CA,UAAG,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;iBAClD;AACF,aAAA;AACF,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,GAAG,GAAG,IAAI,oBAAoB,EAAE,CAAC;KACvC;AAEO,IAAA,WAAW,CAAC,KAInB,EAAA;AACC,QAAAA,UAAG,CAAC,KAAK,CAAC,CAAQ,KAAA,EAAA,KAAK,CAAC,UAAU,CAAA,EAAA,EAAK,KAAK,CAAC,IAAI,CAAQ,KAAA,EAAA,KAAK,CAAC,EAAE,CAAA,CAAE,CAAC,CAAC;AAErE,QAAA,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,KAAK,EAAE;AACxC,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACvC,SAAA;KACF;IAEO,YAAY,GAAA;AAClB,QAAAA,UAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;AAEO,IAAA,aAAa,CAAC,IAAI,EAAA;AACxB,QAAAA,UAAG,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;AAEjC,QAAA,MAAM,aAAa,GAAG,IAAI,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAExD,IAAI,aAAa,IAAI,OAAO,aAAa,CAAC,gBAAgB,KAAK,QAAQ,EAAE;YACvE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;AAC5D,SAAA;KACF;IAEO,oBAAoB,GAAA;AAC1B,QAAAA,UAAG,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC3B,YAAA,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAChC,SAAA;AAED,QAAA,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,MAAK;AACxC,YAAAA,UAAG,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;AACxC,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB,EAAE,qBAAqB,CAAC,CAAC;KAC3B;IAEO,qBAAqB,GAAA;AAC3B,QAAAA,UAAG,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAEnC,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC3B,YAAA,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAChC,SAAA;KACF;AAED,IAAA,IAAW,WAAW,GAAA;QACpB,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;KACjE;AAED,IAAA,IAAW,KAAK,GAAA;AACd,QAAA,QAAQ,IAAI,CAAC,GAAG,CAAC,KAAK;AACpB,YAAA,KAAK,YAAY,CAAC;AAClB,YAAA,KAAK,cAAc,CAAC;AACpB,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,OAAO;AACV,gBAAA,OAAO,YAAY,CAAC;AACtB,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,WAAW;AACd,gBAAA,OAAO,WAAW,CAAC;AACrB,YAAA,KAAK,UAAU;AACb,gBAAA,OAAO,QAAQ,CAAC;AAClB,YAAA,KAAK,eAAe,CAAC;AACrB,YAAA,KAAK,kBAAkB,CAAC;AACxB,YAAA,KAAK,yBAAyB;AAC5B,gBAAA,OAAO,eAAe,CAAC;AACzB,YAAA,KAAK,cAAc,CAAC;AACpB,YAAA;AACE,gBAAA,OAAO,cAAc,CAAC;AACzB,SAAA;KACF;IAEO,SAAS,GAAA;AACf,QAAAA,UAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACvB,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AAC3B,YAAA,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;AAC9B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACtB,SAAA;KACF;IAEO,KAAK,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,YAAY,EAAE;AAClC,YAAAA,UAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AACvB,YAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;AACtB,SAAA;AAAM,aAAA;AACL,YAAAA,UAAG,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;AAChD,SAAA;KACF;IAEO,WAAW,GAAA;AACjB,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACxB;IAEO,cAAc,GAAA;AACpB,QAAAA,UAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAE5B,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,0BAA0B,EAAE;YACnC,IAAI,CAAC,0BAA0B,EAAE,CAAC;AAClC,YAAA,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;AACxC,SAAA;KACF;IAEO,WAAW,GAAA;QACjBA,UAAG,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;KAC1B;AAEO,IAAA,iBAAiB,CAAC,OAAoB,EAAA;QAC5C,MAAM,aAAa,GAAGE,aAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO;AACR,SAAA;QACD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,aAAa,CAAC;QAElD,IAAI,MAAM,KAAK,OAAO,EAAE;AACtB,YAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;QAED,IAAI,MAAM,KAAK,cAAc,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AACpD,SAAA;AAAM,aAAA,IAAI,MAAM,CAAC,MAAM,KAAK,OAAO,EAAE;AACpC,YAAA,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;gBAC1B,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,MAAM,EAAE,MAAM,CAAC,MAAM;AACrB,gBAAA,MAAM,EAAE,MAAM;AACd,gBAAA,IAAI,EAAE,OAAO;AACd,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA,IAAI,MAAM,CAAC,MAAM,KAAK,eAAe,EAAE;AAC5C,YAAA,IAAI,MAAM,CAAC,kBAAkB,KAAK,uBAAuB,EAAE;AACzD,gBAAA,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACjC,aAAA;AACF,SAAA;AAAM,aAAA,IAAI,MAAM,CAAC,MAAM,KAAK,OAAO,EAAE;AACpC,YAAA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;AAC9B,gBAAAF,UAAG,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;AAC3C,gBAAA,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;AACtB,oBAAA,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM;AAC5B,oBAAA,IAAI,EAAE,OAAO;AACd,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;;AAErC,gBAAA,MAAM,OAAO,GAAG,CAA0D,uDAAA,EAAA,IAAI,CAAC,SAAS,CACtF,MAAM,CAAC,MAAM,CACd,CAAA,CAAE,CAAC;gBACJ,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACrD,gBAAAA,UAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACnB,gBAAA,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;AAC9B,aAAA;AAAM,iBAAA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;;AAErC,gBAAAA,UAAG,CAAC,KAAK,CACP,CAAA,2DAAA,EAA8D,IAAI,CAAC,SAAS,CAC1E,MAAM,CAAC,MAAM,CACd,CAAA,CAAE,CACJ,CAAC;gBACF,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAClD,aAAA;AAAM,iBAAA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;;AAErC,gBAAAA,UAAG,CAAC,IAAI,CAAC,CAAA,0BAAA,EAA6B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;gBACvE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5C,gBAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3B,aAAA;AAAM,iBAAA,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;;AAErC,gBAAAA,UAAG,CAAC,KAAK,CAAC,CAAA,0BAAA,EAA6B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;gBACxE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7C,aAAA;AAAM,iBAAA;gBACLA,UAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;;AAEhD,gBAAA,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AACvE,aAAA;AACF,SAAA;KACF;AAEO,IAAA,MAAM,QAAQ,GAAA;AACpB,QAAAA,UAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAEtB,IAAI;AACF,YAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC5B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,qBAAqB,GAAG,KAAK,CAAC,qBAAqB,CAAC;AAChE,YAAA,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5B,YAAA,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3B,SAAA;AAAC,QAAA,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,YAAYG,qCAAkB,EAAE;gBACpC,IAAI,eAAe,GAAG,KAAK,CAAC;AAE5B,gBAAAH,UAAG,CAAC,IAAI,CAAC,CAA4B,yBAAA,EAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;AACxE,gBAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;AAG5B,gBAAA,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;oBAChE,eAAe,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,KAAK,IAAI,CAAC,mBAAmB,EAAE;AAC1D,wBAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3B,qBAAA;AACF,iBAAA;qBAAM,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;oBACvC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClC,oBAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC1B,iBAAA;qBAAM,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;AACvC,oBAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC3B,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC1B,iBAAA;AAED,gBAAA,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;AACtE,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,OAAO,CAAC;AACpC,gBAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAC3B,oBAAA,QAAQ,EAAE,IAAI;AACd,oBAAA,OAAO,EAAE,CACP,gDAAA,EAAA,EAAE,CAAC,OACL,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAE,CAAA;AAClC,oBAAA,cAAc,EAAE,IAAI;AACpB,oBAAA,SAAS,EAAE,IAAI;AAChB,iBAAA,CAAC,CAAC;AACH,gBAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC1B,aAAA;AACD,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AAC/B,SAAA;KACF;AAEO,IAAA,MAAM,UAAU,GAAA;AACtB,QAAAA,UAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAExB,QAAA,MAAM,OAAO,GAAG,IAAII,aAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEvD,IAAI;YACF,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACnC,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3B,SAAA;AAAC,QAAA,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,YAAYD,qCAAkB,EAAE;gBACpC,IAAI,eAAe,GAAG,KAAK,CAAC;AAC5B,gBAAAH,UAAG,CAAC,IAAI,CACN,CAAoC,iCAAA,EAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAE,CACtE,CAAC;AACF,gBAAA,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;oBAChE,eAAe,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,KAAK,IAAI,CAAC,mBAAmB,EAAE;AAC1D,wBAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3B,qBAAA;AACF,iBAAA;qBAAM,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;oBACvC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAClC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACvC,iBAAA;AAAM,qBAAA;oBACL,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACvC,iBAAA;AACD,gBAAA,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;AACtE,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAClD,gBAAA,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AAC1B,aAAA;AACD,YAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AAC/B,SAAA;KACF;AAEO,IAAA,wBAAwB,CAC9B,OAAe,EACf,MAA0B,EAC1B,QAAiB,EAAA;QAEjB,MAAM,WAAW,GACf,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW;AACxC,cAAE,MAAM,CAAC,MAAM,CAAC,WAAW;cACzB,OAAO,CAAC;AAEd,QAAA,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QAE1C,MAAM,SAAS,GACb,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AAE5E,QAAA,IAAI,QAAQ,EAAE;AACZ,YAAA,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;AACtC,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAC3B,YAAA,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,CAAqB,kBAAA,EAAA,WAAW,CAAE,CAAA;AAC3C,YAAA,cAAc,EAAE,cAAc;AAC9B,YAAA,SAAS,EAAE,SAAS;AACrB,SAAA,CAAC,CAAC;KACJ;IAEO,UAAU,GAAA;AAChB,QAAAA,UAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;;KAEzB;IAEO,YAAY,GAAA;AAClB,QAAAA,UAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;;KAE3B;AAED;;AAEG;AAEK,IAAA,gBAAgB,CAAC,aAAqB,EAAA;AAC5C,QAAAA,UAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAE9B,IAAI;;AAEF,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAIK,WAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;AACV,YAAAL,UAAG,CAAC,KAAK,CAAC,oCAAoC,EAAE,CAAC,CAAC,CAAC;AACpD,SAAA;KACF;AAED;;AAEG;AACK,IAAA,WAAW,CAAC,QAAiB,EAAA;AACnC,QAAAA,UAAG,CAAC,KAAK,CAAC,0BAA0B,QAAQ,CAAA,CAAA,CAAG,CAAC,CAAC;AAEjD,QAAA,IAAI,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;AAC1C,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;AAC5B,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAEvB,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;KAC3C;AAED;;;AAGG;IACH,OAAO,GAAA;AACL,QAAAA,UAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACrB,QAAA,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;KACxB;AAED;;;AAGG;IACH,UAAU,GAAA;AACR,QAAAA,UAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAExB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE;AAC/B,YAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;AAC1B,SAAA;AAED,QAAA,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAI;AAC7B,YAAA,IAAI,CAAC,0BAA0B,GAAG,OAAO,CAAC;AAC1C,YAAA,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;AAC5B,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;AACI,IAAA,WAAW,CAAC,KAAa,EAAA;AAC9B,QAAAA,UAAG,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAEjC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,KAAI;AAC9B,gBAAA,IAAI,CAAC,EAAE;oBACL,MAAM,CAAC,CAAC,CAAC,CAAC;AACX,iBAAA;AAAM,qBAAA;AACL,oBAAA,OAAO,EAAE,CAAC;AACX,iBAAA;AACH,aAAC,CAAC,CAAC;AAEH,YAAA,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;AAC7B,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,IAAW,eAAe,GAAA;AACxB,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;KAC3D;AAED,IAAA,IAAW,oBAAoB,GAAA;QAC7B,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IAEO,eAAe,GAAA;AACrB,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;AACF;;;;"}