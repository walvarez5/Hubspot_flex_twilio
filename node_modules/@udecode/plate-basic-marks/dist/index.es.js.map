{"version":3,"file":"index.es.js","sources":["../src/bold/defaults.ts","../src/bold/getBoldDeserialize.ts","../src/bold/createBoldPlugin.ts","../src/code/defaults.ts","../src/code/getCodeDeserialize.ts","../src/code/createCodePlugin.ts","../src/italic/defaults.ts","../src/italic/getItalicDeserialize.ts","../src/italic/createItalicPlugin.ts","../src/strikethrough/defaults.ts","../src/strikethrough/getStrikethroughDeserialize.ts","../src/strikethrough/createStrikethroughPlugin.ts","../src/subscript/defaults.ts","../src/subscript/getSubscriptDeserialize.ts","../src/subscript/createSubscriptPlugin.ts","../src/superscript/defaults.ts","../src/superscript/getSuperscriptDeserialize.ts","../src/superscript/createSuperscriptPlugin.ts","../src/underline/defaults.ts","../src/underline/getUnderlineDeserialize.ts","../src/underline/createUnderlinePlugin.ts","../src/createBasicMarkPlugins.ts"],"sourcesContent":["import { PlatePluginOptions } from '@udecode/plate-core';\n\nexport const MARK_BOLD = 'bold';\n\nexport const DEFAULTS_BOLD: Partial<PlatePluginOptions> = {\n  hotkey: 'mod+b',\n};\n","import { getLeafDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { MARK_BOLD } from './defaults';\n\nexport const getBoldDeserialize = (): Deserialize => (editor) => {\n  const options = getPlatePluginOptions(editor, MARK_BOLD);\n\n  return {\n    leaf: getLeafDeserializer({\n      type: options.type,\n      rules: [\n        { nodeNames: ['STRONG'] },\n        {\n          style: {\n            fontWeight: ['600', '700', 'bold'],\n          },\n        },\n      ],\n      ...options.deserialize,\n    }),\n  };\n};\n","import { getToggleMarkOnKeyDown } from '@udecode/plate-common';\nimport { getRenderLeaf, PlatePlugin } from '@udecode/plate-core';\nimport { MARK_BOLD } from './defaults';\nimport { getBoldDeserialize } from './getBoldDeserialize';\n\n/**\n * Enables support for bold formatting\n */\nexport const createBoldPlugin = (): PlatePlugin => ({\n  pluginKeys: MARK_BOLD,\n  renderLeaf: getRenderLeaf(MARK_BOLD),\n  deserialize: getBoldDeserialize(),\n  onKeyDown: getToggleMarkOnKeyDown(MARK_BOLD),\n});\n","import { PlatePluginOptions } from '@udecode/plate-core';\n\nexport const MARK_CODE = 'code';\n\nexport const DEFAULTS_CODE: Partial<PlatePluginOptions> = {\n  hotkey: 'mod+e',\n};\n","import { getLeafDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { MARK_CODE } from './defaults';\n\nexport const getCodeDeserialize = (): Deserialize => (editor) => {\n  const options = getPlatePluginOptions(editor, MARK_CODE);\n\n  return {\n    leaf: getLeafDeserializer({\n      type: options.type,\n      rules: [\n        { nodeNames: ['CODE'] },\n        {\n          style: {\n            wordWrap: 'break-word',\n          },\n        },\n      ],\n      ...options.deserialize,\n    }),\n  };\n};\n","import { getToggleMarkOnKeyDown } from '@udecode/plate-common';\nimport { getRenderLeaf, PlatePlugin } from '@udecode/plate-core';\nimport { MARK_CODE } from './defaults';\nimport { getCodeDeserialize } from './getCodeDeserialize';\n\n/**\n * Enables support for code formatting\n */\nexport const createCodePlugin = (): PlatePlugin => ({\n  pluginKeys: MARK_CODE,\n  renderLeaf: getRenderLeaf(MARK_CODE),\n  deserialize: getCodeDeserialize(),\n  onKeyDown: getToggleMarkOnKeyDown(MARK_CODE),\n});\n","import { PlatePluginOptions } from '@udecode/plate-core';\n\nexport const MARK_ITALIC = 'italic';\n\nexport const DEFAULTS_ITALIC: Partial<PlatePluginOptions> = {\n  hotkey: 'mod+i',\n};\n","import { getLeafDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { MARK_ITALIC } from './defaults';\n\nexport const getItalicDeserialize = (): Deserialize => (editor) => {\n  const options = getPlatePluginOptions(editor, MARK_ITALIC);\n\n  return {\n    leaf: getLeafDeserializer({\n      type: options.type,\n      rules: [\n        { nodeNames: ['EM', 'I'] },\n        {\n          style: {\n            fontStyle: 'italic',\n          },\n        },\n      ],\n      ...options.deserialize,\n    }),\n  };\n};\n","import { getToggleMarkOnKeyDown } from '@udecode/plate-common';\nimport { getRenderLeaf, PlatePlugin } from '@udecode/plate-core';\nimport { MARK_ITALIC } from './defaults';\nimport { getItalicDeserialize } from './getItalicDeserialize';\n\n/**\n * Enables support for italic formatting.\n */\nexport const createItalicPlugin = (): PlatePlugin => ({\n  pluginKeys: MARK_ITALIC,\n  renderLeaf: getRenderLeaf(MARK_ITALIC),\n  deserialize: getItalicDeserialize(),\n  onKeyDown: getToggleMarkOnKeyDown(MARK_ITALIC),\n});\n","import { PlatePluginOptions } from '@udecode/plate-core';\n\nexport const MARK_STRIKETHROUGH = 'strikethrough';\n\nexport const DEFAULTS_STRIKETHROUGH: Partial<PlatePluginOptions> = {\n  hotkey: 'mod+shift+s',\n};\n","import { getLeafDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { MARK_STRIKETHROUGH } from './defaults';\n\nexport const getStrikethroughDeserialize = (): Deserialize => (editor) => {\n  const options = getPlatePluginOptions(editor, MARK_STRIKETHROUGH);\n\n  return {\n    leaf: getLeafDeserializer({\n      type: options.type,\n      rules: [\n        { nodeNames: ['S', 'DEL', 'STRIKE'] },\n        {\n          style: {\n            textDecoration: 'line-through',\n          },\n        },\n      ],\n      ...options.deserialize,\n    }),\n  };\n};\n","import { getToggleMarkOnKeyDown } from '@udecode/plate-common';\nimport { getRenderLeaf, PlatePlugin } from '@udecode/plate-core';\nimport { MARK_STRIKETHROUGH } from './defaults';\nimport { getStrikethroughDeserialize } from './getStrikethroughDeserialize';\n\n/**\n * Enables support for strikethrough formatting.\n */\nexport const createStrikethroughPlugin = (): PlatePlugin => ({\n  pluginKeys: MARK_STRIKETHROUGH,\n  renderLeaf: getRenderLeaf(MARK_STRIKETHROUGH),\n  deserialize: getStrikethroughDeserialize(),\n  onKeyDown: getToggleMarkOnKeyDown(MARK_STRIKETHROUGH),\n});\n","import { PlatePluginOptions } from '@udecode/plate-core';\n\nexport const MARK_SUBSCRIPT = 'subscript';\nexport const DEFAULTS_SUBSCRIPT: Partial<PlatePluginOptions> = {\n  hotkey: 'mod+.',\n  clear: MARK_SUBSCRIPT,\n};\n","import { getLeafDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { MARK_SUBSCRIPT } from './defaults';\n\nexport const getSubscriptDeserialize = (): Deserialize => (editor) => {\n  const options = getPlatePluginOptions(editor, MARK_SUBSCRIPT);\n\n  return {\n    leaf: getLeafDeserializer({\n      type: options.type,\n      rules: [\n        { nodeNames: ['SUB'] },\n        {\n          style: {\n            verticalAlign: 'sub',\n          },\n        },\n      ],\n      ...options.deserialize,\n    }),\n  };\n};\n","import { getToggleMarkOnKeyDown } from '@udecode/plate-common';\nimport { getRenderLeaf, PlatePlugin } from '@udecode/plate-core';\nimport { MARK_SUBSCRIPT } from './defaults';\nimport { getSubscriptDeserialize } from './getSubscriptDeserialize';\n\n/**\n * Enables support for subscript formatting.\n */\nexport const createSubscriptPlugin = (): PlatePlugin => ({\n  pluginKeys: MARK_SUBSCRIPT,\n  renderLeaf: getRenderLeaf(MARK_SUBSCRIPT),\n  deserialize: getSubscriptDeserialize(),\n  onKeyDown: getToggleMarkOnKeyDown(MARK_SUBSCRIPT),\n});\n","import { PlatePluginOptions } from '@udecode/plate-core';\n\nexport const MARK_SUPERSCRIPT = 'superscript';\n\nexport const DEFAULTS_SUPERSCRIPT: Partial<PlatePluginOptions> = {\n  hotkey: 'mod+,',\n  clear: MARK_SUPERSCRIPT,\n};\n","import { getLeafDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { MARK_SUPERSCRIPT } from './defaults';\n\nexport const getSuperscriptDeserialize = (): Deserialize => (editor) => {\n  const options = getPlatePluginOptions(editor, MARK_SUPERSCRIPT);\n\n  return {\n    leaf: getLeafDeserializer({\n      type: options.type,\n      rules: [\n        { nodeNames: ['SUP'] },\n        {\n          style: {\n            verticalAlign: 'super',\n          },\n        },\n      ],\n      ...options.deserialize,\n    }),\n  };\n};\n","import { getToggleMarkOnKeyDown } from '@udecode/plate-common';\nimport { getRenderLeaf, PlatePlugin } from '@udecode/plate-core';\nimport { MARK_SUPERSCRIPT } from './defaults';\nimport { getSuperscriptDeserialize } from './getSuperscriptDeserialize';\n\n/**\n * Enables support for superscript formatting.\n */\nexport const createSuperscriptPlugin = (): PlatePlugin => ({\n  pluginKeys: MARK_SUPERSCRIPT,\n  renderLeaf: getRenderLeaf(MARK_SUPERSCRIPT),\n  deserialize: getSuperscriptDeserialize(),\n  onKeyDown: getToggleMarkOnKeyDown(MARK_SUPERSCRIPT),\n});\n","import { PlatePluginOptions } from '@udecode/plate-core';\n\nexport const MARK_UNDERLINE = 'underline';\n\nexport const DEFAULTS_UNDERLINE: Partial<PlatePluginOptions> = {\n  hotkey: 'mod+u',\n};\n","import { getLeafDeserializer } from '@udecode/plate-common';\nimport { Deserialize, getPlatePluginOptions } from '@udecode/plate-core';\nimport { MARK_UNDERLINE } from './defaults';\n\nexport const getUnderlineDeserialize = (): Deserialize => (editor) => {\n  const options = getPlatePluginOptions(editor, MARK_UNDERLINE);\n\n  return {\n    leaf: getLeafDeserializer({\n      type: options.type,\n      rules: [\n        { nodeNames: ['U'] },\n        {\n          style: {\n            textDecoration: 'underline',\n          },\n        },\n      ],\n      ...options.deserialize,\n    }),\n  };\n};\n","import { getToggleMarkOnKeyDown } from '@udecode/plate-common';\nimport { getRenderLeaf, PlatePlugin } from '@udecode/plate-core';\nimport { MARK_UNDERLINE } from './defaults';\nimport { getUnderlineDeserialize } from './getUnderlineDeserialize';\n\n/**\n * Enables support for underline formatting.\n */\nexport const createUnderlinePlugin = (): PlatePlugin => ({\n  pluginKeys: MARK_UNDERLINE,\n  renderLeaf: getRenderLeaf(MARK_UNDERLINE),\n  deserialize: getUnderlineDeserialize(),\n  onKeyDown: getToggleMarkOnKeyDown(MARK_UNDERLINE),\n});\n","import { PlatePlugin } from '@udecode/plate-core';\nimport { createBoldPlugin } from './bold/createBoldPlugin';\nimport { createCodePlugin } from './code/createCodePlugin';\nimport { createItalicPlugin } from './italic/createItalicPlugin';\nimport { createStrikethroughPlugin } from './strikethrough/createStrikethroughPlugin';\nimport { createSubscriptPlugin } from './subscript/createSubscriptPlugin';\nimport { createSuperscriptPlugin } from './superscript/createSuperscriptPlugin';\nimport { createUnderlinePlugin } from './underline/createUnderlinePlugin';\n\n/**\n * Enables support for basic marks:\n * - Bold\n * - Code\n * - Italic\n * - Strikethrough\n * - Subscript\n * - Superscript\n * - Underline\n */\nexport const createBasicMarkPlugins = (): PlatePlugin[] => [\n  createBoldPlugin(),\n  createCodePlugin(),\n  createItalicPlugin(),\n  createStrikethroughPlugin(),\n  createSubscriptPlugin(),\n  createSuperscriptPlugin(),\n  createUnderlinePlugin(),\n];\n"],"names":["MARK_BOLD","DEFAULTS_BOLD","hotkey","getBoldDeserialize","editor","options","getPlatePluginOptions","leaf","getLeafDeserializer","type","rules","nodeNames","style","fontWeight","deserialize","createBoldPlugin","pluginKeys","renderLeaf","getRenderLeaf","onKeyDown","getToggleMarkOnKeyDown","MARK_CODE","DEFAULTS_CODE","getCodeDeserialize","wordWrap","createCodePlugin","MARK_ITALIC","DEFAULTS_ITALIC","getItalicDeserialize","fontStyle","createItalicPlugin","MARK_STRIKETHROUGH","DEFAULTS_STRIKETHROUGH","getStrikethroughDeserialize","textDecoration","createStrikethroughPlugin","MARK_SUBSCRIPT","DEFAULTS_SUBSCRIPT","clear","getSubscriptDeserialize","verticalAlign","createSubscriptPlugin","MARK_SUPERSCRIPT","DEFAULTS_SUPERSCRIPT","getSuperscriptDeserialize","createSuperscriptPlugin","MARK_UNDERLINE","DEFAULTS_UNDERLINE","getUnderlineDeserialize","createUnderlinePlugin","createBasicMarkPlugins"],"mappings":"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"}