{"version":3,"file":"entity.js","sources":["../src/entity.ts"],"sourcesContent":["\nimport { Services, Network, Router, Storage } from './interfaces/services';\nimport { SyncError } from './utils/syncerror';\nimport { Closeable } from './closeable';\n\ninterface EntityServices {\n  network: Network;\n  router: Router;\n  storage: Storage;\n}\n\ntype RemovalHandler = (type: string, sid: string, uniqueName: string) => void;\nexport type SubscriptionState = 'none' | 'request_in_flight' | 'response_in_flight' | 'established';\n\nabstract class SyncEntity {\n  protected readonly services: EntityServices;\n  protected readonly removalHandler: RemovalHandler;\n  private subscriptionState: SubscriptionState;\n  private readonly _attachedListeners: Map<string, Closeable>;\n\n  protected constructor(services: EntityServices, removalHandler: RemovalHandler) {\n    this.services = services;\n    this.removalHandler = removalHandler;\n    this.subscriptionState = 'none';\n    this._attachedListeners = new Map<string, Closeable>();\n  }\n\n  abstract get sid(): string;\n\n  abstract get uniqueName(): string;\n\n  abstract get type(): string;\n\n  abstract get lastEventId(): number;\n\n  abstract get indexName(): string;\n\n  abstract get queryString(): string;\n\n  abstract _update(update: any, isStrictlyOrdered: boolean): void;\n\n  _advanceLastEventId(eventId: number, revision?: string): void {\n  }\n\n  protected abstract onRemoved(locally: boolean): void;\n\n  reportFailure(err: SyncError): void {\n    if (err.status === 404) {\n      // assume that 404 means that entity has been removed while we were away\n      this.onRemoved(false);\n    } else {\n      this.broadcastEventToListeners('failure', err);\n    }\n  }\n\n  /**\n   * Subscribe to changes of data entity\n   * @private\n   */\n  _subscribe() {\n    this.services.router._subscribe(this.sid, this);\n  }\n\n  /**\n   * Unsubscribe from changes of current data entity\n   * @private\n   */\n  _unsubscribe() {\n    this.services.router._unsubscribe(this.sid);\n  }\n\n  _setSubscriptionState(newState: SubscriptionState): void {\n    this.subscriptionState = newState;\n    this.broadcastEventToListeners('_subscriptionStateChanged', newState);\n  }\n\n  /**\n   * @public\n   */\n  close() {\n    this._unsubscribe();\n    if (this.removalHandler != null) {\n      this.removalHandler(this.type, this.sid, this.uniqueName);\n    }\n  }\n\n  public attach(closeable: Closeable): void {\n    const uuid = closeable.listenerUuid;\n    const existingRecord = this._attachedListeners.get(uuid);\n    if (existingRecord) {\n      return;\n    }\n\n    if (!this._attachedListeners.size) {\n      // the first one to arrive\n      this._subscribe();\n    }\n\n    this._attachedListeners.set(uuid, closeable);\n  }\n\n  public detach(listenerUuid: string): void {\n    this._attachedListeners.delete(listenerUuid);\n    if (!this._attachedListeners.size) {\n      // last one out, turn off lights, shut the door\n      this.close(); // invokes unsubscribe and removal handler\n    }\n  }\n\n  protected broadcastEventToListeners(eventName: string, args: any) {\n    for (let listener of this._attachedListeners.values()) {\n      listener.emit(eventName, args);\n    }\n  }\n}\n\nexport { Services, EntityServices, RemovalHandler, SyncEntity };\nexport default SyncEntity;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,MAAe,UAAU;IAMvB,YAAsB,QAAwB,EAAE,cAA8B;QAC5E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAqB,CAAC;KACxD;IAgBD,mBAAmB,CAAC,OAAe,EAAE,QAAiB;KACrD;IAID,aAAa,CAAC,GAAc;QAC1B,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;;YAEtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;SAChD;KACF;;;;;IAMD,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACjD;;;;;IAMD,YAAY;QACV,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7C;IAED,qBAAqB,CAAC,QAA2B;QAC/C,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAClC,IAAI,CAAC,yBAAyB,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;KACvE;;;;IAKD,KAAK;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3D;KACF;IAEM,MAAM,CAAC,SAAoB;QAChC,MAAM,IAAI,GAAG,SAAS,CAAC,YAAY,CAAC;QACpC,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,cAAc,EAAE;YAClB,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE;;YAEjC,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KAC9C;IAEM,MAAM,CAAC,YAAoB;QAChC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE;;YAEjC,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAES,yBAAyB,CAAC,SAAiB,EAAE,IAAS;QAC9D,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE;YACrD,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SAChC;KACF;;;;;;"}