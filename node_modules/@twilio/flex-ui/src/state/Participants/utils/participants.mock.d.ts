import { ClassMediaProperties, ParticipantBase, RawParticipantBase, RawVoicePropertiesResponse } from "../participants.types";
export declare const participants: RawParticipantBase<RawVoicePropertiesResponse>[];
export declare const sdkParticipants: ParticipantBase<ClassMediaProperties>[];
export declare const sdkParticipantsExternalHold: ParticipantBase<ClassMediaProperties>[];
export declare const participantMockState: {
    isLoading: boolean;
    bySid: {
        UTa69dca5cad77259508e6a2fde3bc4b19: {
            isPending: boolean;
            participantSid: string;
            type: string;
            mediaProperties: {
                accountSid: string;
                callSid: string;
                coaching: boolean;
                conferenceSid: string;
                endConferenceOnExit: boolean;
                friendlyName: string;
                hold: boolean;
                muted: boolean;
                sequenceNumber: number;
                startConferenceOnEnter: boolean;
                statusCallbackEvent: string;
                timestamp: string;
                from: string;
                to: string;
            };
        };
    };
    byCallSid: {
        CAc625df6cb0ffdddfdc06801d1b7dd5eb: {
            isPending: boolean;
            participantSid: string;
            type: string;
            mediaProperties: {
                accountSid: string;
                callSid: string;
                coaching: boolean;
                conferenceSid: string;
                endConferenceOnExit: boolean;
                friendlyName: string;
                hold: boolean;
                muted: boolean;
                sequenceNumber: number;
                startConferenceOnEnter: boolean;
                statusCallbackEvent: string;
                timestamp: string;
                from: string;
                to: string;
            };
        };
    };
    sids: string[];
};
