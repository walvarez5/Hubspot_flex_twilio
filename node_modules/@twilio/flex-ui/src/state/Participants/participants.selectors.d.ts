import { IQueue, IWorker } from "../../models/CommonModels";
import { Participant, ParticipantState } from "./participants.types";
declare function mapParticipantToCanvas(participant: Participant): {
    queue: IWorker;
    worker: IQueue;
    callSid: string;
    isMyself: boolean;
    onHold: boolean;
    muted: boolean;
    connecting: boolean;
    status: string;
    participantType: import("./participants.types").ParticipantTypes;
    reservationSid: string;
    workerSid: string;
    uniqueId: string;
    participantSid: string;
    phoneNumber: string;
};
export declare const canvasParticipants: import("reselect").OutputSelector<ParticipantState, {
    queue: IWorker;
    worker: IQueue;
    callSid: string;
    isMyself: boolean;
    onHold: boolean;
    muted: boolean;
    connecting: boolean;
    status: string;
    participantType: import("./participants.types").ParticipantTypes;
    reservationSid: string;
    workerSid: string;
    uniqueId: string;
    participantSid: string;
    phoneNumber: string;
}[], (res: Participant[]) => {
    queue: IWorker;
    worker: IQueue;
    callSid: string;
    isMyself: boolean;
    onHold: boolean;
    muted: boolean;
    connecting: boolean;
    status: string;
    participantType: import("./participants.types").ParticipantTypes;
    reservationSid: string;
    workerSid: string;
    uniqueId: string;
    participantSid: string;
    phoneNumber: string;
}[]>;
export type CallCanvasParticipant = ReturnType<typeof mapParticipantToCanvas>;
export {};
