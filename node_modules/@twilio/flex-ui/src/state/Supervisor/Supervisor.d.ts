import { Reservation, Supervisor as TaskRouterSupervisor, WorkerOptions } from "twilio-taskrouter";
export declare class Supervisor implements Partial<TaskRouterSupervisor> {
    private proxy;
    private supervisor;
    private handlerMirror;
    private shouldProxyEventListener;
    private updateExtraOptions;
    private updateExtraOptionsForMonitor;
    private proxyReservation;
    constructor(accessToken: string, worker: WorkerOptions);
    get reservations(): Map<string, Reservation>;
    monitor(taskSid: string, reservationSid: string, extraParams?: Object): void;
    on: (event: string | symbol, handler: (...args: any[]) => void) => TaskRouterSupervisor;
    removeListener: (event: string | symbol, handler: (...args: any[]) => void) => TaskRouterSupervisor;
    removeAllListeners: (event?: string | symbol) => TaskRouterSupervisor;
    addListener: (event: string | symbol, handler: (...args: any[]) => void) => TaskRouterSupervisor;
    getProxy(): TaskRouterSupervisor;
    emit(event: string | symbol, ...args: any[]): boolean;
}
