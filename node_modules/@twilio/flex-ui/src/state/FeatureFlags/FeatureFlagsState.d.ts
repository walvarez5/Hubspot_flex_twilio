import { Dispatch } from "redux";
import { Feature, FeatureDict, FeatureFlagsAction, FeatureOverrideDict, TransfersConfig } from "../../models/FeatureFlagsModel";
export type FeatureFlagsState = {
    features: FeatureDict;
    localOverrides: FeatureOverrideDict;
    transfersConfig: TransfersConfig;
};
export declare const initialState: FeatureFlagsState;
export declare function reduce(state: FeatureFlagsState, action: FeatureFlagsAction): FeatureFlagsState;
export declare class Actions {
    private static _dispatcher;
    static get dispatcher(): Dispatch<any>;
    static set dispatcher(dispatcher: Dispatch<any>);
    static setFeatures(payload: Feature[] | undefined): void;
    static setFeatureOverrides(payload: FeatureOverrideDict | undefined): void;
    static overrideFeatureFlag(payload: Partial<Feature> | undefined): void;
    static setTransfersConfig(payload: TransfersConfig | undefined): void;
}
