import { Action, Dispatch } from "redux";
/**
 * Object containing the status of the ChatMessageList component. Used to identify unread messages.
 *
 * @typedef {object} ChatMessageListState
 * @category State
 * @property {boolean} isScrollToBottom - Whether the ChatMessageList is currently scrolled to the bottom
 * @property {string} activeConversation - ID of the conversation currently shown in the ChatMessageList component
 * @memberof AppState
 */
export interface ChatMessageListState {
    isScrollToBottom: boolean;
    activeConversation: string;
    activeChatChannel: string;
}
export declare const ACTION_CHANGE_SCROLL_POSITION = "CHAT_CHANGE_SCROLL_POSITION";
export declare const ACTION_CHANGE_CONVERSATION = "CHAT_CHANGE_CONVERSATION";
interface ChatMessageListStateAction extends Action {
    readonly payload?: any;
}
export declare function reduce(state: ChatMessageListState, action: ChatMessageListStateAction): ChatMessageListState;
export declare class Actions {
    static get dispatcher(): Dispatch<any>;
    static updateScrollPosition: (isScrolledToBottom: boolean) => void;
    static updateActiveConversation: (newConversationSid: string) => void;
}
export {};
