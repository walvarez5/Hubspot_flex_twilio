import * as React from "react";
import { ItemProps } from "../DynamicForm";
/**
 * InputField properties
 * @typedef InputItem.InputItemProps
 * @property {InputField} field - The input field component
 * @extends {ItemProps}
 * @private
 */
export interface InputItemProps extends ItemProps {
    field: InputField;
}
/**
 * @typedef InputItem.InputField
 * @property {string} type - The type of the input field
 * @property {string} label - A custom label for the input field
 * @property {InputItem.InputFieldAttributes} [attributes] - Custom attributes for the form field
 * @private
 */
export interface InputField {
    type: string;
    label: string;
    attributes?: InputFieldAttributes;
}
/**
 * Attributes for the input field component
 *
 * @typedef InputItem.InputFieldAttributes
 * @property {string} name - The name of the input field
 * @property {string} type - The type of the input field
 * @property {string} [value] - The value of the input field
 * @property {string} [placeholder] - A custom placeholder for the input field
 * @property {boolean} [required] - Whether or not the field must be required
 * @private
 */
export interface InputFieldAttributes {
    name: string;
    type: string;
    value?: string;
    placeholder?: string;
    required?: boolean;
    readOnly?: boolean;
}
declare const InputItemThemed: React.FC<Pick<InputItemProps, "error" | "handleChange" | "field" | "handleBlur" | "stateData" | "touched"> & {
    theme?: import("@emotion/react").Theme;
}>;
export { InputItemThemed as InputItem };
