import { MessageInputProps } from "./MessageInput.definitions";
export declare enum MessageInputV2ChildrenKeys {
    textarea = "textarea",
    actions = "actions"
}
/**
 * Properties of Message Input V2.
 *
 * @typedef MessageInputV2.MessageInputV2Props
 * @property {MessageInputThemeProps} [theme.MessageInput] - theme
 * @property {InputAreaStyle} [areaStyle=Bubble] - Visual style of the text input element.
 * @property {string} [disabledReason] - A reason on why MessageInput is disabled.
 * @property {boolean} [returnKeySendsMessage=true] - Whether pressing the return key should send a message.
 * @property {number} charLimit - Identifies character limit for a single message.
 * @property {DynamicComponentChildren<MessageInput.MessageInputChildrenProps>} [children] - children
 * @property {AriaProps} [sendButtonAriaProps] - SendButton aria props
 * @property {AriaProps} [textAreaAriaProps] - TextArea aria props
 * @property {boolean} [hideSendButton] - Whether the send button should be hidden
 * @property {1 | 2 | 3 | 4 | 5 | 6} [rows=1] - Set the row height of message input. Range from 1 to 6
 */
export interface MessageInputV2Props extends MessageInputProps {
    hideSendButton?: boolean;
    rows?: 1 | 2 | 3 | 4 | 5 | 6;
}
