import { MessageState } from "../../../state/ConversationState";
import { FlexBox, FlexBoxColumn } from "../../FlexBox";
import { ConversationItemStyleProps } from "../MessageListItem";
interface ThemedMessage {
    message: MessageState;
}
export declare const Container: import("@emotion/styled").StyledComponent<import("../../FlexBox").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
} & ConversationItemStyleProps & {
    inFocus: boolean;
}, {}, {
    ref?: import("react").Ref<FlexBoxColumn>;
}>;
export declare const HeaderContainer: import("@emotion/styled").StyledComponent<import("../../FlexBox").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
} & ConversationItemStyleProps, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const UserNameContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TimeContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const BodyContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const MediaContainer: import("@emotion/styled").StyledComponent<import("../../FlexBox").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const MediaMessageErrorContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    children?: import("react").ReactNode | undefined;
} & {
    theme?: import("@emotion/react").Theme;
}, {}, {}>;
export declare const MediaMessageContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & ThemedMessage, import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, {}>;
export declare const MediaMessageActions: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & ThemedMessage, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const StyledBlockQuote: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & ThemedMessage, import("react").DetailedHTMLProps<import("react").BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>, {}>;
export {};
