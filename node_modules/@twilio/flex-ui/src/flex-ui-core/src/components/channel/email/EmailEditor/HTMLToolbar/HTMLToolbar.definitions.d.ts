import React, { HTMLProps } from "react";
import { PlatePluginOptions, SPEditor } from "@udecode/plate-core";
export interface HTMLToolbarProps {
    editor: SPEditor | undefined;
    customButtons: React.ReactElement[];
}
export interface ToolbarButtonsBasicMarksProps {
    editor: SPEditor | undefined;
    customButtons: React.ReactElement[];
    isExtendedView: boolean;
}
export interface ToolbarButtonProps {
    active?: boolean;
    icon: React.ReactChild;
    onMouseDown?: HTMLProps<HTMLSpanElement>["onMouseDown"];
}
export interface ToolbarElementProps extends ToolbarButtonProps {
    type: string;
    inactiveType?: string;
}
export interface ToolbarMarkProps extends ToolbarButtonProps, Pick<PlatePluginOptions, "type" | "clear"> {
}
export interface ToolbarLinkProps extends ToolbarButtonProps {
    getLinkUrl?: (prevUrl: string | null) => Promise<string | null>;
}
export interface ToolbarLinkPanelFormProps {
    hideText: boolean;
    url: string;
    onSubmit: (args: LinkNodeData) => void;
    onRemove: () => void;
    onClose: () => void;
}
export interface LinkNodeData {
    text: string;
    url: string;
}
