import { Theme } from "@material-ui/core/styles/createTheme";
export declare const styles: (theme: Theme) => {
    root: {};
    inputRoot: {
        display: string;
        flexWrap: string;
        flex: number;
        marginTop: number;
        minWidth: number;
        "&$outlined,&$filled": {
            boxSizing: string;
        };
        "&$outlined": {
            paddingTop: number;
        };
        "&$filled": {
            paddingTop: number;
        };
    };
    input: {
        display: string;
        textOverflow: string;
        overflow: string;
        whiteSpace: string;
        appearance: string;
        WebkitTapHighlightColor: string;
        float: string;
        flex: number;
    };
    chipContainer: {
        display: string;
        flexFlow: string;
        cursor: string;
        marginBottom: number;
        minHeight: number;
        "&$labeled&$standard": {
            marginTop: number;
        };
    };
    outlined: {
        "& input": {
            height: number;
            paddingTop: number;
            paddingBottom: number;
            marginTop: number;
            marginBottom: number;
        };
    };
    standard: {};
    filled: {
        "& input": {
            height: number;
            marginBottom: number;
            marginTop: number;
            paddingTop: number;
        };
        "$marginDense & input": {
            height: number;
        };
    };
    labeled: {};
    label: {
        top: number;
        "&$outlined&:not($labelShrink)": {
            top: number;
            "$marginDense &": {
                top: number;
            };
        };
        "&$filled&:not($labelShrink)": {
            top: number;
            "$marginDense &": {
                top: number;
            };
        };
    };
    labelShrink: {
        top: number;
    };
    helperText: {
        marginBottom: number;
    };
    focused: {};
    disabled: {};
    underline: {
        "&:after": {
            borderBottom: string;
            left: number;
            bottom: number;
            content: string;
            position: string;
            right: number;
            transform: string;
            transition: string;
            pointerEvents: string;
        };
        "&$focused:after": {
            transform: string;
        };
        "&$error:after": {
            borderBottomColor: string;
            transform: string;
        };
        "&:before": {
            borderBottom: string;
            left: number;
            bottom: number;
            content: string;
            position: string;
            right: number;
            transition: string;
            pointerEvents: string;
        };
        "&:hover:not($disabled):not($focused):not($error):before": {
            borderBottom: string;
            "@media (hover: none)": {
                borderBottom: string;
            };
        };
        "&$disabled:before": {
            borderBottomStyle: string;
        };
    };
    error: {
        "&:after": {
            backgroundColor: string;
            transform: string;
        };
    };
    chip: {
        margin: string;
        float: string;
    };
    marginDense: {};
};
