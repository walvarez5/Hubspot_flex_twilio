import { MessageState } from "../../../state/ConversationState";
import { FlexBox } from "../../FlexBox";
import { MessageStyle } from "../MessagingCanvas/MessagingCanvas.definitions";
import { MediaErrorContainerProps } from "./MessageListItemImpl";
import { Spike, SpikeProps } from "./Spike";
export interface ConversationItemStyleProps {
    message?: MessageState;
    messageStyle?: MessageStyle;
    disabled?: boolean;
}
export declare const Container: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & ConversationItemStyleProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export interface BubbleContainerProps {
    isFromMe: boolean;
    isFromCCAIVirtualAgent?: boolean;
    messageStyle: MessageStyle;
}
export declare const BubbleContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & BubbleContainerProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const StyledSpike: import("@emotion/styled").StyledComponent<SpikeProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Spike>;
}>;
export declare const MessageReadContainer: import("@emotion/styled").StyledComponent<import("../../FlexBox").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const MediaErrorContainer: import("@emotion/styled").StyledComponent<import("../../FlexBox").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
} & MediaErrorContainerProps, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
