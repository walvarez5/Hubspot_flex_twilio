/**
 * Checks if a given string is a valid language tag. See https://www.w3.org/International/articles/language-tags
 * @private
 * @param {string} tag The string to validate as a language tag.
 * @returns {boolean} Returns true if the tag is a valid language tag, otherwise false.
 */
export declare function isValidLanguageTag(tag: string): boolean;
/**
 * Validates that argument is a valid list of AvailableLocales
 * @private
 * @param {any} data The data to validate.
 * @returns {boolean} True if the argument is a valid list of AvailableLocales
 */
export declare function isValidAvailableLocales(data: any): boolean;
/**
 * Fetches and returns the locale preference of the user. Will return undefined if the preference is not set.
 * @private
 * @returns {Promise<string | undefined>} string
 */
export declare function internalGetLocalePreference(): Promise<string | undefined>;
/**
 * Sets the locale preference of the user.
 * @private
 * @param {string} locale locale to set as the user's preference
 * @returns {void}
 */
export declare function internalSetLocalePreference(locale: string): Promise<void>;
/**
 * Queries the browser language.
 * @private
 * @returns {string | undefined}  Returns the browser locale if available or undefined
 */
export declare function getBrowserLocale(): string | undefined;
