import * as React from "react";
import { IAssessment, IQuestionnaire } from "../../../../core/Insights/Questionnaires/Questionnaire.models";
interface AssessPanelContentComponentStateProps {
    questionnaires: Array<IQuestionnaire>;
    segmentId?: string;
    agentName?: string;
}
type AssessPanelContentComponentOwnProps = {
    segmentId?: string;
};
type AssessPanelContentComponentProps = AssessPanelContentComponentStateProps & AssessPanelContentComponentOwnProps;
type AssessPanelContentComponentState = {
    selectedQuestionnaireId?: string;
};
export declare class AssessPanelContentComponent extends React.PureComponent<AssessPanelContentComponentProps, AssessPanelContentComponentState> {
    state: AssessPanelContentComponentState;
    static getDerivedStateFromProps(nextProps: AssessPanelContentComponentProps, prevState: AssessPanelContentComponentState): AssessPanelContentComponentState;
    onAnswerSubmitted: (assessment: IAssessment) => void;
    renderQuestionnaire(): JSX.Element;
    render(): JSX.Element;
}
export declare const AssessPanelContent: import("react-redux").ConnectedComponent<typeof AssessPanelContentComponent, import("react-redux").Omit<React.ClassAttributes<AssessPanelContentComponent> & AssessPanelContentComponentStateProps & AssessPanelContentComponentOwnProps, "segmentId" | "agentName" | "questionnaires"> & AssessPanelContentComponentOwnProps>;
export {};
