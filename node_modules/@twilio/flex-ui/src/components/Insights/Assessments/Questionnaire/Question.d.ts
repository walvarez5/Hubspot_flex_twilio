import * as React from "react";
import { IAnswer, IAssessment, IQuestion } from "../../../../core/Insights/Questionnaires/Questionnaire.models";
interface QuestionOwnProps {
    question: IQuestion;
    onAnswerSubmitted: (assessment: IAssessment) => void;
    assessments: Array<IAssessment>;
}
interface QuestionStateProps {
    NAanswer?: IAnswer;
}
type QuestionProps = QuestionOwnProps & QuestionStateProps;
export declare const ClearInputButton: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType;
} & {
    isVisible: boolean;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare class _QuestionComponent extends React.PureComponent<QuestionProps, {
    hovering: boolean;
}> {
    state: {
        hovering: boolean;
    };
    submitAnswer: (answer: IAnswer) => void;
    resetAnswer: () => void;
    hover: (hovering: boolean) => () => void;
    render(): JSX.Element;
}
export declare const QuestionComponent: import("react-redux").ConnectedComponent<typeof _QuestionComponent, import("react-redux").Omit<React.ClassAttributes<_QuestionComponent> & QuestionOwnProps & QuestionStateProps, "NAanswer"> & QuestionOwnProps>;
export {};
