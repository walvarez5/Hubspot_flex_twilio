import { Player } from "@twilio/player";
import * as React from "react";
import { SegmentList } from "../../../state/InsightsState.definitions";
import { ThemeProps } from "../../theme";
export declare const displayName = "Player";
export interface PlayerImplStateProps {
    peaks?: number[][];
    recordingUrl?: string;
    recordingSid?: string;
    recordingUrlExpiresAt?: number;
    segments?: SegmentList;
    token: string;
}
export type PlayerImplOwnProps = {
    children?: React.ReactNode;
    playerRef?: ((instance: Player | null) => void) | null;
    segmentId: string;
    onSegmentMarkClick: (segmentId: string) => void;
    sticky?: boolean;
} & ThemeProps;
export type PlayerImplProps = PlayerImplStateProps & PlayerImplOwnProps;
interface PlayerImplState {
    player: Player | null;
    playbackRate: string;
}
export declare class PlayerImpl extends React.PureComponent<PlayerImplProps, PlayerImplState> {
    constructor(props: PlayerImplProps);
    private urlRefreshTimeout;
    private _isMounted;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private areAuthenticatedRecordingsEnabled;
    private handlePlayerReady;
    private handlePlaybackRateChange;
    private handlePlayerError;
    private handleFindingClick;
    private scheduleRecordingUrlRefresh;
    private refreshPresignedRecordingUrl;
    private getRecordingUrl;
    render(): JSX.Element;
}
export {};
