import * as React from "react";
import { AnalyticalDashboard, ProjectDashboard } from "../../../models/InsightsModel";
import { FlexState } from "../../../store";
interface RedirectToFirstDashboardStateProps {
    dashboard?: AnalyticalDashboard | ProjectDashboard["tabs"][0];
}
type RedirectToFirstDashboardProps = RedirectToFirstDashboardStateProps;
declare class RedirectToFirstDashboardComponent extends React.Component<RedirectToFirstDashboardProps> {
    componentDidMount(): void;
    componentDidUpdate(prevProps: RedirectToFirstDashboardProps): void;
    render(): any;
}
export declare const firstDashboardSelector: import("reselect").OutputSelector<FlexState, {
    title: string;
    identifier: string;
} | AnalyticalDashboard, (res1: ProjectDashboard[], res2: AnalyticalDashboard[]) => {
    title: string;
    identifier: string;
} | AnalyticalDashboard>;
export declare const RedirectToFirstDashboard: import("react-redux").ConnectedComponent<typeof RedirectToFirstDashboardComponent, import("react-redux").Omit<React.ClassAttributes<RedirectToFirstDashboardComponent> & RedirectToFirstDashboardStateProps, "dashboard">>;
export {};
