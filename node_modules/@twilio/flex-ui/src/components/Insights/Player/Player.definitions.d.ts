export declare const INSIGHTS_PLAYER_MEDIA_SELECT = "INSIGHTS_PLAYER_MEDIA_SELECT";
interface InsightsPlayerPlayActionPayloadWithSegmentId {
    segmentId: string;
}
interface InsightsPlayerPlayActionPayloadWithTaskSid {
    taskSid: string;
}
export declare enum InsightsPlayerMediaLinkType {
    VoiceRecording = "VoiceRecording",
    Raw = "Raw",
    Embedded = "Embedded",
    Referenced = "Referenced",
    ChatTranscript = "ChatTranscript",
    EmailTranscript = "EmailTranscript"
}
interface InsightsPlayerMediaLinkBase {
    type: InsightsPlayerMediaLinkType;
    title?: string;
}
export interface InsightsMediaLinkWithUrl extends InsightsPlayerMediaLinkBase {
    type: InsightsPlayerMediaLinkType.Raw | InsightsPlayerMediaLinkType.Embedded | InsightsPlayerMediaLinkType.Referenced;
    url: string;
    url_secure?: string;
}
export interface InsightsVoiceRecordingMediaLink extends InsightsPlayerMediaLinkBase {
    type: InsightsPlayerMediaLinkType.VoiceRecording;
    url?: string;
    url_secure?: string;
    recording_sid?: string;
}
export interface InsightsMediaLinkWithSid extends InsightsPlayerMediaLinkBase {
    type: InsightsPlayerMediaLinkType.ChatTranscript;
    sid: string;
}
export interface InsightsEmailTranscriptMediaLink extends InsightsPlayerMediaLinkBase {
    type: InsightsPlayerMediaLinkType.EmailTranscript;
    conversation_sid: string;
}
export type InsightsPlayerMediaLink = InsightsMediaLinkWithUrl | InsightsMediaLinkWithSid | InsightsVoiceRecordingMediaLink | InsightsEmailTranscriptMediaLink;
/**
 * Either segmentId or taskSid must be defined, or an error is thrown.
 *
 * @typedef {InsightsPlayerPlayActionPayload} InsightsPlayerPlayActionPayload
 * @memberof Actions
 * @property {string} [segmentId] Segment you want to play. Required if taskSid is not provided.
 * @property {string} [taskSid] Task you want to play. Required if segmentId is not provided.
 */
export type InsightsPlayerPlayActionPayload = InsightsPlayerPlayActionPayloadWithSegmentId | InsightsPlayerPlayActionPayloadWithTaskSid;
export {};
