import * as React from "react";
import { GlobalSLFormData } from "./GlobalSLFormContent";
interface GlobalSLFormStateProps {
    timezone?: string;
    dailyReset?: string;
    serviceLevelThreshold?: number;
    shortAbandonedThreshold?: number;
}
interface GlobalSLFormState {
    dialogOpen: boolean;
    form: GlobalSLFormData;
}
export declare class GlobalSLFormImpl extends React.PureComponent<GlobalSLFormStateProps, GlobalSLFormState> {
    _isMounted: boolean;
    constructor(props: GlobalSLFormStateProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    isFormValid: () => boolean;
    onSave: () => void;
    handleFieldChange: (name: keyof GlobalSLFormData, value: GlobalSLFormData[typeof name]) => void;
    onDialogClose: () => void;
    onCancel: () => Promise<any>;
    render(): JSX.Element;
}
export declare const GlobalSLForm: import("react-redux").ConnectedComponent<typeof GlobalSLFormImpl, import("react-redux").Omit<React.ClassAttributes<GlobalSLFormImpl> & GlobalSLFormStateProps, "timezone" | "dailyReset" | "serviceLevelThreshold" | "shortAbandonedThreshold">>;
export {};
