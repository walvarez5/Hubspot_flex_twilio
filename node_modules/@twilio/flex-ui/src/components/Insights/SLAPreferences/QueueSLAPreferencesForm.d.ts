import * as React from "react";
import { QueueChannelConfiguration, QueueConfiguration, QueuesConfig, QueuesState } from "../../../state/QueuesState/QueuesStateTypes";
interface QueuesSLAPreferencesFormStateProps {
    queueConfig: QueueConfiguration | null;
    defaultConfig: QueuesConfig["default"];
    channelConfigs: QueueChannelConfiguration[];
    channelMetadata: QueuesState["metadata"]["channelsBySid"];
    allChannelSids: QueuesState["metadata"]["channelSids"];
}
interface QueuesSLAPreferencesFormOwnProps {
    queueName: string;
    queueSid: string;
}
type QueuesSLAPreferencesFormProps = QueuesSLAPreferencesFormStateProps & QueuesSLAPreferencesFormOwnProps;
interface QueuesSLAPreferencesFormState {
    queue: QueueConfiguration | null;
    channels: QueueChannelConfiguration[];
    isSaving: boolean;
}
export declare class QueuesSLAPreferencesFormImpl extends React.PureComponent<QueuesSLAPreferencesFormProps, QueuesSLAPreferencesFormState> {
    constructor(props: QueuesSLAPreferencesFormProps);
    addQueueConfig: () => void;
    removeQueueConfig: () => void;
    handleTimezoneChange: (timezone: string) => void;
    handleTimeChange: (time: string) => void;
    handleChannelConfigsUpdate: (channels: QueueChannelConfiguration[]) => void;
    onSave: () => Promise<void>;
    onCancel: () => Promise<any>;
    isFormValid: () => boolean;
    render(): JSX.Element;
}
export declare const QueuesSLAPreferencesForm: import("react-redux").ConnectedComponent<typeof QueuesSLAPreferencesFormImpl, import("react-redux").Omit<React.ClassAttributes<QueuesSLAPreferencesFormImpl> & QueuesSLAPreferencesFormStateProps & QueuesSLAPreferencesFormOwnProps, "channelConfigs" | "channelMetadata" | "allChannelSids" | "defaultConfig" | "queueConfig"> & QueuesSLAPreferencesFormOwnProps>;
export {};
