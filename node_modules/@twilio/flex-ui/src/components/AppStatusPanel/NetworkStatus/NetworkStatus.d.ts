import * as React from "react";
import { CallNetworkIssue } from "../../../state/AppStatusState";
export interface NetworkStatusContainerChildrenProps extends NetworkStatusContainerProps {
    callNetworkIssues: CallNetworkIssue[];
    prevCallPerformed: boolean;
}
export interface NetworkStatusContainerProps {
}
export declare class NetworkStatus extends React.PureComponent<NetworkStatusContainerProps> {
    render(): JSX.Element;
}
export declare const Connected: import("react-redux").ConnectedComponent<React.FC<Pick<Pick<NetworkStatusContainerChildrenProps, keyof NetworkStatusContainerChildrenProps> & {
    theme?: import("@emotion/react").Theme;
} & {
    children?: React.ReactNode | undefined;
}, "children" | keyof NetworkStatusContainerChildrenProps> & {
    theme?: import("@emotion/react").Theme;
}>, import("react-redux").Omit<Pick<Pick<NetworkStatusContainerChildrenProps, keyof NetworkStatusContainerChildrenProps> & {
    theme?: import("@emotion/react").Theme;
} & {
    children?: React.ReactNode | undefined;
}, "children" | keyof NetworkStatusContainerChildrenProps> & {
    theme?: import("@emotion/react").Theme;
}, "callNetworkIssues" | "prevCallPerformed">>;
