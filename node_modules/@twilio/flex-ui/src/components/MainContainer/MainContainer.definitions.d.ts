/**
 * Properties of MainContainer.
 * @typedef MainContainer.MainContainerProps
 * @property {boolean} [keepSideNavOpen=false] - Whether the SideNav preview panel should be always visible. Default is false, which makes the preview show only after the whole app is wide enough.
 * @property {boolean} [showNotificationBar=true] - Whether notifications will be shown on the NotificationBar or not. If set to false, no notifications in NotificationBar will be shown.
 * @property {boolean} [showLiveCommsBar=true] - Whether to display an incoming call bar for views different from Agent Desktop or not.
 * @property {DynamicContentStore.DynamicComponentChildren<MainContainerChildrenProps>} [children] - children
 */
export interface MainContainerProps {
    keepSideNavOpen?: boolean;
    showNotificationBar?: boolean;
    showLiveCommsBar?: boolean;
}
/**
 * Properties of MainContainer.
 * @typedef {MainContainerProps} MainContainer.MainContainerChildrenProps
 * @property {string} [activeView] - Represents the current active view.
 * @property {boolean} [showOutboundDialer] - If outbound dialer should be shown
 */
export interface MainContainerChildrenProps extends MainContainerProps {
    activeView?: string;
    showOutboundDialer?: boolean;
    showAppStatusPanel?: boolean;
}
export declare enum MainContainerChildrenKeys {
    content = "content",
    sideNav = "sidenav",
    teams = "teams",
    dashboards = "dashboards",
    analyze = "analyze",
    inspections = "inspections",
    agents = "agents",
    segments = "segments",
    logout = "logout",
    slaPreferences = "sla-preferences",
    speechSearches = "speech-searches",
    qualityManagement = "quality-management",
    playerModule = "player-module",
    conversationView = "conversation-view",
    queueStats = "queues-stats",
    agentDesktop = "agent-desktop",
    outboundDialerPanel = "outbound-dialer-panel",
    appStatusPanel = "app-status-panel",
    conversationalInsights = "conversational-insights",
    conditionalAlerting = "conditional-alerting"
}
