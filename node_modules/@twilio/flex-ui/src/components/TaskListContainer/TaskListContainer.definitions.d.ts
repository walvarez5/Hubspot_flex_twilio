import { ITask } from "../../models";
import { TaskFilter, TaskFilterCallback } from "../../state/AppConfig";
/**
 * Properties of TaskListContainer.
 *
 * @typedef {TaskListContainer.TaskListContainerProps} TaskListContainer.TaskListContainerChildrenProps
 */
export interface TaskListContainerChildrenProps extends TaskListContainerProps {
}
export declare enum TaskListContainerChildrenKeys {
    taskList = "tasklist"
}
/**
 * Properties of TaskListContainer.
 *
 * @typedef TaskListContainer.TaskListContainerProps
 * @property {Map<string, ITask>} [tasks] - Tasks to display.
 * @property {string} [selectedTaskSid] - Sid of the selected task.
 * @property {Array<TaskFilter>} [taskFilters=TaskListContainer.defaultTaskFilters] - Filter tasks displayed in the list.
 * @property {TaskFilterCallback} [staticTaskFilter=TaskListContainer.defaultStaticTaskFilter] - Callback to test if a task belongs to the static area (upper area before filters) in the task list.
 * @property {Function} [onTaskSelected] - Callback called when a task is selected
 * @property {DynamicContentStore.DynamicComponentChildren<TaskListContainer.TaskListContainerChildrenProps>} [children] - children
 */
export interface TaskListContainerProps {
    tasks?: Map<string, ITask>;
    selectedTaskSid?: string;
    taskFilters?: Array<TaskFilter>;
    staticTaskFilter?: TaskFilterCallback;
    onTaskSelected?: (sid: string) => void;
}
