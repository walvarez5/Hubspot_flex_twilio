import { Profile } from "@twilio/flex-sdk";
import { DynamicContentStore } from "../../../../flex-ui-core/src";
import * as React from "react";
import { TaskContextProps } from "../../../context";
import { ITask } from "../../../../models";
export interface ProfileLinkButtonProps {
    profileToLink: Profile;
    taskToLink: ITask;
    onLinkProfile: (profileConnector: any) => void;
}
/**
 * Properties of ProfileLinkButton.
 * @typedef {ProfileLinkButton.ProfileLinkButtonProps} ProfileLinkButton.ProfileLinkButtonChildrenProps
 */
export interface ProfileLinkButtonChildrenProps extends TaskContextProps, ProfileLinkButtonProps {
}
/**
 * @private
 * @classdesc This is a container for a [Button](Button) in the SearchViewImpl ProfileCloseContainer to link a profile
 * to the current task.
 * @component
 * @hideconstructor
 * @param {ProfileLinkButton.ProfileLinkButtonProps} props - Properties to be passed to configure this component.
 * @category Components / Programmable
 * @subcategory Components
 * @example
 * import {ProfileLinkButton } from "@twilio/flex-ui";
 * <ProfileLinkButton key="container">
 */
export declare class ProfileLinkButton extends React.PureComponent<ProfileLinkButtonProps> {
    static readonly displayName = "ProfileLinkButton";
    /**
     * Dynamic content store
     * @static
     * @type {DynamicContentStore<ProfileLinkButton.ProfileLinkButtonChildrenProps>}
     * @readonly
     * @example
     * import { ProfileLinkButton } from "@twilio/flex-ui";
     * const content = ProfileLinkButton.Content;
     */
    static readonly Content: DynamicContentStore<ProfileLinkButtonChildrenProps>;
    /**
     * Default properties
     * @static
     * @type {ProfileLinkButton.ProfileLinkButtonProps}
     * @readonly
     * @example
     * import { ProfileLinkButton } from "@twilio/flex-ui";
     * const props = ProfileLinkButton.defaultProps;
     * <ProfileLinkButton key="container" {...props}/>
     */
    static readonly defaultProps: Partial<ProfileLinkButtonProps>;
    static updateAll(): void;
    render(): JSX.Element;
}
