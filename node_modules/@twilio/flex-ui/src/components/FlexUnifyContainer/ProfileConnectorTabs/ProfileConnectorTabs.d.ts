import { DynamicContentStore } from "../../../flex-ui-core/src";
import * as React from "react";
import { ProfileConnectorTabsChildrenKeys, ProfileConnectorTabsChildrenProps, ProfileConnectorTabsProps } from "./ProfileConnectorTabs.definitions";
/**
 * @alias UnifiedProfilesContainer.ProfileTabs
 * @classdesc UnifiedProfilesContainer.ProfileTabs is the tab view of Profile View, History View, and CRM Container.
 * Can be themed with `Theme.UnifiedProfilesContainer.ProfileTabs` in [Theme](Theme).
 * @component
 * @hideconstructor
 * @param {ProfileConnectorTabs.ProfileConnectorTabsProps} props - Properties to be passed to configure this component.
 * @category Components / Programmable
 * @subcategory Components
 */
export declare class ProfileConnectorTabs extends React.PureComponent<ProfileConnectorTabsProps> {
    static readonly displayName = "ProfileConnectorTabs";
    /**
     * Dynamic content store
     * @name Content
     * @static
     * @type {DynamicContentStore<ProfileConnectorTabsChildrenProps, ProfileConnectorTabsChildrenKeys>}
     * @memberof UnifiedProfilesContainer.ProfileTabs
     * @example UnifiedProfilesContainer.ProfileTabs.Content
     * @readonly
     */
    static readonly Content: DynamicContentStore<ProfileConnectorTabsChildrenProps, ProfileConnectorTabsChildrenKeys>;
    /**
     * Default properties
     * @static
     * @type {ProfileConnectorTabs.ProfileConnectorTabsProps}
     * @readonly
     */
    static readonly defaultProps: Partial<ProfileConnectorTabsProps>;
    render(): JSX.Element;
}
export declare const Connected: import("react-redux").ConnectedComponent<React.FC<Pick<Omit<ProfileConnectorTabsChildrenProps, keyof import("../../context").TaskContextProps>, "selectedTabName" | "profileConnectSid" | "profileViewTab" | "timelineViewTab" | "crmViewTab" | "profileViewTabProps" | "timelineViewTabProps" | "crmViewTabProps"> & {
    theme?: import("@emotion/react").Theme;
}>, import("react-redux").Omit<Pick<Omit<ProfileConnectorTabsChildrenProps, keyof import("../../context").TaskContextProps>, "selectedTabName" | "profileConnectSid" | "profileViewTab" | "timelineViewTab" | "crmViewTab" | "profileViewTabProps" | "timelineViewTabProps" | "crmViewTabProps"> & {
    theme?: import("@emotion/react").Theme;
}, "selectedTabName">>;
