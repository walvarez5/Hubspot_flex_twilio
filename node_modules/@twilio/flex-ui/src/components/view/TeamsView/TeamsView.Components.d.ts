import { FlexBox } from "../../../flex-ui-core/src";
export declare const Container: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const MainContentContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const FilterContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const SearchContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ClearSearchLinkContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ResultsSummary: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ResultsSummaryCard: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const HiddenH3Header: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, {}>;
