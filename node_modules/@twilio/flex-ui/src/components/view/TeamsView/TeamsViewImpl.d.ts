import { DynamicContentStore } from "../../../flex-ui-core/src";
import * as React from "react";
import { SupervisorService } from "../../../state/Supervisor/SupervisorService";
import { Teams } from "../../../state/Supervisor/SupervisorState.definitions";
import { TeamsViewChildrenKeys, TeamsViewImplProps, TeamsViewImplState } from "./TeamsView.definitions";
export declare const displayName = "TeamsView";
export declare const contentStore: DynamicContentStore<TeamsViewImplProps, TeamsViewChildrenKeys>;
export declare class TeamsViewImpl extends React.PureComponent<TeamsViewImplProps, TeamsViewImplState> {
    static displayName: string;
    private closeRef;
    supervisorService: SupervisorService;
    state: TeamsViewImplState;
    constructor(props: TeamsViewImplProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    updateAgentMetricsPrefrence(): Promise<void>;
    applyPreference: (selectedTeamsFromPreference: string[], teams: Teams[]) => void;
    newTeamsViewComponentUpdate(oldProps: TeamsViewImplProps): void;
    componentDidUpdate(oldProps: TeamsViewImplProps): void;
    private makeAuthedAxiosCall;
    private loadTeamsOwnedBySupervisor;
    private updateTeamsData;
    private updateTeamsContext;
    private loadConversation;
    private loadWorkers;
    private renderDataTable;
    render(): JSX.Element;
    private renderFilters;
    private rendersResultsSummary;
    private applyFilters;
    private onSearchTextChange;
    private onSearchClear;
    private onSearchSubmit;
    private onFilterButtonClick;
    openFiltersPanel: () => void;
    closeFiltersPanel: (callback?: () => void) => void;
    private handleTaskSelection;
    private handleWorkerSelection;
    private isApplyDisabled;
    private onApplyClicked;
}
