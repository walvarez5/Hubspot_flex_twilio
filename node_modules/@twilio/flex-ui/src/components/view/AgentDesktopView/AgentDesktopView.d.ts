import { DynamicContentStore } from "../../../flex-ui-core/src";
import * as React from "react";
import { AgentDesktopViewChildrenKeys, AgentDesktopViewChildrenProps, AgentDesktopViewProps } from "./AgentDesktopView.definitions";
import { AgentDesktopViewImpl } from "./AgentDesktopViewImpl";
import { Panel1 } from "./Panel1";
import { Panel2 } from "./Panel2";
/**
 * @classdesc Agent Desktop View
 * @component
 * @hideconstructor
 * @param {AgentDesktopView.AgentDesktopViewProps} props - props
 * @category Components / Programmable
 * @subcategory Components
 */
export declare class AgentDesktopView extends React.PureComponent<AgentDesktopViewProps> {
    static readonly displayName = "AgentDesktopView";
    /**
     * Dynamic content store
     * @static
     * @type {DynamicContentStore<AgentDesktopView.AgentDesktopViewChildrenProps, AgentDesktopViewChildrenKeys>}
     * @readonly
     */
    static readonly Content: DynamicContentStore<AgentDesktopViewChildrenProps, AgentDesktopViewChildrenKeys>;
    /**
     * Shortcut for Panel1 component
     * @static
     * @type {Panel1}
     * @readonly
     */
    static readonly Panel1: typeof Panel1;
    /**
     * Shortcut for Panel2 component
     * @static
     * @type {Panel2}
     * @readonly
     */
    static readonly Panel2: typeof Panel2;
    /**
     * Default properties
     * @static
     * @type {AgentDesktopView.AgentDesktopViewProps}
     * @readonly
     */
    static readonly defaultProps: Partial<AgentDesktopViewProps>;
    static updateAll(): void;
    private getBaseRoute;
    render(): JSX.Element;
    private renderChildren;
}
export declare const Connected: import("react-redux").ConnectedComponent<{
    (props: AgentDesktopViewChildrenProps): JSX.Element;
    displayName: string;
} & import("hoist-non-react-statics").NonReactStatics<typeof AgentDesktopViewImpl, {}>, import("react-redux").Omit<AgentDesktopViewChildrenProps, "tasks" | "selectedPausedConversationSid" | "pausedConversationsMap">>;
