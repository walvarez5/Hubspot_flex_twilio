import React from "react";
import { MetricType } from "../../../core/FlexDataClient";
import { HighlightedQueueList, InsightsMetricsKeys, WorkerQueue } from "../../../state/QueuesState/QueuesStateTypes";
interface HighlightedMetricsProps {
    value: React.ReactNode;
    highlightedMetricData?: HighlightedQueueList;
    queue: WorkerQueue;
    channelSid?: string;
    metricId?: string;
    metricType?: MetricType;
    cardData?: {
        defaultCardData: string;
    };
    transformValue?: (value: string) => string;
}
export type MetricHighlightingData = {
    level?: string;
    isHighlighted: boolean;
    thresholdValue?: string | null;
    metricValue?: string;
};
export declare const checkIfHighlighted: (metricId?: InsightsMetricsKeys | "healthStatus", metricType?: MetricType, queueSid?: string, channelSid?: string, highlightedMetricData?: HighlightedQueueList) => MetricHighlightingData;
declare function HighlightedMetricData(props: HighlightedMetricsProps): JSX.Element;
declare namespace HighlightedMetricData {
    var defaultProps: {
        highlightedMetricData: any;
        metricId: any;
        metricType: any;
        cardData: any;
        channelSid: any;
        transformValue: (value: string) => string;
    };
}
declare const ConnectedHighlightedMetricData: import("react-redux").ConnectedComponent<typeof HighlightedMetricData, import("react-redux").Omit<HighlightedMetricsProps, "highlightedMetricData"> & HighlightedMetricsProps>;
export default ConnectedHighlightedMetricData;
