import { FilterDefinition } from "../../../flex-ui-core/src";
import * as React from "react";
import { SupervisorWorkerState } from "../../../state/State.definition";
import { AppliedFilter } from "../../../state/Supervisor/SupervisorState.definitions";
import { WorkerListFilter } from "../WorkersDataTable";
export interface FilterData {
    [key: string]: string | string[];
}
export interface TeamFiltersPanelProps {
    appliedFilters: AppliedFilter[];
    appliedLegacyFilterQuery: string;
    legacyFilters?: Array<WorkerListFilter>;
    handleCloseClick: () => void;
    applyFilters: (data?: FilterData, legacyFilterQuery?: string) => void;
    filters: Array<FilterDefinition>;
    isLoadingWorkers: boolean;
    workers: Array<SupervisorWorkerState>;
    closeRef?: React.RefObject<HTMLButtonElement>;
    isNewTeamsViewEnabled?: boolean;
}
/**
 * @typedef Supervisor․TeamFiltersPanelChildrenProps
 * @memberof Supervisor․TeamFiltersPanel
 * @property {Array<AppliedFilter>} [appliedFilters] Represents applied filters.
 * @property {Array<FilterDefinition>} [filters] - List of filters.
 * @property {boolean} isHidden - Indicates whether the panel is currently hidden.
 * @property {boolean} isLoadingWorkers - Indicates whether workers are loading.
 * @property {Array<SupervisorWorkerState>} [workers] - Represents list of workers.
 */
export type TeamFiltersPanelChildrenProps = Pick<TeamFiltersPanelProps, "appliedFilters" | "filters" | "isLoadingWorkers" | "workers">;
