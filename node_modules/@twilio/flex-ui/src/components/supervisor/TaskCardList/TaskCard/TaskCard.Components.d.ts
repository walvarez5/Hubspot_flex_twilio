import { FlexBox, Icon } from "../../../../flex-ui-core/src";
export interface TaskCardComponentsProps {
    selected?: boolean;
    inactive?: boolean;
}
export declare const Container: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType;
} & TaskCardComponentsProps, import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, {}>;
export declare const SecondLineContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const FirstLineContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Content: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const IconContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").IconProps & {
    theme?: import("@emotion/react").Theme;
} & TaskCardComponentsProps, {}, {
    ref?: import("react").Ref<Icon>;
}>;
export declare const OuterContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TaskCardListContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const TaskCardPlaceholder: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
