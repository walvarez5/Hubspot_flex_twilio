import { CSSProps } from "../../../flex-ui-core/src";
import * as React from "react";
import { TaskContextProps } from "../../context/TaskContext";
import { ThemeProps } from "../../theme";
/**
 * Properties of the Task Canvas.
 *
 * @typedef Supervisor․TaskCanvasProps
 * @memberOf Supervisor․TaskCanvas
 * @property {React.RefObject<HTMLButtonElement>} closeRef ref to handle the close button.
 */
export type TaskCanvasProps = TaskCanvasImplProps;
/**
 * Properties of task canvas theme.
 *
 * @typedef TaskCanvasThemeProps
 * @property {CSSProps} HeaderButton - Styles header button of the panel.
 * @property {CSSProps} Container - Styles task canvas container.
 * @property {CSSProps} MonitorActiveButton - Styles active monitoring button.
 * @property {CSSProps} Button - Styles all other buttons.
 * @property {CSSProps} Header - Styles task canvas panel header.
 * @memberof Supervisor․TaskCanvas
 */
export interface TaskCanvasThemeProps {
    HeaderButton: CSSProps;
    Container: CSSProps;
    MonitorActiveButton: CSSProps;
    Button: CSSProps;
    Header: CSSProps;
}
export declare enum SupervisorTaskCanvasChildrenKeys {
    customHeader = "customHeader",
    tabs = "tabs"
}
/**
 * Properties of children in task canvas.
 *
 * @typedef Supervisor․TaskCanvasChildrenProps
 * @memberOf Supervisor․TaskCanvas
 * @property { Supervisor.TaskCanvas.TaskCanvasThemeProps } [theme.Supervisor.TaskCanvas] - Theme
 */
export type TaskCanvasChildrenProps = TaskContextProps & ThemeProps;
export type TaskCanvasImplProps = {
    closeRef?: React.RefObject<HTMLButtonElement>;
};
