import { Menu, MenuItemProps, ModalPopupWithEntryControl } from "../../../flex-ui-core/src";
import { TaskFilterButtonProps } from "../TaskFilterButton";
export declare const TaskFilterButton: import("@emotion/styled").StyledComponent<TaskFilterButtonProps & import("react").RefAttributes<HTMLButtonElement> & {
    theme?: import("@emotion/react").Theme;
}, {}, {}>;
export declare const MenuItem: import("@emotion/styled").StyledComponent<MenuItemProps & import("react").RefAttributes<HTMLButtonElement> & {
    theme?: import("@emotion/react").Theme;
}, {}, {}>;
export declare const StyledModalPopupWithEntryControl: import("@emotion/styled").StyledComponent<Pick<import("@twilio/flex-ui-core").ModalPopupWithEntryControlProps, "onChange" | "innerRef" | "isOpen" | "alignRight" | "autoClose" | "entryControl"> & Partial<Pick<import("@twilio/flex-ui-core").ModalPopupWithEntryControlProps, "className">> & Partial<Pick<{
    className: string;
}, never>> & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<ModalPopupWithEntryControl>;
}>;
export declare const StyledMenu: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").MenuProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Menu>;
}>;
export declare const TaskListFilterContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
