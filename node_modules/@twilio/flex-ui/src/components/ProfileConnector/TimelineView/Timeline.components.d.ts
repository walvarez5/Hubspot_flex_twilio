import { Icon } from "../../../flex-ui-core/src";
export declare const TimelineContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const WhatsappIconContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const AppleMessagesForBusinessIconContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ClockIconContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").IconProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Icon>;
}>;
export declare const SentimentIconContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").IconProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Icon>;
}>;
export declare const TopicsIconContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").IconProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Icon>;
}>;
export declare const SummaryIconContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").IconProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Icon>;
}>;
export declare const TimelineManualRefreshContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ManualRefreshIconContainer: import("@emotion/styled").StyledComponent<import("@twilio/flex-ui-core").IconProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Icon>;
}>;
export declare const TopicsList: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLUListElement>, HTMLUListElement>, {}>;
export declare const TopicsListItem: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>, {}>;
export declare const TopicName: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const TopicKey: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const TopicValue: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const TopicUnavailable: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
