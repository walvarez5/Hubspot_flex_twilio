import { ParticipantCanvasThemeProps, ParticipantCanvasChildrenKeys, ParticipantCanvasListItemChildrenKeys, ParticipantCanvasActionsChildrenKeys, ParticipantCanvasImplState } from "../../../internal-flex-commons/src";
import { ConferenceParticipant } from "../../../state/Conferences/ConferenceParticipant";
import { CallCanvasParticipant } from "../../../state/Participants/participants.selectors";
import { TaskContextProps } from "../../context/TaskContext";
import { ThemeProps } from "../../theme";
/**
 * Properties of participant canvas.
 *
 * @typedef ParticipantCanvas.ParticipantCanvasProps
 * @property {ConferenceParticipant} participant - Represents a single participant of a conference.
 * @property {number} participantWidth - Represents width of the participant container.
 * @property {boolean} [hideActions] - Identifies if the participant actions are hidden.
 * @property {boolean} [listMode] - Identifies if the participant are rendered in list mode.
 * @property {boolean} [isCCAICall] - Identifies if the active call is a CCAI call.
 */
export interface ParticipantCanvasProps extends ThemeProps, TaskContextProps {
    participant: ConferenceParticipant | CallCanvasParticipant;
    participantWidth: number;
    hideActions?: boolean;
    listMode?: boolean;
    isCCAICall?: boolean;
}
/**
 * Properties of children in participant canvas.
 *
 * @typedef {ParticipantCanvasProps} ParticipantCanvas.ParticipantCanvasChildrenProps
 * @property {ParticipantCanvasThemeProps} [theme.ParticipantsCanvas.ParticipantCanvas] - Theme
 */
export interface ParticipantCanvasChildrenProps extends ParticipantCanvasProps {
}
export { ParticipantCanvasImplState, ParticipantCanvasActionsChildrenKeys, ParticipantCanvasListItemChildrenKeys, ParticipantCanvasChildrenKeys, ParticipantCanvasThemeProps };
