import { DynamicContentStore } from "../../../flex-ui-core/src";
import * as React from "react";
import { ParticipantCanvasActionsChildrenKeys, ParticipantCanvasChildrenKeys, ParticipantCanvasChildrenProps, ParticipantCanvasImplState, ParticipantCanvasListItemChildrenKeys, ParticipantCanvasProps } from "./ParticipantCanvas.definitions";
/**
 * Can be themed with `Theme.ParticipantsCanvas` in [Theme](Theme).
 *
 * @class ParticipantCanvas
 * @classdesc This component renders a single participant.
 * @component
 * @hideconstructor
 * @param {ParticipantCanvas.ParticipantCanvasProps} props - Properties to be passed to configure this component.
 * @category Components / Programmable
 * @subcategory Components
 */
export declare class ParticipantCanvas extends React.Component<ParticipantCanvasProps, ParticipantCanvasImplState> {
    static readonly displayName = "ParticipantCanvas";
    /**
     * Dynamic content store
     *
     * @static
     * @type {DynamicContentStore<ParticipantCanvas.ParticipantCanvasChildrenProps, ParticipantCanvasChildrenKeys>}
     * @readonly
     */
    static readonly Content: DynamicContentStore<ParticipantCanvasChildrenProps, ParticipantCanvasChildrenKeys>;
    /**
     * Dynamic content properties for List item
     *
     * @static
     * @type {{Content: DynamicContentStore<ParticipantCanvas.ParticipantCanvasChildrenProps, ParticipantCanvasListItemChildrenKeys>}}
     * @readonly
     */
    static readonly ListItem: {
        displayName: string;
        Content: DynamicContentStore<any, ParticipantCanvasListItemChildrenKeys>;
    };
    /**
     * Dynamic content properties for action buttons container
     *
     * @static
     * @type {{Content: DynamicContentStore<ParticipantCanvas.ParticipantCanvasChildrenProps, ParticipantCanvasActionsChildrenKeys>}}
     * @readonly
     */
    static readonly Actions: {
        displayName: string;
        Content: DynamicContentStore<any, ParticipantCanvasActionsChildrenKeys>;
    };
    render(): JSX.Element;
}
