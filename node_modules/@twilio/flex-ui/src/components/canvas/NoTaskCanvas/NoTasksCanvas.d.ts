import { DynamicContentStore } from "../../../flex-ui-core/src";
import * as React from "react";
import { NoTaskCanvasChildrenKeys, NoTasksCanvasChildrenProps } from "./NoTasksCanvas.definitions";
/**
 * @classdesc This component renders a canvas if no tasks are available.
 * Can be themed with `Theme.NoTasksCanvas` in [Theme](Theme).
 * @component
 * @hideconstructor
 * @category Components / Programmable
 * @subcategory Components
 */
export declare class NoTasksCanvas extends React.PureComponent {
    static readonly displayName = "NoTasksCanvas";
    /**
     * Dynamic content store
     *
     * @static
     * @type {DynamicContentStore<NoTasksCanvas.NoTasksCanvasChildrenProps, NoTaskCanvasChildrenKeys>}
     * @readonly
     */
    static readonly Content: DynamicContentStore<NoTasksCanvasChildrenProps, NoTaskCanvasChildrenKeys>;
    render(): JSX.Element;
}
export declare const Connected: import("react-redux").ConnectedComponent<React.FC<Pick<NoTasksCanvasChildrenProps, "worker"> & {
    theme?: import("@emotion/react").Theme;
}>, import("react-redux").Omit<Pick<NoTasksCanvasChildrenProps, "worker"> & {
    theme?: import("@emotion/react").Theme;
}, "worker"> & {
    children?: React.ReactNode;
}>;
