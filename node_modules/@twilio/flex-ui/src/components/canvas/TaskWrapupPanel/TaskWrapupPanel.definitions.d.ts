import { DynamicContentStore } from "../../../flex-ui-core/src";
import { ChannelNoteCode } from "../../../core/FlexDataClient";
import { AgentCopilotState } from "../../../state/AgentCopilotConfigurationState";
import { ParticipantState } from "../../../state/Participants/participants.types";
import { TaskProfileConnectorContextProps } from "../../context/ProfileConnectorContext";
import { ThemeProps } from "../../theme";
import { TaskCanvasChildrenProps } from "../TaskCanvas/TaskCanvas.definitions";
/**
 * Properties of Task Wrapup panel.
 * @typedef {Partial<TaskCanvasChildrenProps>} TaskWrapupPanel.TaskWrapupPanelProps
 * @property {string} [templateCode] - Represents template code.
 * @extends Partial<TaskCanvasChildrenProps>, ThemeProps
 */
export interface TaskWrapupPanelProps extends Partial<TaskCanvasChildrenProps>, ThemeProps {
    contentStore?: DynamicContentStore;
    templateCode?: string;
}
/**
 * Properties of children of Task Wrapup panel.
 * @typedef {TaskWrapupPanelProps} TaskWrapupPanel.TaskWrapupPanelChildrenProps
 */
export interface TaskWrapupPanelChildrenProps extends TaskWrapupPanelProps, TaskProfileConnectorContextProps {
    participants?: ParticipantState;
    agentCopilot?: AgentCopilotState;
}
interface DispositionCodeSFDC extends ChannelNoteCode {
    sid: string;
    uniqueName: string;
}
export interface NotesSubmittedEventPayload {
    interactionSid: string;
    channelSid: string;
    participantSid: string | undefined;
    summary: string;
    sid: string;
    sentiment: string;
    dispositionCode: DispositionCodeSFDC | undefined;
    detectedLanguage?: string | null;
    profileConnectSid?: string;
    isSentimentVisible?: boolean;
    areNotesVisible?: boolean;
}
export {};
