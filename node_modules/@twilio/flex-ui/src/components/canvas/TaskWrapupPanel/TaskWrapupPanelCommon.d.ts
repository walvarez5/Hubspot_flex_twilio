import { ChannelNoteCodes, DispositionCode, Topic } from "../../../core/FlexDataClient";
import { ITask } from "../../../models";
export declare const createGenerationErrorMessage: (hasGenerationFailedError: boolean, finalSummary: string, isWrapupSentimentVisible: boolean, sentiment?: string, dispositionCodeSid?: string, dispositionOptions?: DispositionCode[], topicData?: {
    codes?: ChannelNoteCodes;
    topics?: Topic[];
}) => string;
export declare const shouldRenderPreviewContent: (task?: ITask) => boolean;
export declare const renderLanguageName: (isLoading: boolean, isMultiLanguageEnabled: boolean, isMultiLangErrorVisible: boolean, languageName?: string) => JSX.Element;
export declare const renderMultiLangWarning: (isLoading: boolean, isMultiLangErrorVisible: boolean, finalSummary: string, multiLangErrorMessage: string, onclick: () => void) => JSX.Element;
export declare const renderGenerationError: (generationErrorMessage: string, dismissGenerationErrorMessage?: () => void) => JSX.Element;
export declare const renderSubmissionFailureMessage: (handleSubmitWithoutNotes: () => void, handleDismissionSubmissionError: () => void) => JSX.Element;
