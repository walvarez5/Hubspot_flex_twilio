import { Link } from "../../flex-ui-core/src";
export declare const Wrapper: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ImageContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Heading: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Body: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const StyledLink: import("@emotion/styled").StyledComponent<Pick<import("@twilio/flex-ui-core").LinkProps, never> & Partial<Pick<import("@twilio/flex-ui-core").LinkProps, keyof import("@twilio/flex-ui-core").LinkProps>> & Partial<Pick<Partial<import("@twilio/flex-ui-core").LinkProps>, never>> & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<Link>;
}>;
