import { Dispatch, SetStateAction } from "react";
import { FlexInAppNotification } from "../../../core/FlexDataClient";
import { NotificationPanelStateProps } from "../NotificationPanel/NotificationPanel";
import { NotificationMessage } from "../NotificationPanel/Notifications.definitions";
export type MarkMessageAsRead = (messageId: string, isRead: boolean, setMessageLoading: (state: boolean) => void) => void;
export type UseFetchNotificationResult = {
    data: NotificationMessage[] | null;
    loading: boolean;
    setLoading: Dispatch<SetStateAction<boolean>>;
    error: {
        fetchError: boolean;
        mutationError: boolean;
    };
    clearError: () => void;
    hasMore: boolean;
    fetchData: () => void;
    markMessageAsRead: MarkMessageAsRead;
    markAllAsRead: () => void;
};
export declare const useFetchNotification: ({ isError: firstPageError, isLoading: firstPageLoading, messages }: NotificationPanelStateProps, pageSize?: number) => UseFetchNotificationResult;
export declare const useGetInAppNotifications: (onData: (newNotification: FlexInAppNotification) => void) => void;
