import { DynamicContentStore } from "../../flex-ui-core/src";
import * as React from "react";
import { SideLinkAgentDesktop } from "./SideLinkAgentDesktop/SideLinkAgentDesktop";
import { SideLinkInsightsAnalyze } from "./SideLinkInsightsAnalyze/SideLinkInsightsAnalyze";
import { SideLinkInsightsDashboards } from "./SideLinkInsightsDashboards/SideLinkInsightsDashboards";
import { SideLinkInsightsQualityManagement } from "./SideLinkInsightsQualityManagement/SideLinkInsightsQualityManagement";
import { SideLinkQueuesStats } from "./SideLinkQueuesStats/SideLinkQueuesStats";
import { SideLinkTeams } from "./SideLinkTeams/SideLinkTeams";
import { SideNavChildrenKeys, SideNavChildrenProps, SideNavProps } from "./SideNav.definitions";
/**
 * @classdesc This is a container for SideNav.
 * Can be themed with `Theme.SideNav` in [Theme](Theme).
 * @component
 * @hideconstructor
 * @category Components / Programmable
 * @subcategory Components
 * @param {SideNav.SideNavProps} props - Properties to be passed to configure this component.
 */
export declare class SideNav extends React.PureComponent<SideNavProps> {
    static displayName: string;
    /**
     * Default properties
     *
     * @static
     * @type {SideNavProps}
     * @readonly
     */
    static defaultProps: {
        reserveSpace: boolean;
    };
    /**
     * Dynamic content store
     *
     * @static
     * @type {DynamicContentStore<SideNav.SideNavChildrenProps, SideNavChildrenKeys>}
     * @readonly
     */
    static readonly Content: DynamicContentStore<SideNavChildrenProps, SideNavChildrenKeys>;
    /**
     * Agent desktop view link component
     *
     * @static
     * @type {SideLinkAgentDesktop}
     * @readonly
     */
    static readonly AgentDesktop: typeof SideLinkAgentDesktop;
    /**
     * Teams view link component
     *
     * @static
     * @type {SideLinkTeams}
     * @readonly
     */
    static readonly Teams: typeof SideLinkTeams;
    /**
     * Queues stats view link component
     *
     * @static
     * @type {SideLinkQueuesStats}
     * @readonly
     */
    static readonly QueuesStats: typeof SideLinkQueuesStats;
    /**
     * Quality Management view link component
     *
     * @static
     * @type {SideLinkInsightsQualityManagement}
     * @readonly
     */
    static readonly QualityManagement: typeof SideLinkInsightsQualityManagement;
    /**
     * Dashboards view link component
     *
     * @static
     * @type {SideLinkInsightsDashboards}
     * @readonly
     */
    static readonly Dashboards: typeof SideLinkInsightsDashboards;
    /**
     * Analyze view link component
     *
     * @static
     * @type {SideLinkInsightsAnalyze}
     * @readonly
     */
    static readonly Analyze: typeof SideLinkInsightsAnalyze;
    render(): JSX.Element;
}
