import * as React from "react";
/**
 * @typedef TemplateProps
 * @property {string} [className] A custom class name passed to template node.
 * @property {BaseTemplate.CompiledTemplate} [source] A function to compile the template string.
 * @property {string} [code] A template code of which the value needs to be used. If template with code does not exists, then code will be rendered.
 * @memberof Template
 * @since 2.0.0
 */
export interface TemplateProps {
    className?: string;
    source?: (context?: any) => string;
    code?: string;
    [contextProps: string]: any;
}
export interface BaseTemplateProps extends TemplateProps {
    templates?: Record<string, (context?: any) => string>;
}
export declare class BaseTemplate extends React.Component<BaseTemplateProps> {
    render(): JSX.Element;
    static defaultProps: {
        className: string;
    };
    private escapeHtml;
}
