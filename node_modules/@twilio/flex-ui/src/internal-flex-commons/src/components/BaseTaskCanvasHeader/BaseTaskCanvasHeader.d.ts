import React from "react";
import { BaseITask, DynamicContentStore, type TaskStatusBasedType } from "../../utils";
export interface BaseTaskCanvasHeaderProps<ParentProps> {
    contentStore?: DynamicContentStore<any>;
    icon?: string | React.ReactNode;
    IconComponent?: React.ReactNode;
    titleTemplateCode?: string;
    task?: BaseITask;
    templates?: any;
    getTemplateForStatus: (task: BaseITask, templateHolder: any, componentType: React.ComponentType) => string;
    childProps: React.PropsWithChildren<ParentProps>;
    statusTemplate?: {
        title?: TaskStatusBasedType;
        secondLine?: TaskStatusBasedType;
    };
    ParentComponent?: any;
    taskHelper: {
        [contextProps: string]: any;
    };
    titleTemplateContext?: any;
    secondLineTemplateCode?: string;
    secondLineTemplateContext?: any;
    ActionsComponent?: React.ComponentType<{
        task: BaseITask;
    }>;
}
export declare enum TaskCanvasHeaderChildrenKeys {
    icon = "icon",
    header = "header",
    headerTitle = "header-title",
    headerActivity = "header-activity",
    actions = "actions"
}
export declare function BaseTaskCanvasHeader<ParentProps>({ contentStore, childProps, icon, task, IconComponent, templates, titleTemplateCode, getTemplateForStatus, statusTemplate, ParentComponent, taskHelper, titleTemplateContext, secondLineTemplateCode, secondLineTemplateContext, ActionsComponent }: BaseTaskCanvasHeaderProps<ParentProps>): JSX.Element;
