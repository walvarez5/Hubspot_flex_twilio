import * as React from "react";
import type { CSSProps } from "../../utils/theme";
/**
 * @typedef DialpadButtonClickCallback
 * @callback DialpadButtonClickCallback
 * @param {string} value value of clicked key
 * @returns {void}
 * @memberof Dialpad
 * @since 2.0.0
 */
type DialpadButtonClickCallback = (value: string) => void;
/**
 * @typedef  Dialpad.DialpadProps
 * @property {DialpadButtonClickCallback} [onClick] - Callback when a dialpad button is clicked
 * @property {React.RefObject<HTMLInputElement>} inputRef - input ref
 * @since 2.0.0
 */
export interface DialpadProps {
    onClick: DialpadButtonClickCallback;
    onUndo?: () => void;
    inputRef?: React.RefObject<HTMLInputElement>;
    disabled?: boolean;
    compact?: boolean;
    inOutboundDialer?: boolean;
}
/**
 * @typedef Theme.DialpadButtonThemeProps
 * @property {(CSSProps | { disabled: CSSProps })} Container - Style for the dialpad button's container
 * @property {CSSProps} Caption - Style for the dialpad button's caption
 * @property {CSSProps} Description - Style for the dialpad button's description
 * @since 2.0.0
 */
export interface DialpadButtonThemeProps {
    Container: CSSProps & {
        disabled?: CSSProps;
        lightHover?: boolean;
    };
    Caption: CSSProps;
    Description: CSSProps;
}
/**
 * @typedef Theme.DialpadThemeProps
 * @property {DialpadButtonThemeProps} Button - Style for the dialpad's buttons
 * @since 2.0.0
 */
export interface DialpadThemeProps {
    Button: DialpadButtonThemeProps;
}
export interface State {
    animate: {
        [key: string]: boolean;
    };
}
export declare function isSupportedChar(char: string): boolean;
export interface BaseDialpadProps extends DialpadProps {
    templates?: any;
}
export declare const BaseDialpadDefaultTemplate: {
    DialpadNum0Caption: () => string;
    DialpadNum0Description: () => string;
    DialpadNum1Caption: () => string;
    DialpadNum1Description: () => string;
    DialpadNum2Caption: () => string;
    DialpadNum2Description: () => string;
    DialpadNum3Caption: () => string;
    DialpadNum3Description: () => string;
    DialpadNum4Caption: () => string;
    DialpadNum4Description: () => string;
    DialpadNum5Caption: () => string;
    DialpadNum5Description: () => string;
    DialpadNum6Caption: () => string;
    DialpadNum6Description: () => string;
    DialpadNum7Caption: () => string;
    DialpadNum7Description: () => string;
    DialpadNum8Caption: () => string;
    DialpadNum8Description: () => string;
    DialpadNum9Caption: () => string;
    DialpadNum9Description: () => string;
    DialpadHashCaption: () => string;
    DialpadHashDescription: () => string;
    DialpadAsteriskCaption: () => string;
};
export {};
