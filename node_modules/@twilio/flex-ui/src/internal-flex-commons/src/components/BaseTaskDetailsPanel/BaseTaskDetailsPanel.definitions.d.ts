import * as React from "react";
import { type BaseITask, type IWorker, DynamicContentStore } from "../../utils";
export declare enum TaskDetailsPanelChildrenKeys {
    container = "container",
    buttonContainer = "button-container",
    infoContainer = "info-container",
    copilotTranscriptionStatus = "copilot-transcription-status"
}
export interface TaskContextProps {
    task?: BaseITask;
}
export interface TaskDetailsContentProps<TaskCanvasChildrenProps> {
    IconComponent?: React.ComponentType<Partial<TaskCanvasChildrenProps> | TaskContextProps>;
    titleLine?: string;
    firstLine?: string;
    secondLine?: string;
    subjectLine?: string;
    agentNotes?: string;
    isDigitalTransfer: boolean;
    templates: any;
    taskHelper: any;
    worker: boolean | IWorker;
    task?: BaseITask;
}
export interface BaseTaskDetailsPanelProps<ParentProps, TaskCanvasChildrenProps> extends Partial<TaskDetailsContentProps<TaskCanvasChildrenProps>> {
    compact?: boolean;
    childProps?: React.PropsWithChildren<ParentProps>;
    content: DynamicContentStore<TaskCanvasChildrenProps, TaskDetailsPanelChildrenKeys>;
    ActionsComponent?: React.ComponentType<Partial<TaskCanvasChildrenProps> | TaskContextProps>;
    renderContentContainer?: (props: BaseTaskDetailsPanelProps<ParentProps, TaskCanvasChildrenProps>) => React.ReactElement;
}
