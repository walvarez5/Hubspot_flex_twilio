import { BaseAvatar } from "../BaseAvatar";
import { FlexBox, FlexBoxColumn } from "../FlexBox";
export interface ContainerProps {
    isDisabled: boolean;
}
export declare const Container: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & ContainerProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const Name: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const StatusContainer: import("@emotion/styled").StyledComponent<import("../FlexBox").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBoxColumn>;
}>;
export declare const Status: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export interface StyledAvatarProps {
    hold: boolean;
}
export declare const StyledAvatar: import("@emotion/styled").StyledComponent<Pick<import("../BaseAvatar/BaseAvatar").BaseAvatarProps, "className" | "templates" | "imageUrl" | "large" | "available" | "noStyling"> & Partial<Pick<import("../BaseAvatar/BaseAvatar").BaseAvatarProps, "showAvailabilityIcon">> & Partial<Pick<{
    showAvailabilityIcon: boolean;
}, never>> & {
    theme?: import("@emotion/react").Theme;
} & StyledAvatarProps, {}, {
    ref?: import("react").Ref<BaseAvatar>;
}>;
export declare const AvatarHover: import("@emotion/styled").StyledComponent<import("../FlexBox").FlexBoxProperties & {
    theme?: import("@emotion/react").Theme;
}, {}, {
    ref?: import("react").Ref<FlexBox>;
}>;
export declare const ActionsContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TranscriptParticipantContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TranscriptParticipantMetaContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const TranscriptParticipantStatusContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
