import * as React from "react";
import { type BaseParticipantCanvasProps, type CCAIParticipantListItemProps, type ParticipantContentListProps, type ParticipantContentProps, type ParticipantKickConfirmationProps } from "./BaseParticipantCanvas.definitions";
export declare function participantAttributes<ParticipantAttributes extends Record<string, any>>(arg: ParticipantAttributes): {
    name: React.ReactNode;
    avatar: string;
    statusTemplate: any;
};
export declare function ParticipantKickConfirmation({ templates, onKickParticipantConfirmClick, onHideKickConfirmation }: ParticipantKickConfirmationProps): JSX.Element;
export declare function ParticipantContentList<ParentsChildrenProps>({ templates, isDisabled, listItemContentStore, listItemDisplayName, parentProps, avatar, onHold, connecting, connectingColor, name, statusTemplate, hideActions, isTaskAssignedToCurrentWorker, actionsItemContentStore, actionsItemDisplayName, adjustedTheme, renderActions }: ParticipantContentListProps<ParentsChildrenProps>): JSX.Element;
export declare function ParticipantContent<ParentsChildrenProps>({ adjustedTheme, participantCanvasContentStore, participantCanvasDisplayName, parentProps, participantWidth, isDisabled, avatar, onHold, connecting, connectingColor, name, statusTemplate, hideActions, isTaskAssignedToCurrentWorker, actionsItemContentStore, actionsItemDisplayName, renderActions, templates }: ParticipantContentProps<ParentsChildrenProps>): JSX.Element;
export declare function CCAIParticipantListItem<ParentsChildrenProps>({ adjustedTheme, participantCanvasContentStore, participantCanvasDisplayName, parentProps, participantType, name, statusTemplate, templates, hideActions, isTaskAssignedToCurrentWorker, actionsItemContentStore, actionsItemDisplayName, renderActions }: CCAIParticipantListItemProps<ParentsChildrenProps>): JSX.Element;
declare const BaseParticipantCanvasThemed: React.FC<Pick<BaseParticipantCanvasProps, "cancelTransfer" | "templates" | "hideActions" | "task" | "isCCAICall" | "participantWidth" | "participant" | "listMode" | "isTaskAssignedToCurrentWorker" | "kickParticipant" | "handleHold" | "hideHoldButton"> & {
    theme?: import("@emotion/react").Theme;
}>;
export { BaseParticipantCanvasThemed as BaseParticipantCanvas };
