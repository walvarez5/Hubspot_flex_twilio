import { BaseITask, DynamicContentStore } from "../../utils";
export interface BaseParticipantsCanvasProps<ParentProps> {
    isCCAICall?: boolean;
    templates: any;
    listMode: boolean;
    task?: BaseITask;
    contentStore: DynamicContentStore<any>;
    childProps: React.PropsWithChildren<ParentProps>;
    participants: any[];
    isCurrentWorkerOnHold?: boolean;
    unHoldMyself: () => void;
    renderActionStateListener: () => React.ReactNode;
    renderParticipants: (props: BaseParticipantsCanvasProps<ParentProps>) => React.ReactNode;
    renderCallQualityIndicator: () => React.ReactNode;
}
export declare enum ParticipantsCanvasChildrenKeys {
    container = "container",
    onHold = "onHold",
    participantsContainer = "participantsContainer",
    transcriptContainer = "transcriptContainer",
    transcriptDisclosure = "trasncriptDisclosure",// This key originally had a typo
    transcriptDisclosureHeading = "transcriptDisclosureHeading",
    transcriptDisclosureContent = "transcriptDisclosureContent",
    transcriptParticipantContainer = "transcriptParticipantContainer",
    callQualityStatus = "call-quality-status"
}
