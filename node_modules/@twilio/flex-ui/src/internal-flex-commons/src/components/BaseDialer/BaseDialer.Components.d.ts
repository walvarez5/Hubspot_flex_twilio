import type { CSSProps } from "../../utils/theme";
/**
 * @interface ButtonThemeProps
 * @memberof Theme
 * @property {string} [disabledColor] Use the disabled color
 * @property {boolean} [lightHover] Use the light hover effect
 * @since 2.0.0
 */
export interface ButtonThemeProps extends Partial<CSSProps> {
    disabledColor?: string;
    lightHover?: boolean;
}
export declare const PhoneInput: import("@emotion/styled").StyledComponent<import("@material-ui/core/Input").InputProps & {
    theme?: import("@emotion/react").Theme;
}, {}, {}>;
export declare const PhoneInputContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const ClearInputButton: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
} & {
    isVisible: boolean;
}, import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, {}>;
export declare const DialerContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const DialerActions: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: import("react").ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
