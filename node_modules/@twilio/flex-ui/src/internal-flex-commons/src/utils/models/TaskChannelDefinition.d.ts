import React from "react";
import type { BaseITask } from "./BaseITask";
/**
 * @enum {"Accepted" | "Wrapping" | "Completed" | "Canceled" | "Pending" | "Rescinded"} ReservationStatuses
 * @property {"Wrapping"} Wrapping - wrapping state
 * @property {"Completed"} Completed - completed state
 * @property {"Canceled"} Canceled - canceled state
 * @property {"Pending"} Pending - pending state
 * @property {"Accepted"} Accepted - accepted state
 * @property {"Rescinded"} Rescinded - rescinded state
 * @memberof TaskChannelDefinition
 * @since 2.0.0
 */
export declare enum ReservationStatuses {
    Wrapping = "Wrapping",// wrapping state
    Completed = "Completed",// completed state
    Canceled = "Canceled",// canceled state
    Pending = "Pending",// pending state
    Accepted = "Accepted",// accepted state
    Rescinded = "Rescinded",// rescinded state
    PendingTransfer = "PendingTransfer",// task was transferred to worker is pending action
    Reserved = "Reserved",
    Assigned = "Assigned"
}
type TaskCallbackType<T> = (task: BaseITask, componentType: React.ComponentType, ...args: Array<any>) => T;
type TaskStatusBasedTypeBase<T> = {
    [key in ReservationStatuses]?: T;
};
export type TaskStatusBasedType<T = string> = T | TaskCallbackType<T> | TaskStatusBasedTypeBase<T>;
export {};
