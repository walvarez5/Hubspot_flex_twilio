import { EventEmitter } from "events";
export declare enum TelemetryBridgeMessageType {
    MEDIA_MESSAGE_SENT = "MEDIA_MESSAGE_SENT",
    MEDIA_MESSAGE_RECEIVED = "MEDIA_MESSAGE_RECEIVED",
    DYNAMIC_COMPONENT_PROGRAMMABILITY = "DYNAMIC_COMPONENT_PROGRAMMABILITY",
    UI_INTERACTION_EVENT = "UI_INTERACTION_EVENT",
    ERROR_EVENT = "ERROR_EVENT",
    TELEMETRY_UI_INTERACTION_EVENT = "TELEMETRY_UI_INTERACTION_EVENT",
    TELEMETRY_DISABLED_EVENT = "TELEMETRY_DISABLED_EVENT",
    ERROR_TELEMETRY_DISABLED_EVENT = "ERROR_TELEMETRY_DISABLED_EVENT"
}
declare class TelemetryBridgeImpl extends EventEmitter {
    emit(type: TelemetryBridgeMessageType, payload: Record<string, any>): boolean;
}
export declare const TelemetryBridge: TelemetryBridgeImpl;
export {};
