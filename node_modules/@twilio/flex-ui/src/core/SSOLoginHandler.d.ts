import { SSOConfig } from "../state/AppConfig";
export { SSOConfig };
export declare class SSOLoginHandler {
    static create(config?: SSOConfig): Promise<SSOLoginHandler>;
    /**
     * Tries to log in with provided information. Does not initialize token expiration checker.
     * @param config SSO configuration object
     * @private
     */
    static tryLogin(config?: SSOConfig): Promise<boolean>;
    /**
     * Validates configuration object and throws in case of any error.
     * @throws ConfigError if sso or accountSid are missing
     *
     * @param config configuration object
     * @private
     */
    static tryValidateConfig(config: SSOConfig): Promise<void>;
    private static tryLoginInNewWindow;
    private static openLoginWindow;
    private _config;
    constructor(config: SSOConfig);
    private initialize;
    private getAccountSid;
    private static isInLoginWindow;
}
