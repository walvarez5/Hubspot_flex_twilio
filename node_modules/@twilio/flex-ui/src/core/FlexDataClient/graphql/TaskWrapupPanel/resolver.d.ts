import { Resolvers } from "@twilio/flex-sdk/data-client";
import { AgentCopilotTranscriptionSentence } from "../../generated/graphql";
export declare const createSummaryRequest: (interactionSid: string, instanceSid: string, channelSid: string, taskSid?: string, participantSid?: string, profileConnectSid?: string, summary?: string, sentiment?: string, dispositionCodeSid?: string, detectedLanguage?: string, codes?: string) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const updateSummaryRequest: (sid: string, instanceSid: string, interactionSid: string, channelSid: string, summary: string, currentVersion: number, taskSid?: string, sentiment?: string, dispositionCodeSid?: string, generatedSummary?: string, generatedSentiment?: string, generatedDispositionCodeSid?: string, participantSid?: string, profileConnectSid?: string, codes?: string) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const fetchDispositionCodes: (instanceSid: string, topicSid?: string, archived?: boolean) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const fetchFeatureConfiguration: (instanceSid: string, featureName: string) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const fetchTopics: (instanceSid: string, parentSid?: string, type?: string) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const fetchTranscriptionSentences: (interactionSid: string, channelSid: string) => Promise<AgentCopilotTranscriptionSentence[]>;
export declare const taskWrapupPanelResolvers: Resolvers;
