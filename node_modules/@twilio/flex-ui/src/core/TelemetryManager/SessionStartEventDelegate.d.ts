import { FeatureFlag } from "../../models/FeatureFlagsModel";
import * as AppConfig from "../../state/AppConfig";
import { PluginManagerDefinition } from "../PluginManager";
import AbstractTelemetryEventsDelegate from "./AbstractTelemetryEventsDelegate";
interface PluginsInfo {
    name: string;
    version: string;
}
interface FormattedSessionStartEvent {
    enabled_features: string[];
    plugins_loaded: PluginsInfo[];
    config: string;
    flex_version: string;
    react_version: string;
    bundling_type: string;
    is_iframed: boolean;
    screen_width: number;
    screen_height: number;
    browserVersion: string;
    osVersion: string;
    browserApp: string;
    loadTime: string;
}
export interface SessionStartEvent {
    enabledFeatureFlags: FeatureFlag[];
    config: AppConfig.Config;
    plugins: Array<PluginManagerDefinition>;
    flexVersion: string;
    browserVersion: string;
    osVersion: string;
    browserApp: string;
    loadTime: string;
}
export declare class SessionStartEventDelegate extends AbstractTelemetryEventsDelegate<FormattedSessionStartEvent> {
    getSchemaName(): string;
    getEventName(): string;
    format(event: SessionStartEvent): FormattedSessionStartEvent;
}
export {};
