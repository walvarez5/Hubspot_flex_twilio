import Fuse from "fuse.js";
export declare function useToggle(initialState?: boolean): {
    isToggled: boolean;
    toggleOn: () => void;
    toggleOff: () => void;
};
export declare function useMultiSelection(initialState?: {}): {
    selectedItems: Record<string, boolean>;
    setSelectedItems: import("react").Dispatch<import("react").SetStateAction<Record<string, boolean>>>;
    toggleItem: (id: string | string[]) => void;
};
export declare function useFuseSearch<T>(list: ReadonlyArray<T>, searchTerm: string, options: Fuse.IFuseOptions<T>): Array<T>;
export declare function useResizeObserver<T extends HTMLElement>(callback: (target: T, entry: ResizeObserverEntry) => void): import("react").MutableRefObject<T>;
export default useResizeObserver;
