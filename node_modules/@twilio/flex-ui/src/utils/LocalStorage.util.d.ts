/**
 * An implementations that stores information in the local storage
 * @category Storages
 * @extends Storage
 * @hideconstructor
 * @private
 */
export declare class LocalStorage {
    static calculateUsedSpace(data: string): number;
    static maxLocalStorageSize: number;
    static localStoragePrefix: string;
    /**
     * Set value in local storage
     *
     * @param {string} key key for the storing the value
     * @param {any} value any value
     * @example
     *
     * LocalStorage.setData('test','val')
     */
    static setData(key: string, value: any): any;
    static keyValue(key: string): string;
    /**
     * Set a maximum local storage content size
     *
     * @param {number} newSizeLimit New content size limit in Kbs
     * @returns {void} Value set
     * @example
     *
     * LocalStorage.setMaxLocalStorageSize(512)
     */
    static setMaxLocalStorageSize(newSizeLimit: number): void;
    /**
     * Get a maximum local storage size
     *
     * @returns {number} Maximum size of the local storage in Kbs
     * @example
     *
     * LocalStorage.getMaxLocalStorageSize()
     */
    static getMaxLocalStorageSize(): number;
    /**
     * Get the value stored in the local storage
     *
     * @returns {any} Value that was saved
     * @example
     *
     * let val = LocalStorage.get('test')
     */
    static get(key: string): any;
    /**
     * Check if the value is present inside localStorage
     *
     * @param {string} key Key to be checked in localStorage
     * @example
     *
     * if(LocalStorage.isEnabled('test)){
     *     console.log('variable is present in localstorage')
     * }
     */
    static isEnabled(key: string): boolean;
    /**
     * Clear all records in the local storage
     *
     * @returns {void} Successfully removed
     * @example
     *
     * LocalStorage.remove('test))
     */
    static remove(key: string): void;
    /**
     * Clear all records in the local storage
     *
     * @returns {void} Successfully cleared localStorage
     * @example
     *
     * LocalStorage.clear('test))
     */
    static clear(): void;
}
