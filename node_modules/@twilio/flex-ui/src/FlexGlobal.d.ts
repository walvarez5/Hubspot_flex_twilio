import * as React from "react";
import * as ReactDOM from "react-dom";
import * as ReactRedux from "react-redux";
import * as Redux from "redux";
import * as Flex from "./index";
export type FlexType = typeof Flex;
type ReactType = typeof React;
type ReactDOMType = typeof ReactDOM;
type ReduxType = typeof Redux;
type ReactReduxType = typeof ReactRedux;
declare global {
    interface Window {
        Twilio: {
            Flex: FlexType;
            FlexProxy?: {
                [key: string]: FlexType;
            };
        };
        React: ReactType;
        ReactDOM: ReactDOMType;
        Redux: ReduxType;
        ReactRedux: ReactReduxType;
        CitrixWebRTC: any;
        getCitrixWebrtcRedir: () => {};
        Highcharts: any;
    }
    enum BundleType {
        library = "library",
        cdnBundledReact = "cdnBundledReact",
        cdnUnbundledReact = "cdnUnbundledReact"
    }
}
type GlobalDeps = {
    [key: string]: any;
};
export declare const setTwilioInWindow: () => void;
export declare const isConflictingDependency: (name: string, all: GlobalDeps) => boolean;
export declare const setGlobalDependencies: (dependencies?: GlobalDeps) => void;
export { Flex };
