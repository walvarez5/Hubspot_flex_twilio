typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as d,__classPrivateFieldGet as a}from"../../../../../node_modules/tslib/tslib.es6.js";import"../../../../modules/error/FlexSdkError/FlexSdkError.js";import{ErrorCode as S}from"../../../../modules/error/ErrorCode/ErrorCodes.js";import"../../../../modules/error/ErrorCode/InternalErrorCodes.js";import{isDownstreamErrorCode as l}from"../../../../modules/error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as u}from"../../../../modules/error/ErrorSeverity/ErrorSeverity.js";import{throwFlexSdkError as f}from"../../../../modules/error/ThrowError/ErrorHelper.js";import{SimpleHttpAdapterImpl as g}from"../../../SimpleHttpAdapter/SimpleHttpAdapterImpl.js";var t;class w{constructor(e){t.set(this,void 0),this.simpleHttpAdapter=new g(e),d(this,t,f(e),"f"),this.simpleHttpAdapter.setIsEdgeSupported()}async getAuthenticationConfig(e,i,n,s,p){const m={module:"backend",severity:u.Error,source:"ssoSetup.service.ts"};let o;try{o=await this.simpleHttpAdapter.get(`https://services[region].twilio.com/v1/Flex/Authentication/Config?AccountSid=${encodeURIComponent(String(e))}&FlexInstanceSid=${encodeURIComponent(String(i))}&RuntimeDomain=${encodeURIComponent(String(n))}&SSOProfileSid=${encodeURIComponent(String(s))}&AppType=${encodeURIComponent(String(p))}`,void 0)}catch(r){if(l(r.code)){const c=`SsoSetupService - ${r.message}`;return a(this,t,"f").call(this,S.DownstreamServiceError,m,c)}return Promise.reject(r)}return o}}t=new WeakMap;export{w as SsoSetupServiceImpl};
//# sourceMappingURL=ssoSetup.service.js.map
