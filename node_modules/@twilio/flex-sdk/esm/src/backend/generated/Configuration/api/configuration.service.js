typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as h,__classPrivateFieldGet as s}from"../../../../../node_modules/tslib/tslib.es6.js";import"../../../../modules/error/FlexSdkError/FlexSdkError.js";import{ErrorCode as a}from"../../../../modules/error/ErrorCode/ErrorCodes.js";import"../../../../modules/error/ErrorCode/InternalErrorCodes.js";import{isDownstreamErrorCode as p}from"../../../../modules/error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as l}from"../../../../modules/error/ErrorSeverity/ErrorSeverity.js";import{HttpAdapterImpl as g}from"../../../HttpAdapter/HttpAdapterImpl.js";import{AuthenticationMethod as u}from"../../../commons/authenticationMethods.js";import{convertDateStringValuesToDate as m}from"../../../../utils/processHttpAdapterResponse.js";import{throwFlexSdkError as v}from"../../../../modules/error/ThrowError/ErrorHelper.js";var r;class w{constructor(e){r.set(this,void 0),this.httpAdapter=new g(e),h(this,r,v(e),"f"),this.httpAdapter.setIsEdgeSupported(!0)}async fetchConfiguration(e,t,o){const c={module:"backend",severity:l.Error,source:"configuration.service.ts"};let i;try{i=await this.httpAdapter.get(`https://flex-api[region].twilio.com/v1/Configuration?${encodeURIComponent(String(e))}=${encodeURIComponent(String(t))}`,u.Basic,o)}catch(d){if(p(d.code)){const f=`ConfigurationService - ${d.message}`;return s(this,r,"f").call(this,a.DownstreamServiceError,c,f)}return Promise.reject(d)}return m(i)}async fetchPublicConfiguration(e,t){const o={module:"backend",severity:l.Error,source:"configuration.service.ts"};e==null&&s(this,r,"f").call(this,a.InvalidParams,o,"Required parameter queryParamName was null or undefined."),t==null&&s(this,r,"f").call(this,a.InvalidParams,o,"Required parameter queryParamValue was null or undefined.");let c;try{c=await this.httpAdapter.get(`https://flex-api[region].twilio.com/v1/Configuration/Public?${encodeURIComponent(String(e))}=${encodeURIComponent(String(t))}`,void 0)}catch(n){if(p(n.code)){const d=`ConfigurationService - ${n.message}`;return s(this,r,"f").call(this,a.DownstreamServiceError,o,d)}return Promise.reject(n)}return m(c)}async updateConfiguration(e){const t={module:"backend",severity:l.Error,source:"configuration.service.ts"};e==null&&s(this,r,"f").call(this,a.InvalidParams,t,"Required parameter accountConfigData was null or undefined.");let o;try{o=await this.httpAdapter.post("https://flex-api[region].twilio.com/v1/Configuration",u.Basic,e)}catch(i){if(p(i.code)){const n=`ConfigurationService - ${i.message}`;return s(this,r,"f").call(this,a.DownstreamServiceError,t,n)}return Promise.reject(i)}return m(o)}}r=new WeakMap;export{w as ConfigurationServiceImpl};
//# sourceMappingURL=configuration.service.js.map
