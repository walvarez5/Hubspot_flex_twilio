typeof window<"u"&&(window.global=window);import{ApolloLink as A,split as U,ApolloClient as _}from"@apollo/client/core";import{HttpLink as $}from"@apollo/client/link/http";import{RetryLink as I}from"@apollo/client/link/retry";import{from as P}from"@apollo/client/link/core";import{GraphQLWsLink as x}from"@apollo/client/link/subscriptions";import{getMainDefinition as R}from"@apollo/client/utilities";import{setContext as T}from"@apollo/client/link/context";import{createClient as z}from"graphql-ws";import{WebSocket as f}from"ws";import{print as H}from"graphql";import{getEnvironmentConfig as j}from"../../../modules/config/EnvironmentConfig/EnvironmentConfigImpl.js";import"../../../modules/logger/Logger/LogEntry.js";import"../../../modules/logger/Logger/LoggerName.js";import"../../../modules/logger/LoggerFactory/getLogger.js";import"../../../modules/logger/LoggerFactory/LoggerConfigImpl.js";import"../../../modules/error/FlexSdkError/FlexSdkError.js";import"../../../modules/error/ErrorCode/ErrorCodes.js";import"../../../modules/error/ErrorCode/InternalErrorCodes.js";import"../../../modules/error/ErrorCode/ErrorCodeHelper.js";import"../../../modules/error/ErrorSeverity/ErrorSeverity.js";import"../../../modules/storage/LocalStorage/LocalStorageKeys.js";import"../../../modules/config/AccountConfig/AccountConfigImpl/AccountConfigDataContainer/AccountConfigDataContainer.js";import"../../../modules/reporter/ErrorReporter.js";import"../../../modules/storage/LocalStorage/LocalStorageImpl.js";import"../../../modules/client/ClientOptions/ClientOptionsStore.js";import"../../../backend/generated/Configuration/api/configuration.service.js";import{buildRegionalHost as F}from"../../../utils/regionUtil.js";import{DataClientError as O}from"../error/DataClientError/DataClientError.js";import{cache as v}from"./cache.js";const Q=async(e,i)=>{var l,c,s;try{const m=j(),{region:h}=m||{},p=F(h||i?.region||""),y=`wss://event-bridge${p}.twilio.com/graphql-subscriptions`,u=`https://preview${p}.twilio.com/Flex/graphql`,d=typeof e=="function",o=[];i?.errorLink&&o.push(i.errorLink);const g=T(async(t,{headers:r})=>{const a=d?await e():e,n=btoa(`token:${a}`);return{headers:Object.assign(Object.assign({},r),{authorization:n?`Basic ${n}`:""})}});o.push(g);const w=new I({attempts:{max:5},delay:{initial:1e3,max:3e3}});o.push(w);const b=()=>new A((t,r)=>{const{headers:a}=t.getContext(),n=H(t.query),E=JSON.stringify(a).length,D=JSON.stringify(t.variables),q=`${u}?query=${encodeURIComponent(n)}&variables=${encodeURIComponent(D)}`.length+E<=8e3;return new $({uri:u,useGETForQueries:q}).request(t,r)});o.push(b());const L=y,k=new x(z(Object.assign(Object.assign({url:L},typeof f>"u"&&{webSocketImpl:f}),{connectionParams:async()=>({authToken:`Bearer ${d?await e():e}`})}))),C=U(({query:t})=>{const r=R(t);return r.kind==="OperationDefinition"&&r.operation==="subscription"},k,P(o));i?.typePolicies&&v.policies.addTypePolicies(i?.typePolicies);const S=new _({cache:v,connectToDevTools:(l=i?.connectToDevTools)!==null&&l!==void 0?l:!1,link:C,defaultOptions:{query:{fetchPolicy:"network-only",errorPolicy:"all"}},typeDefs:(c=i?.localSchema)===null||c===void 0?void 0:c.typeDefs,resolvers:(s=i?.localSchema)===null||s===void 0?void 0:s.resolvers});return Promise.resolve(S)}catch{throw new Error(O.GraphqlApolloClientInitializationFailed)}};export{Q as createDataClient};
//# sourceMappingURL=index.js.map
