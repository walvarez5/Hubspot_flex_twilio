typeof window<"u"&&(window.global=window);import{Analytics as m}from"@segment/analytics-node";import c from"../../../package.json.js";import{ClientOptionsStore as e}from"../client/ClientOptions/ClientOptionsStore.js";import{getEnvironmentConfig as a}from"../config/EnvironmentConfig/EnvironmentConfigImpl.js";import"../logger/Logger/LogEntry.js";import{LoggerName as l}from"../logger/Logger/LoggerName.js";import{getLogger as p}from"../logger/LoggerFactory/getLogger.js";import"../logger/LoggerFactory/LoggerConfigImpl.js";import"../error/FlexSdkError/FlexSdkError.js";import"../error/ErrorCode/ErrorCodes.js";import"../error/ErrorCode/InternalErrorCodes.js";import"../error/ErrorCode/ErrorCodeHelper.js";import"../error/ErrorSeverity/ErrorSeverity.js";import"../storage/LocalStorage/LocalStorageKeys.js";import"../config/AccountConfig/AccountConfigImpl/AccountConfigDataContainer/AccountConfigDataContainer.js";import"../reporter/ErrorReporter.js";import"../storage/LocalStorage/LocalStorageImpl.js";import"../../backend/generated/Configuration/api/configuration.service.js";import{getOrigin as g}from"../../utils/getOrigin.js";class f{constructor(o){this.track=(t,i)=>{if(!this.analytics){this.logger.warn("Analytics is not initialized");return}try{this.analytics.track({userId:i?.userId,anonymousId:i?.anonymousId,event:t,properties:Object.assign(Object.assign({},this.commonProperties),i)})}catch(n){this.logger.warn(n)}},this.clientOptions=o.getInstanceOf(e),this.logger=p(o)(l.Analytics)}init(o){this.analytics=new m({writeKey:o});const t=a(),{region:i}=t||{},n=i||this.clientOptions.region||"us1",r=g(),s=r==="flexui"&&this.clientOptions.appVersion;this.commonProperties=Object.assign({product:"Flex",source:"flexsdk",realm:n,flexSdkVersion:c.version,origin:r},s&&{flexUiVersion:s})}}export{f as AnalyticsImpl};
//# sourceMappingURL=AnalyticsImpl.js.map
