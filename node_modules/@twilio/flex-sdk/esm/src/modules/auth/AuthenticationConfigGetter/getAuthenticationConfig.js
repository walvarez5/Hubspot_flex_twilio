typeof window<"u"&&(window.global=window);import{getRuntimeDomainName as g}from"../AuthenticatorHelpers/getRuntimeDomainName.js";import{assertDefined as d,assertObject as l}from"../../../utils/assert.js";import{SsoSetupServiceImpl as u}from"../../../backend/generated/SSOSetup/api/ssoSetup.service.js";import{mapRootKeysToCamelCase as S}from"../../../utils/mapKeys.js";import{getEnvironmentConfig as w}from"../../config/EnvironmentConfig/EnvironmentConfigImpl.js";import"../../logger/Logger/LogEntry.js";import"../../logger/Logger/LoggerName.js";import"../../logger/LoggerFactory/getLogger.js";import"../../logger/LoggerFactory/LoggerConfigImpl.js";import"../../error/FlexSdkError/FlexSdkError.js";import"../../error/ErrorCode/ErrorCodes.js";import"../../error/ErrorCode/InternalErrorCodes.js";import"../../error/ErrorCode/ErrorCodeHelper.js";import"../../error/ErrorSeverity/ErrorSeverity.js";import"../../storage/LocalStorage/LocalStorageKeys.js";import"../../config/AccountConfig/AccountConfigImpl/AccountConfigDataContainer/AccountConfigDataContainer.js";import"../../reporter/ErrorReporter.js";import"../../storage/LocalStorage/LocalStorageImpl.js";import"../../client/ClientOptions/ClientOptionsStore.js";import"../../../backend/generated/Configuration/api/configuration.service.js";const v=r=>async o=>{d(o,"config"),l(o,"config");const m=r.getInstanceOf(u),{accountSid:p="",instanceSid:s="",runtimeDomain:i="",ssoProfileSid:a="",appType:c="SinglePageApp"}=o;let e=i;if(i){const n=w(),{region:f}=n||{};e=g(i,f)}const t=await m.getAuthenticationConfig(p,s,e,a,c);return{configList:(t?.config_list||[]).map(n=>S(n))}};export{v as getAuthenticationConfig};
//# sourceMappingURL=getAuthenticationConfig.js.map
