typeof window<"u"&&(window.global=window);import{__classPrivateFieldGet as e,__classPrivateFieldSet as s}from"../../../node_modules/tslib/tslib.es6.js";import{Device as l,Call as U}from"@twilio/voice-sdk";import L from"../../../package.json.js";import{ClientOptionsStore as z}from"../client/ClientOptions/ClientOptionsStore.js";import"../logger/Logger/LogEntry.js";import{LoggerName as F}from"../logger/Logger/LoggerName.js";import{getLogger as P}from"../logger/LoggerFactory/getLogger.js";import"../logger/LoggerFactory/LoggerConfigImpl.js";import{SessionImpl as $}from"../session/Session/SessionImpl.js";import{getEnvironmentConfig as x}from"../config/EnvironmentConfig/EnvironmentConfigImpl.js";import"../error/FlexSdkError/FlexSdkError.js";import"../error/ErrorCode/ErrorCodes.js";import"../error/ErrorCode/InternalErrorCodes.js";import"../error/ErrorCode/ErrorCodeHelper.js";import"../error/ErrorSeverity/ErrorSeverity.js";import"../storage/LocalStorage/LocalStorageKeys.js";import"../config/AccountConfig/AccountConfigImpl/AccountConfigDataContainer/AccountConfigDataContainer.js";import"../reporter/ErrorReporter.js";import"../storage/LocalStorage/LocalStorageImpl.js";import"../../backend/generated/Configuration/api/configuration.service.js";import{ClientEvent as M}from"../client/Client/ClientEvent.js";var c,g,d,r,_,C,n,p,V,w,N,y,k,a,E,b,R,A;class G{constructor(t){c.add(this),g.set(this,void 0),d.set(this,void 0),r.set(this,void 0),_.set(this,void 0),C.set(this,void 0),n.set(this,void 0),p.set(this,void 0),V.set(this,()=>{e(this,n,"f")&&e(this,n,"f").destroy()}),this.subscribeToIncomingCallEvent=i=>{if(!e(this,n,"f"))throw new Error("Voice device is not initialized");e(this,n,"f").on(l.EventName.Incoming,i)},this.unsubscribeFromIncomingCallEvent=i=>{if(!e(this,n,"f"))throw new Error("Voice device is not initialized");e(this,n,"f").removeListener(l.EventName.Incoming,i)},k.set(this,i=>{var o;e(this,r,"f").debug("Incoming voice call in VoiceController",i),e(this,c,"m",N).call(this,i),!((o=e(this,C,"f"))===null||o===void 0)&&o.autoAcceptIncomingCalls&&i.accept()}),a.set(this,i=>{const o=i.status();e(this,r,"f").debug("Voice call status changed, call status",o),o===U.State.Closed&&e(this,c,"m",y).call(this,i)}),E.set(this,(i,o)=>{e(this,r,"f").error("Voice device error",i)}),b.set(this,i=>{e(this,n,"f")||e(this,r,"f").warn("onNewToken in VoiceController, but there is no voiceDevice"),e(this,n,"f").updateToken(i)}),s(this,g,t.getInstanceOf($),"f"),s(this,d,t.getInstanceOf(z),"f"),s(this,r,P(t)(F.Voice),"f"),s(this,_,t,"f"),e(this,r,"f").debug("VoiceController constructed")}async init(t){var i,o;const{ClientImpl:v}=await import("../client/Client/ClientImpl/ClientImpl.js"),m=e(this,_,"f").getInstanceOf(v);if(s(this,C,e(this,d,"f").voiceOptions,"f"),m.addListener(M.TokenUpdated,e(this,b,"f")),m.addListener(M.ClientDestroyed,e(this,V,"f")),t)return s(this,n,t,"f"),e(this,c,"m",w).call(this),s(this,p,!0,"f"),Promise.resolve(e(this,n,"f"));const I=x(),{region:u,regionNonFlex:f}=I||{},O=f||e(this,d,"f").regionNonFlex||u||e(this,d,"f").region,W=e(this,c,"m",A).call(this,O),D=W?`.${W}`:"",H=`chunderw-vpc-gll${D}.twilio.com`,S=`eventgw-vpc-gll${D}.twilio.com`,T={allowIncomingWhileBusy:!0,appName:"flex-sdk",appVersion:L.version,logLevel:(o=(i=e(this,d,"f"))===null||i===void 0?void 0:i.logger)===null||o===void 0?void 0:o.level,chunderw:H,eventgw:S};return s(this,n,await e(this,c,"m",R).call(this,e(this,g,"f").token,T),"f"),e(this,c,"m",w).call(this),s(this,p,!0,"f"),Promise.resolve(e(this,n,"f"))}get voiceDevice(){return e(this,n,"f")}get isInitialized(){return e(this,p,"f")}isAudioInputDeviceAvailable(){var t,i;if(!e(this,n,"f"))return e(this,r,"f").error("Voice device is not initialized"),!1;e(this,r,"f").debug("Current device",e(this,n,"f")),e(this,r,"f").debug("Available input devices:",(t=e(this,n,"f").audio)===null||t===void 0?void 0:t.availableInputDevices);const o=Array.from(((i=e(this,n,"f").audio)===null||i===void 0?void 0:i.availableInputDevices.keys())||[]);if(!o.length)return e(this,r,"f").error("No audio input device"),!1;e(this,r,"f").debug("Available input device IDs:",o);const v=o.find(m=>m==="default")||o[0];return e(this,r,"f").debug(`Active device ID: ${v}`),!0}}g=new WeakMap,d=new WeakMap,r=new WeakMap,_=new WeakMap,C=new WeakMap,n=new WeakMap,p=new WeakMap,V=new WeakMap,k=new WeakMap,a=new WeakMap,E=new WeakMap,b=new WeakMap,c=new WeakSet,w=function(){e(this,n,"f").on(l.EventName.Incoming,e(this,k,"f")),e(this,n,"f").on(l.EventName.Error,e(this,E,"f"))},N=function(t){t.on("accept",e(this,a,"f")),t.on("cancel",e(this,a,"f")),t.on("disconnect",e(this,a,"f"))},y=function(t){t.off("accept",e(this,a,"f")),t.off("cancel",e(this,a,"f")),t.off("disconnect",e(this,a,"f"))},R=async function(t,i){const o=new l(t,i);return await o.register(),o.state===l.State.Registered?(e(this,r,"f").info("Voice device is already registered"),o):new Promise((v,m)=>{const I=setTimeout(()=>{const f="Voice device registration timed out";e(this,r,"f").error(f),m(new Error(f))},1e4),u=f=>{f.state===l.State.Registered&&(e(this,r,"f").info("Voice device registered successfully"),clearTimeout(I),o.off(l.EventName.Registered,u),v(f))};o.on(l.EventName.Registered,u)})},A=function(t){const i=t?.split("-")||[];return i.length>1?i[0]:t};export{G as VoiceControllerImpl};
//# sourceMappingURL=VoiceControllerImpl.js.map
