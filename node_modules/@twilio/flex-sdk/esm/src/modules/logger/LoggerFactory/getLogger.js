typeof window<"u"&&(window.global=window);import p from"../../../../_virtual/loglevel.js";import*as m from"loglevel";import{assertString as c}from"../../../utils/assert.js";import{SdkLoggerName as L}from"../Logger/LoggerName.js";import{logEntryPlugin as d}from"../plugins/logEntryPlugin.js";import{LoggerImpl as u}from"../Logger/LoggerImpl/LoggerImpl.js";import{LoggerConfigImpl as w}from"./LoggerConfigImpl.js";const g={[L.Twilsock]:p},v=t=>g[t].getLogger(t),l=new Map,k=t=>e=>{c(e,"name");let o=l.get(e);if(o)return o;const i=t.getInstanceOf(w).level,n=[d];let r;return Object.keys(g).includes(e)?r=v(e):r=m.getLogger(e),r=n.reduce((s,f)=>f(s),r),o=new u(r),o.setLevel(i),l.set(e,o),o};export{k as getLogger};
//# sourceMappingURL=getLogger.js.map
