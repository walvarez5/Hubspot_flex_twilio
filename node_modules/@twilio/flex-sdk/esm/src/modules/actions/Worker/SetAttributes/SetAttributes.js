typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as p,__classPrivateFieldGet as o}from"../../../../../node_modules/tslib/tslib.es6.js";import k from"lodash/merge";import{FlexSdkError as l}from"../../../error/FlexSdkError/FlexSdkError.js";import{ErrorCode as d}from"../../../error/ErrorCode/ErrorCodes.js";import"../../../error/ErrorCode/InternalErrorCodes.js";import"../../../error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as g}from"../../../error/ErrorSeverity/ErrorSeverity.js";import"../../../logger/Logger/LogEntry.js";import{LoggerName as S}from"../../../logger/Logger/LoggerName.js";import{getLogger as h}from"../../../logger/LoggerFactory/getLogger.js";import"../../../logger/LoggerFactory/LoggerConfigImpl.js";import{TaskRouterImpl as E}from"../../../../packages/taskrouter/TaskRouterImpl.js";import{sendTrackingEvent as w}from"../../ActionUtils.js";import{EVENTS as b}from"../../../analytics/Analytics.js";import{AnalyticsImpl as _}from"../../../analytics/AnalyticsImpl.js";var t,i;class y{constructor(s,r){t.set(this,void 0),i.set(this,void 0),p(this,t,s,"f"),p(this,i,r,"f")}async run(s){var r;const n=s,v=((r=o(this,i,"f"))===null||r===void 0?void 0:r.mergeExisting)||!1,m=n.getInstanceOf(E),c=h(n)(S.Actions),a=m.worker,u=n.getInstanceOf(_);if(c.debug("setAttributes called with attributes ",o(this,t,"f")),!a){const e="setAttributes: worker is not initialized";return c.error(e),Promise.reject(new l(d.SDK,{severity:g.Error},e))}const A=v?k(m.worker.attributes,o(this,t,"f")):o(this,t,"f");try{return await m.worker.setAttributes(A),w(b.SetAttributesCompleted,u,a),Promise.resolve()}catch(e){const f=`setAttributes: Could not set worker attributes: ${e.message}`;return w(b.SetAttributesCompleted,u,a,f),Promise.reject(new l(d.SDK,{severity:g.Error},f))}}}t=new WeakMap,i=new WeakMap;export{y as SetAttributes};
//# sourceMappingURL=SetAttributes.js.map
