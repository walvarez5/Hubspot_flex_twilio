typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as f,__classPrivateFieldGet as r}from"../../../../../node_modules/tslib/tslib.es6.js";import T from"lodash/merge";import{FlexSdkError as d}from"../../../error/FlexSdkError/FlexSdkError.js";import{ErrorCode as p}from"../../../error/ErrorCode/ErrorCodes.js";import"../../../error/ErrorCode/InternalErrorCodes.js";import"../../../error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as l}from"../../../error/ErrorSeverity/ErrorSeverity.js";import"../../../logger/Logger/LogEntry.js";import{LoggerName as h}from"../../../logger/Logger/LoggerName.js";import{getLogger as E}from"../../../logger/LoggerFactory/getLogger.js";import"../../../logger/LoggerFactory/LoggerConfigImpl.js";import{TaskRouterImpl as _}from"../../../../packages/taskrouter/TaskRouterImpl.js";import{getReservationsByTask as y,sendTrackingEvent as g}from"../../ActionUtils.js";import{EVENTS as b}from"../../../analytics/Analytics.js";import{AnalyticsImpl as M}from"../../../analytics/AnalyticsImpl.js";var e,n,m;class x{constructor(k,s,i){e.set(this,void 0),n.set(this,void 0),m.set(this,void 0),f(this,e,k,"f"),f(this,n,s,"f"),f(this,m,i,"f")}async run(k){var s;const i=k,S=((s=r(this,m,"f"))===null||s===void 0?void 0:s.mergeExisting)||!1,A=i.getInstanceOf(_),u=E(i)(h.Actions),o=A.worker,c=i.getInstanceOf(M);if(u.debug(`setTaskAttributes invoked with taskSid: ${r(this,e,"f")}`),!o){const t="setTaskAttributes: worker is not initialized";return u.error(t),Promise.reject(new d(p.SDK,{severity:l.Error},t))}const v=y(o,r(this,e,"f"));if(!v.length){const t=`setTaskAttributes: task for taskSid: ${r(this,e,"f")} is not found`;return u.error(t),g(b.SetTaskAttributesCompleted,c,o,t),Promise.reject(new d(p.SDK,{severity:l.Error},t))}const a=v[0].task;try{const t=S?T(a?.attributes,r(this,n,"f")):r(this,n,"f");return await a.setAttributes(t),g(b.SetTaskAttributesCompleted,c,o),a}catch(t){const w=`setTaskAttributes: Could not set task attributes: ${t.message}`;return g(b.SetTaskAttributesCompleted,c,o,w),Promise.reject(new d(p.SDK,{severity:l.Error},w))}}}e=new WeakMap,n=new WeakMap,m=new WeakMap;export{x as SetTaskAttributes};
//# sourceMappingURL=SetTaskAttributes.js.map
