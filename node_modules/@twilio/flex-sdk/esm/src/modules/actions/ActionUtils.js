typeof window<"u"&&(window.global=window);function o(t,e){const i=t.activity.sid;return e===i}function f(t){return!!(t&&t.default&&t.default.enabled)}function c(t){return t&&t.default&&t.default.queue_sid}function l(t){return t&&t.default&&t.default.workflow_sid}function v(t){return t&&t.default&&t.default.caller_id}function g(t,e){return(t?.reservations?Array.from(t.reservations.values()):[]).filter(n=>n.task&&n.task.sid===e)}function s(t){return t&&t.taskChannelUniqueName==="voice"}function k(t,e){return t&&t.reservations?Array.from(t.reservations.values()).some(i=>i.task&&i.status===e&&s(i.task)):!1}function S(t){if(t&&t.reservations){for(const[,e]of t.reservations.entries())if(e.task&&s(e.task))return e}return null}function T(t,e){const i=e?.features,n=i?.find(r=>r.id===t);return!!(n&&n.enabled)}function d(t){return s(t?.task)&&t.status==="accepted"}function y(t){return s(t)&&!!t.routingTarget&&t.attributes.direction==="outbound"}function p(t,e){return!!(t.task&&t.workerSid===e.sid)}function A(t,e){return d(t)&&p(t,e)}const m=(t,e,i,n)=>{if(!i)return;const r=Object.assign({groupId:i.accountSid,userId:i.sid,workerSid:i.sid},n&&{error:n});e.track(t,r)},B=async(t,e,i)=>{const n=e.sid;if(!n)return!1;const r=await i.getParticipantsByTask(t);return!!r?.find(u=>{var a;return((a=u?.routingProperties)===null||a===void 0?void 0:a.workerSid)===n})};export{A as canHold,v as getDefaultCallerID,c as getDefaultQueueSid,l as getDefaultWorkflowSid,g as getReservationsByTask,S as getVoiceReservation,k as hasVoiceTaskWithStatus,s as isCallTask,T as isFeatureFlagEnabled,d as isLiveCall,y as isOutboundCallTask,f as isOutboundCallingEnabled,B as isSupervisorAlreadyMonitoringCallTask,o as isWorkerOffline,m as sendTrackingEvent};
//# sourceMappingURL=ActionUtils.js.map
