typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as w,__classPrivateFieldGet as m}from"../../../../../node_modules/tslib/tslib.es6.js";import{FlexSdkError as f}from"../../../error/FlexSdkError/FlexSdkError.js";import{ErrorCode as p}from"../../../error/ErrorCode/ErrorCodes.js";import"../../../error/ErrorCode/InternalErrorCodes.js";import"../../../error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as d}from"../../../error/ErrorSeverity/ErrorSeverity.js";import"../../../logger/Logger/LogEntry.js";import{LoggerName as j}from"../../../logger/Logger/LoggerName.js";import{getLogger as T}from"../../../logger/LoggerFactory/getLogger.js";import"../../../logger/LoggerFactory/LoggerConfigImpl.js";import{TaskRouterImpl as u}from"../../../../packages/taskrouter/TaskRouterImpl.js";import{CbmImpl as y}from"../../../cbm/CbmImpl.js";import{getReservationsByTask as R,sendTrackingEvent as k}from"../../ActionUtils.js";import{EVENTS as l}from"../../../analytics/Analytics.js";import{AnalyticsImpl as E}from"../../../analytics/AnalyticsImpl.js";var e;class S{constructor(n){e.set(this,void 0),w(this,e,n,"f")}async run(n){const o=n,g=o.getInstanceOf(u),s=T(o)(j.Actions),t=g.worker,a=o.getInstanceOf(E),v=o.getInstanceOf(y);if(s.debug(`rejectTask invoked with taskSid: ${m(this,e,"f")}`),!t){const r="rejectTask: worker is not initialized";return s.error(r),Promise.reject(new f(p.SDK,{severity:d.Error},r))}const i=R(t,m(this,e,"f")).find(r=>r.status==="pending");if(!i){const r=`rejectTask: Reservation for task ${m(this,e,"f")} not found`;return s.error(r),k(l.RejectTaskCompleted,a,t,r),Promise.reject(new f(p.SDK,{severity:d.Error},r))}try{return await v.rejectReservation(i),k(l.RejectTaskCompleted,a,t),i}catch{const c=`rejectTask: Failed to reject reservation ${i.sid}`;return s.error(c),k(l.RejectTaskCompleted,a,t,c),Promise.reject(new f(p.SDK,{severity:d.Error},c))}}}e=new WeakMap;export{S as RejectTask};
//# sourceMappingURL=RejectTask.js.map
