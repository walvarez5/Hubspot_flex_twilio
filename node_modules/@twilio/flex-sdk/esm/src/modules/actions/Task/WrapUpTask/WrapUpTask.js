typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as v,__classPrivateFieldGet as u}from"../../../../../node_modules/tslib/tslib.es6.js";import{FlexSdkError as a}from"../../../error/FlexSdkError/FlexSdkError.js";import{ErrorCode as n}from"../../../error/ErrorCode/ErrorCodes.js";import"../../../error/ErrorCode/InternalErrorCodes.js";import"../../../error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as p}from"../../../error/ErrorSeverity/ErrorSeverity.js";import"../../../logger/Logger/LogEntry.js";import{LoggerName as g}from"../../../logger/Logger/LoggerName.js";import{getLogger as T}from"../../../logger/LoggerFactory/getLogger.js";import"../../../logger/LoggerFactory/LoggerConfigImpl.js";import{TaskRouterImpl as y}from"../../../../packages/taskrouter/TaskRouterImpl.js";import{CbmImpl as S}from"../../../cbm/CbmImpl.js";import{sendTrackingEvent as m,getReservationsByTask as E}from"../../ActionUtils.js";import{EVENTS as c}from"../../../analytics/Analytics.js";import{AnalyticsImpl as h}from"../../../analytics/AnalyticsImpl.js";var t;class C{constructor(f){t.set(this,void 0),v(this,t,f,"f")}async run(f){const s=f,l=s.getInstanceOf(y),o=T(s)(g.Actions),e=l.worker,i=s.getInstanceOf(h),w=s.getInstanceOf(S);if(o.debug(`wrapupTask invoked with taskSid: ${u(this,t,"f")}`),!e){const r="wrapupTask: worker is not initialized";return o.error(r),Promise.reject(new a(n.SDK,{severity:p.Error},r))}if(!w){const r="wrapupTask: CBM SDK is not initialized";return o.error(r),m(c.WrapupTaskCompleted,i,e,r),Promise.reject(new a(n.SDK,{severity:p.Error},r))}const d=E(e,u(this,t,"f")).find(r=>r.status==="accepted");if(!d){const r=`wrapupTask: Reservation for task ${u(this,t,"f")} is not found`;return o.error(r),m(c.WrapupTaskCompleted,i,e,r),Promise.reject(new a(n.SDK,{severity:p.Error},r))}try{const r=await w.wrapReservation(d);return m(c.WrapupTaskCompleted,i,e),r}catch{const k=`wrapupTask: Failed to wrap-up reservation ${d.sid}`;return o.error(k),m(c.WrapupTaskCompleted,i,e,k),Promise.reject(new a(n.SDK,{severity:p.Error},k))}}}t=new WeakMap;export{C as WrapUpTask};
//# sourceMappingURL=WrapUpTask.js.map
