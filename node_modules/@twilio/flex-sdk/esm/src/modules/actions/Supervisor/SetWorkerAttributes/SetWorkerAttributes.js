typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as f,__classPrivateFieldGet as e}from"../../../../../node_modules/tslib/tslib.es6.js";import v from"lodash/merge";import"../../../logger/Logger/LogEntry.js";import{LoggerName as h}from"../../../logger/Logger/LoggerName.js";import{getLogger as W}from"../../../logger/LoggerFactory/getLogger.js";import"../../../logger/LoggerFactory/LoggerConfigImpl.js";import{FlexSdkError as p}from"../../../error/FlexSdkError/FlexSdkError.js";import{ErrorCode as u}from"../../../error/ErrorCode/ErrorCodes.js";import"../../../error/ErrorCode/InternalErrorCodes.js";import"../../../error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as d}from"../../../error/ErrorSeverity/ErrorSeverity.js";import{sendTrackingEvent as S}from"../../ActionUtils.js";import{EVENTS as A}from"../../../analytics/Analytics.js";import{TaskRouterImpl as _}from"../../../../packages/taskrouter/TaskRouterImpl.js";import{AnalyticsImpl as E}from"../../../analytics/AnalyticsImpl.js";var o,i,n;class y{constructor(a,r,t){o.set(this,void 0),i.set(this,void 0),n.set(this,void 0),f(this,o,a,"f"),f(this,i,r,"f"),f(this,n,t,"f")}async run(a){var r;const t=a,m=t.getInstanceOf(_),k=W(t)(h.Client),g=t.getInstanceOf(E),c=m.worker,l=((r=e(this,n,"f"))===null||r===void 0?void 0:r.mergeExisting)||!1;if(k.debug(`setWorkerAttributes invoked with targetWorkerSid: ${e(this,o,"f")}`),!c){const s="setWorkerAttributes: worker is not initialized";return k.error(s),Promise.reject(new p(u.SDK,{severity:d.Error},s))}const w=l?v(m.worker.attributes,e(this,i,"f")):e(this,i,"f");try{return await m.worker.setWorkerAttributes(e(this,o,"f"),w),S(A.SetWorkerAttributesCompleted,g,c),Promise.resolve()}catch(s){const b=`setWorkerAttributes: Could not set worker attributes: ${s.message}`;throw new p(u.SDK,{severity:d.Error},b)}}}o=new WeakMap,i=new WeakMap,n=new WeakMap;export{y as SetWorkerAttributes};
//# sourceMappingURL=SetWorkerAttributes.js.map
