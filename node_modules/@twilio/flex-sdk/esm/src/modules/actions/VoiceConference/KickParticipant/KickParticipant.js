typeof window<"u"&&(window.global=window);import{__classPrivateFieldSet as K,__classPrivateFieldGet as t}from"../../../../../node_modules/tslib/tslib.es6.js";import{getLogger as _}from"loglevel";import{AnalyticsImpl as C}from"../../../analytics/AnalyticsImpl.js";import{CbmImpl as M}from"../../../cbm/CbmImpl.js";import"../../../logger/Logger/LogEntry.js";import{LoggerName as $}from"../../../logger/Logger/LoggerName.js";import"../../../logger/LoggerFactory/getLogger.js";import"../../../logger/LoggerFactory/LoggerConfigImpl.js";import{TaskRouterImpl as D}from"../../../../packages/taskrouter/TaskRouterImpl.js";import{getReservationsByTask as I,sendTrackingEvent as p}from"../../ActionUtils.js";import{EVENTS as k}from"../../../analytics/Analytics.js";import{FlexSdkError as d}from"../../../error/FlexSdkError/FlexSdkError.js";import{ErrorCode as f}from"../../../error/ErrorCode/ErrorCodes.js";import"../../../error/ErrorCode/InternalErrorCodes.js";import"../../../error/ErrorCode/ErrorCodeHelper.js";import{ErrorSeverity as m}from"../../../error/ErrorSeverity/ErrorSeverity.js";var i,e;class b{constructor(g,l){i.set(this,void 0),e.set(this,void 0),K(this,i,g,"f"),K(this,e,l,"f")}async run(g){var l,u;const h=g,E=h.getInstanceOf(D),a=_($.Actions),o=E.worker,c=h.getInstanceOf(C),P=h.getInstanceOf(M);if(a.debug(`kickParticipant invoked with #taskSid: ${t(this,e,"f")}`),!P){const r="kickParticipant: CBM SDK is not initialized";return a.error(r),Promise.reject(new d(f.SDK,{severity:m.Error},r))}if(!o){const r="kickParticipant: worker is not initialized";return a.error(r),Promise.reject(new d(f.SDK,{severity:m.Error},r))}const S=I(o,t(this,e,"f")),y=S?.find(r=>r.status==="accepted");if(!y){const r=`kickParticipant: Reservation for task ${t(this,e,"f")} not found`;throw a.error(r),p(k.KickParticipantCompleted,c,o,r),new d(f.SDK,{severity:m.Error},r)}const w=y.task,n=(await P.getParticipantsByTask(w)).find(r=>{var s;return((s=r.routingProperties)===null||s===void 0?void 0:s.workerSid)===t(this,i,"f")});if(n&&o.sid===t(this,i,"f")){const r=`kickParticipant: Worker ${t(this,i,"f")} cannot kick self from task ${t(this,e,"f")}`;throw a.error(r),p(k.KickParticipantCompleted,c,o,r),new d(f.SDK,{severity:m.Error},r)}let v;if(((l=n?.routingProperties)===null||l===void 0?void 0:l.workerSid)!==t(this,i,"f")&&(v=await P.getParticipantBySid(t(this,i,"f"),w)),!v&&((u=n?.routingProperties)===null||u===void 0?void 0:u.workerSid)!==t(this,i,"f")){const r=`kickParticipant: Participant ${t(this,i,"f")} for task ${t(this,e,"f")} not found`;throw a.error(r),p(k.KickParticipantCompleted,c,o,r),new d(f.SDK,{severity:m.Error},r)}try{return v&&v.type==="external"?(await P.removeVoiceParticipant(w,v.participantSid),p(k.KickParticipantCompleted,c,o),Promise.resolve()):(await w.kick(t(this,i,"f")),p(k.KickParticipantCompleted,c,o),Promise.resolve())}catch{const s=`kickParticipant: Failed to kick participant ${t(this,i,"f")}         from reservation ${y.sid}`;return a.error(s),p(k.KickParticipantCompleted,c,o,s),Promise.reject(new d(f.SDK,{severity:m.Error},s))}}}i=new WeakMap,e=new WeakMap;export{b as KickParticipant};
//# sourceMappingURL=KickParticipant.js.map
