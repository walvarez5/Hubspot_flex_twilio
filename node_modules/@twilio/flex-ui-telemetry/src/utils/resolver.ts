import { PageParameters, Parameters, SegmentOptions, FunctionType } from '../types/telemetry';
import { generateUID, isFunction, isObject, isSegmentOptions, isString } from './helper';

export const resolveArguments = (args: unknown[]): Parameters => {
  let event;
  let properties;
  let options;
  let callback;
  let callbackId;

  const [arg1, arg2, arg3, arg4] = args;

  if (isString(arg1)) {
    event = arg1 as string;
  } else if (isFunction(arg1)) {
    callback = arg1 as FunctionType;
  } else if (isObject(arg1)) {
    properties = {
      ...(arg1 as object),
    };
  }

  if (arg2) {
    if (isFunction(arg2)) {
      callback = arg2 as FunctionType;
    } else if (isSegmentOptions(arg2)) {
      options = {
        ...(arg2 as SegmentOptions),
      };
    } else if (isObject(arg2)) {
      properties = {
        ...(arg2 as object),
      };
    }
  }

  if (arg3) {
    if (isSegmentOptions(arg3)) {
      options = {
        ...(arg3 as object),
      };
    } else if (isFunction(arg3)) {
      callback = arg3 as FunctionType;
    }
  }

  if (isFunction(arg4)) {
    callback = arg4 as FunctionType;
  }

  if (Boolean(callback)) {
    callbackId = generateUID();
  }

  return [event, properties, options, callback, callbackId];
};

export const resolvePageArguments = (args: unknown[]): PageParameters => {
  let category;
  const [arg1, arg2] = args;
  if (isString(arg1) && isString(arg2)) {
    category = arg1 as string;
  }
  return [category, ...resolveArguments(category ? args.slice(1) : args)];
};
