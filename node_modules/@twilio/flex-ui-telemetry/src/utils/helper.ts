import { SegmentOptions } from '../types/telemetry';

export const isObject = (value: unknown): boolean => {
  return Boolean(value) && !Array.isArray(value) && typeof value === 'object';
};

export const isFunction = (value: unknown): boolean => {
  return Boolean(value) && typeof value === 'function';
};

export const isString = (value: unknown): boolean => {
  return typeof value === 'string';
};

const checkForSegmentOptions = (value: unknown): value is SegmentOptions => {
  const options = value as SegmentOptions;
  return (
    options &&
    (options.anonymousId !== undefined || options.context !== undefined || options.integrations !== undefined)
  );
};

export const isSegmentOptions = (value: unknown): boolean => {
  return Boolean(checkForSegmentOptions(value));
};

export const generateUID = (): string => {
  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
};
