export interface SegmentOptions {
    integrations?: any;
    anonymousId?: string | undefined;
    context?: object | undefined;
}
export interface CommonProperties {
    product: string;
    source: string;
    flexUiVersion: string;
    workerSid: string;
    accountSid: string;
    realm: string;
    isEmployee: string;
    flexUserRole: string;
    instanceSid: string;
}
export interface PageProperties {
    path: string;
    referrer: string;
    search: string;
    title: string;
    url: string;
}
export type FunctionType = () => void;
export type Parameters = [
    string | undefined,
    Record<string, any> | undefined,
    SegmentOptions | undefined,
    FunctionType | undefined,
    string | undefined
];
export type PageParameters = [
    string | undefined,
    string | undefined,
    Record<string, any> | undefined,
    SegmentOptions | undefined,
    FunctionType | undefined,
    string | undefined
];
export type ReadyParameters = [FunctionType | undefined, string | undefined];
export declare enum Method {
    PAGE = "page",
    TRACK = "track",
    IDENTIFY = "identify",
    GROUP = "group",
    READY = "ready"
}
export declare const PRODUCT = "Flex";
