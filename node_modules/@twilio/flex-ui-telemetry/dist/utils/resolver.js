"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolvePageArguments = exports.resolveArguments = void 0;
const helper_1 = require("./helper");
const resolveArguments = (args) => {
    let event;
    let properties;
    let options;
    let callback;
    let callbackId;
    const [arg1, arg2, arg3, arg4] = args;
    if ((0, helper_1.isString)(arg1)) {
        event = arg1;
    }
    else if ((0, helper_1.isFunction)(arg1)) {
        callback = arg1;
    }
    else if ((0, helper_1.isObject)(arg1)) {
        properties = Object.assign({}, arg1);
    }
    if (arg2) {
        if ((0, helper_1.isFunction)(arg2)) {
            callback = arg2;
        }
        else if ((0, helper_1.isSegmentOptions)(arg2)) {
            options = Object.assign({}, arg2);
        }
        else if ((0, helper_1.isObject)(arg2)) {
            properties = Object.assign({}, arg2);
        }
    }
    if (arg3) {
        if ((0, helper_1.isSegmentOptions)(arg3)) {
            options = Object.assign({}, arg3);
        }
        else if ((0, helper_1.isFunction)(arg3)) {
            callback = arg3;
        }
    }
    if ((0, helper_1.isFunction)(arg4)) {
        callback = arg4;
    }
    if (Boolean(callback)) {
        callbackId = (0, helper_1.generateUID)();
    }
    return [event, properties, options, callback, callbackId];
};
exports.resolveArguments = resolveArguments;
const resolvePageArguments = (args) => {
    let category;
    const [arg1, arg2] = args;
    if ((0, helper_1.isString)(arg1) && (0, helper_1.isString)(arg2)) {
        category = arg1;
    }
    return [category, ...(0, exports.resolveArguments)(category ? args.slice(1) : args)];
};
exports.resolvePageArguments = resolvePageArguments;
//# sourceMappingURL=resolver.js.map