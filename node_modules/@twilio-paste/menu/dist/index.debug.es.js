var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/useMenuState.ts
import { useMenuPrimitiveState } from "@twilio-paste/menu-primitive";

// src/Menu.tsx
import * as React from "react";
import { safelySpreadBoxProps, Box } from "@twilio-paste/box";
import { MenuPrimitive } from "@twilio-paste/menu-primitive";
var StyledMenu = React.forwardRef((_a, ref) => {
  var _b = _a, { style } = _b, props = __objRest(_b, ["style"]);
  return /* @__PURE__ */ React.createElement(
    Box,
    __spreadProps(__spreadValues({}, safelySpreadBoxProps(props)), {
      backgroundColor: "colorBackgroundBody",
      borderStyle: "solid",
      borderWidth: "borderWidth10",
      borderColor: "colorBorderWeak",
      borderRadius: "borderRadius20",
      boxShadow: "shadow",
      maxWidth: "size30",
      minWidth: "size20",
      zIndex: "zIndex20",
      paddingY: "space30",
      _focus: { outline: "none" },
      style,
      ref
    })
  );
});
StyledMenu.displayName = "StyledMenu";
var Menu = React.forwardRef((_a, ref) => {
  var _b = _a, { element = "MENU" } = _b, props = __objRest(_b, ["element"]);
  return /* @__PURE__ */ React.createElement(MenuPrimitive, __spreadProps(__spreadValues({}, props), { element, as: StyledMenu, ref }));
});
Menu.displayName = "Menu";

// src/MenuButton.tsx
import * as React2 from "react";
import { MenuPrimitiveButton } from "@twilio-paste/menu-primitive";
import { Button } from "@twilio-paste/button";
var MenuButton = React2.forwardRef((_a, ref) => {
  var _b = _a, { element = "MENU_BUTTON" } = _b, props = __objRest(_b, ["element"]);
  return /* @__PURE__ */ React2.createElement(MenuPrimitiveButton, __spreadProps(__spreadValues({}, props), { element, as: Button, ref }), props.children);
});
MenuButton.displayName = "MenuButton";

// src/MenuGroup.tsx
import * as React3 from "react";
import { safelySpreadBoxProps as safelySpreadBoxProps2, Box as Box2 } from "@twilio-paste/box";
import { Text } from "@twilio-paste/text";

// src/constants.ts
var MenuItemVariants = {
  DEFAULT: "default",
  DESTRUCTIVE: "destructive",
  GROUP_ITEM: "group_item"
};

// src/MenuGroup.tsx
var MenuGroupContext = React3.createContext(MenuItemVariants.DEFAULT);
var MenuGroup = React3.forwardRef(
  (_a, ref) => {
    var _b = _a, { label, icon, children, element = "MENU_GROUP" } = _b, props = __objRest(_b, ["label", "icon", "children", "element"]);
    return /* @__PURE__ */ React3.createElement(MenuGroupContext.Provider, { value: MenuItemVariants.GROUP_ITEM }, /* @__PURE__ */ React3.createElement(
      Box2,
      __spreadProps(__spreadValues({}, safelySpreadBoxProps2(props)), {
        element,
        role: "presentation",
        "aria-label": label,
        textDecoration: "none",
        ref
      }),
      /* @__PURE__ */ React3.createElement(Box2, { display: "flex", alignItems: "center", paddingX: "space70", paddingY: "space30", cursor: "default" }, React3.isValidElement(icon) ? /* @__PURE__ */ React3.createElement(Box2, { flexShrink: 0, size: "sizeIcon30" }, React3.cloneElement(icon, { color: "colorTextIcon" })) : null, /* @__PURE__ */ React3.createElement(
        Text,
        {
          as: "span",
          color: "colorText",
          role: "presentation",
          fontWeight: "fontWeightBold",
          paddingLeft: icon != null ? "space20" : void 0
        },
        label
      )),
      children
    ));
  }
);
MenuGroup.displayName = "MenuGroup";

// src/MenuItem.tsx
import * as React4 from "react";
import { secureExternalLink } from "@twilio-paste/anchor";
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
import { MenuPrimitiveItem } from "@twilio-paste/menu-primitive";
var StyledMenuItem = React4.forwardRef(
  (_a, ref) => {
    var _b = _a, { element = "STYLED_MENU_ITEM", href, variant, tabIndex, children } = _b, props = __objRest(_b, ["element", "href", "variant", "tabIndex", "children"]);
    return /* @__PURE__ */ React4.createElement(
      Box3,
      __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, href && secureExternalLink(href)), {
        href,
        as: href ? "a" : "button"
      }), safelySpreadBoxProps3(props)), {
        element,
        appearance: "none",
        background: "none",
        border: "none",
        color: variant === MenuItemVariants.DESTRUCTIVE ? "colorTextLinkDestructive" : "colorText",
        display: "block",
        textAlign: "left",
        fontFamily: "inherit",
        fontSize: "fontSize30",
        fontWeight: "fontWeightNormal",
        lineHeight: "lineHeight30",
        margin: "space0",
        outline: "none",
        paddingY: "space30",
        paddingX: variant === MenuItemVariants.GROUP_ITEM ? "space90" : "space70",
        textDecoration: tabIndex === 0 ? "underline" : "none",
        width: "100%",
        _hover: {
          cursor: "pointer"
        },
        _focus: {
          color: `${variant === MenuItemVariants.DESTRUCTIVE ? "colorTextLinkDestructiveStronger" : "colorTextLink"}`
        },
        _disabled: { color: "colorTextWeaker", cursor: "not-allowed" },
        ref
      }),
      children
    );
  }
);
StyledMenuItem.displayName = "StyledMenuItem";
var MenuItem = React4.forwardRef(
  (_a, ref) => {
    var _b = _a, { as = StyledMenuItem, variant: _variant, element = "MENU_ITEM" } = _b, props = __objRest(_b, ["as", "variant", "element"]);
    const variant = _variant || React4.useContext(MenuGroupContext);
    return /* @__PURE__ */ React4.createElement(MenuPrimitiveItem, __spreadProps(__spreadValues({}, props), { element, variant, as, ref }));
  }
);
MenuItem.displayName = "MenuItem";

// src/MenuSeparator.tsx
import * as React5 from "react";
import { Separator } from "@twilio-paste/separator";
import { MenuPrimitiveSeparator } from "@twilio-paste/menu-primitive";
var StyledMenuSeparator = React5.forwardRef((props, ref) => {
  return /* @__PURE__ */ React5.createElement(Separator, __spreadProps(__spreadValues({}, props), { orientation: "horizontal", verticalSpacing: "space40", ref }));
});
StyledMenuSeparator.displayName = "StyledMenuSeparator";
var MenuSeparator = React5.forwardRef(
  (_a, ref) => {
    var _b = _a, { element = "MENU_SEPARATOR" } = _b, props = __objRest(_b, ["element"]);
    return /* @__PURE__ */ React5.createElement(MenuPrimitiveSeparator, __spreadProps(__spreadValues({}, props), { element, as: StyledMenuSeparator, ref }));
  }
);
MenuSeparator.displayName = "MenuSeparator";

// src/SubMenuButton.tsx
import * as React6 from "react";
import { MenuPrimitiveButton as MenuPrimitiveButton2 } from "@twilio-paste/menu-primitive";
import { MediaObject, MediaBody, MediaFigure } from "@twilio-paste/media-object";
import { ChevronRightIcon } from "@twilio-paste/icons/esm/ChevronRightIcon";
var SubMenuButton = React6.forwardRef(
  (_a, ref) => {
    var _b = _a, { element = "SUBMENU_BUTTON" } = _b, props = __objRest(_b, ["element"]);
    return /* @__PURE__ */ React6.createElement(MenuPrimitiveButton2, __spreadProps(__spreadValues({}, props), { as: StyledMenuItem, element, ref }), /* @__PURE__ */ React6.createElement(MediaObject, { as: "span", verticalAlign: "center", element: `${element}_MEDIA_OBJECT` }, props.children && /* @__PURE__ */ React6.createElement(MediaBody, { as: "span", element: `${element}_MEDIA_BODY` }, props.children), /* @__PURE__ */ React6.createElement(MediaFigure, { as: "span", align: "end", spacing: "space20", element: `${element}_MEDIA_FIGURE` }, /* @__PURE__ */ React6.createElement(ChevronRightIcon, { decorative: true, size: "sizeIcon30", element: `${element}_ICON` }))));
  }
);
SubMenuButton.displayName = "SubMenuButton";
export {
  Menu,
  MenuButton,
  MenuGroup,
  MenuGroupContext,
  MenuItem,
  MenuSeparator,
  StyledMenuItem,
  SubMenuButton,
  useMenuPrimitiveState as useMenuState
};
