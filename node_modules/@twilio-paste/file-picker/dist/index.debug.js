"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  FilePicker: () => FilePicker,
  FilePickerButton: () => FilePickerButton
});
module.exports = __toCommonJS(src_exports);

// src/FilePicker.tsx
var React = __toESM(require("react"));
var import_prop_types = __toESM(require("prop-types"));
var import_text = require("@twilio-paste/text");
var import_uid_library = require("@twilio-paste/uid-library");
var import_box = require("@twilio-paste/box");
var import_sibling_box = require("@twilio-paste/sibling-box");
var FilePicker = React.forwardRef(
  (_a, ref) => {
    var _b = _a, {
      element = "FILEPICKER",
      accept,
      id = (0, import_uid_library.useUID)(),
      children,
      disabled = false,
      i18nNoSelectionText = "No file uploaded",
      required = false,
      onChange
    } = _b, props = __objRest(_b, [
      "element",
      "accept",
      "id",
      "children",
      "disabled",
      "i18nNoSelectionText",
      "required",
      "onChange"
    ]);
    const [fileDescription, setFileDescription] = React.useState(i18nNoSelectionText);
    const textId = (0, import_uid_library.useUID)();
    const handleChange = (evt) => {
      if (onChange)
        onChange(evt);
      if (evt.currentTarget.files && evt.currentTarget.files.length > 0) {
        const file = evt.currentTarget.files[0].name;
        setFileDescription(file);
      } else {
        setFileDescription(i18nNoSelectionText);
      }
    };
    return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
      import_box.Box,
      __spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
        id,
        ref,
        as: "input",
        type: "file",
        accept,
        "aria-disabled": disabled,
        disabled,
        "aria-required": required,
        "aria-describedby": textId,
        size: "size0",
        border: "none",
        overflow: "hidden",
        padding: "space0",
        margin: "space0",
        whiteSpace: "nowrap",
        textTransform: "none",
        position: "absolute",
        clip: "rect(0 0 0 0)",
        onChange: handleChange
      })
    ), /* @__PURE__ */ React.createElement("label", { htmlFor: id }, /* @__PURE__ */ React.createElement(
      import_sibling_box.SiblingBox,
      {
        element,
        as: "span",
        type: "file",
        borderRadius: "borderRadius10",
        padding: "space20",
        paddingLeft: "space30",
        boxShadow: "shadowBorderWeak",
        _focusSibling: {
          borderRadius: "borderRadius10",
          padding: "space20",
          paddingLeft: "space30",
          boxShadow: "shadowFocus"
        }
      },
      /* @__PURE__ */ React.createElement(
        import_text.Text,
        {
          id: textId,
          as: "span",
          color: disabled ? "colorTextWeaker" : "currentColor",
          marginRight: "space40",
          fontWeight: "fontWeightMedium",
          element: `${element}_TEXT`
        },
        fileDescription
      ),
      React.cloneElement(children, { disabled, element: `${element}_BUTTON` })
    )));
  }
);
FilePicker.displayName = "FilePicker";
FilePicker.propTypes = {
  accept: import_prop_types.default.string,
  children: import_prop_types.default.element.isRequired,
  element: import_prop_types.default.string,
  disabled: import_prop_types.default.bool,
  i18nNoSelectionText: import_prop_types.default.string,
  required: import_prop_types.default.bool,
  onChange: import_prop_types.default.func,
  name: import_prop_types.default.string
};

// src/FilePickerButton.tsx
var React2 = __toESM(require("react"));
var import_prop_types2 = __toESM(require("prop-types"));
var import_button = require("@twilio-paste/button");
var import_box2 = require("@twilio-paste/box");
var FilePickerButton = React2.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element, disabled } = _b, props = __objRest(_b, ["children", "element", "disabled"]);
    return /* @__PURE__ */ React2.createElement(import_box2.Box, { whiteSpace: "nowrap" }, /* @__PURE__ */ React2.createElement(import_button.Button, __spreadProps(__spreadValues({}, props), { element, ref, size: "small", disabled, as: "span", type: "button" }), children));
  }
);
FilePickerButton.displayName = "FilePickerButton";
FilePickerButton.propTypes = {
  element: import_prop_types2.default.string,
  children: import_prop_types2.default.node.isRequired,
  disabled: import_prop_types2.default.bool
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  FilePicker,
  FilePickerButton
});
