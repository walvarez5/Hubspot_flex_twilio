import PropTypes from 'prop-types';
export declare const TablePropTypes: {
    children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
    element: PropTypes.Requireable<string>;
    isActionable: PropTypes.Requireable<boolean>;
    scrollHorizontally: PropTypes.Requireable<boolean>;
    noWrap: PropTypes.Requireable<boolean>;
    striped: PropTypes.Requireable<boolean>;
    tableLayout: PropTypes.Requireable<"auto" | "fixed">;
    variant: PropTypes.Requireable<"default" | "borderless">;
};
export declare const THeadPropTypes: {
    children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
    element: PropTypes.Requireable<string>;
};
export declare const TBodyPropTypes: {
    children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
    element: PropTypes.Requireable<string>;
};
export declare const TrPropTypes: {
    children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
    element: PropTypes.Requireable<string>;
    verticalAlign: PropTypes.Requireable<"top" | "middle" | "bottom">;
};
export declare const ThPropTypes: {
    children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    element: PropTypes.Requireable<string>;
    textAlign: PropTypes.Requireable<"left" | "center" | "right">;
    width: PropTypes.Requireable<any>;
};
export declare const TdPropTypes: {
    children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    element: PropTypes.Requireable<string>;
    textAlign: PropTypes.Requireable<"left" | "center" | "right">;
};
export declare const TFootPropTypes: {
    children: PropTypes.Validator<NonNullable<PropTypes.ReactNodeLike>>;
    element: PropTypes.Requireable<string>;
};
//# sourceMappingURL=proptypes.d.ts.map