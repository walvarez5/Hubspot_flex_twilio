var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Modal: () => Modal,
  ModalBody: () => ModalBody,
  ModalContext: () => ModalContext,
  ModalDialogContent: () => ModalDialogContent,
  ModalDialogOverlay: () => ModalDialogOverlay,
  ModalFooter: () => ModalFooter,
  ModalFooterActions: () => ModalFooterActions,
  ModalHeader: () => ModalHeader,
  ModalHeading: () => ModalHeading,
  modalBodyStyles: () => modalBodyStyles,
  modalFooterStyles: () => modalFooterStyles,
  modalHeaderStyles: () => modalHeaderStyles,
  useModalContext: () => useModalContext
});
module.exports = __toCommonJS(src_exports);

// src/Modal.tsx
var React2 = __toESM(require("react"));
var PropTypes = __toESM(require("prop-types"));
var import_styling_library = require("@twilio-paste/styling-library");
var import_animation_library = require("@twilio-paste/animation-library");
var import_box = require("@twilio-paste/box");
var import_theme = require("@twilio-paste/theme");
var import_modal_dialog_primitive = require("@twilio-paste/modal-dialog-primitive");

// src/ModalContext.tsx
var React = __toESM(require("react"));
var ModalContext = React.createContext(null);
var useModalContext = () => {
  const context = React.useContext(ModalContext);
  if (!context) {
    throw new Error("useModalContext must be used with ModalContextProvider");
  }
  return context;
};

// src/utils/consoleUtils.ts
var MARGIN_AMOUNT_BASED_ON_CALC_OFFSET = "80px";
function addConsoleHeightPatch() {
  if (document == null) {
    return;
  }
  const CONTENT_WRAPPER = document.querySelector("#content");
  const SIDEBAR_WRAPPER = document.querySelector("#sidebar-wrapper");
  if (CONTENT_WRAPPER != null) {
    CONTENT_WRAPPER.style.marginTop = MARGIN_AMOUNT_BASED_ON_CALC_OFFSET;
  }
  if (SIDEBAR_WRAPPER != null) {
    SIDEBAR_WRAPPER.style.marginTop = MARGIN_AMOUNT_BASED_ON_CALC_OFFSET;
  }
}
function removeConsoleHeightPatch() {
  if (document == null) {
    return;
  }
  const CONTENT_WRAPPER = document.querySelector("#content");
  const SIDEBAR_WRAPPER = document.querySelector("#sidebar-wrapper");
  if (CONTENT_WRAPPER != null) {
    CONTENT_WRAPPER.style.removeProperty("margin-top");
  }
  if (SIDEBAR_WRAPPER != null) {
    SIDEBAR_WRAPPER.style.removeProperty("margin-top");
  }
}

// src/Modal.tsx
var ModalDialogOverlay = (0, import_animation_library.animated)((0, import_styling_library.styled)(import_modal_dialog_primitive.ModalDialogPrimitiveOverlay)((0, import_styling_library.css)({
  position: "fixed",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  width: "100%",
  backgroundColor: "colorBackgroundOverlay",
  zIndex: "zIndex80"
}), import_theme.pasteBaseStyles, import_box.getCustomElementStyles));
var ModalDialogContent = (0, import_animation_library.animated)((0, import_styling_library.styled)(import_modal_dialog_primitive.ModalDialogPrimitiveContent)(({ size }) => (0, import_styling_library.css)({
  width: "100%",
  maxWidth: size === "wide" ? "size80" : "size60",
  maxHeight: "90%",
  minHeight: "170px",
  backgroundColor: "colorBackgroundBody",
  borderColor: "colorBorderWeak",
  borderRadius: "borderRadius20",
  borderStyle: "solid",
  borderWidth: "borderWidth10",
  boxShadow: "shadow",
  display: "flex",
  flexDirection: "column"
})));
var getAnimationStates = (isConsole) => ({
  from: { opacity: 0, transform: `scale(0.675)` },
  enter: { opacity: 1, transform: `scale(1)` },
  leave: isConsole ? null : { opacity: 0, transform: `scale(0.675)` },
  config: {
    mass: 0.5,
    tension: 370,
    friction: 26
  }
});
var Modal = React2.forwardRef((_a, ref) => {
  var _b = _a, {
    children,
    element = "MODAL",
    isOpen,
    onDismiss,
    allowPinchZoom = true,
    initialFocusRef,
    ariaLabelledby,
    size,
    __console_patch = false
  } = _b, props = __objRest(_b, [
    "children",
    "element",
    "isOpen",
    "onDismiss",
    "allowPinchZoom",
    "initialFocusRef",
    "ariaLabelledby",
    "size",
    "__console_patch"
  ]);
  const transitions = (0, import_animation_library.useTransition)(isOpen, getAnimationStates(__console_patch));
  React2.useEffect(() => {
    if (__console_patch && isOpen) {
      addConsoleHeightPatch();
    }
    return () => {
      if (__console_patch) {
        removeConsoleHeightPatch();
      }
    };
  }, [isOpen, __console_patch]);
  return /* @__PURE__ */ React2.createElement(ModalContext.Provider, {
    value: { onDismiss }
  }, transitions((styles, item) => item && /* @__PURE__ */ React2.createElement(ModalDialogOverlay, {
    onDismiss,
    allowPinchZoom,
    initialFocusRef,
    style: { opacity: styles.opacity },
    "data-paste-element": `${element}_OVERLAY`,
    variant: size
  }, /* @__PURE__ */ React2.createElement(import_box.Box, __spreadProps(__spreadValues({
    as: ModalDialogContent,
    "aria-labelledby": ariaLabelledby
  }, (0, import_box.safelySpreadBoxProps)(props)), {
    element,
    ref,
    style: styles,
    size,
    variant: size
  }), children))));
});
Modal.displayName = "Modal";
Modal.propTypes = {
  children: PropTypes.node.isRequired,
  element: PropTypes.string,
  isOpen: PropTypes.bool.isRequired,
  onDismiss: PropTypes.func.isRequired,
  allowPinchZoom: PropTypes.bool,
  size: PropTypes.oneOf(["default", "wide"]).isRequired,
  initialFocusRef: PropTypes.object,
  ariaLabelledby: PropTypes.string.isRequired
};

// src/ModalHeader.tsx
var React4 = __toESM(require("react"));
var PropTypes3 = __toESM(require("prop-types"));
var import_box3 = require("@twilio-paste/box");
var import_button = require("@twilio-paste/button");
var import_flex = require("@twilio-paste/flex");

// ../screen-reader-only/dist/index.es.js
var React3 = __toESM(require("react"));
var PropTypes2 = __toESM(require("prop-types"));
var import_box2 = require("@twilio-paste/box");
var __defProp2 = Object.defineProperty;
var __defProps2 = Object.defineProperties;
var __getOwnPropDescs2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols2 = Object.getOwnPropertySymbols;
var __hasOwnProp2 = Object.prototype.hasOwnProperty;
var __propIsEnum2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp2 = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues2 = (a, b) => {
  for (var prop in b || (b = {}))
    __hasOwnProp2.call(b, prop) && __defNormalProp2(a, prop, b[prop]);
  if (__getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(b))
      __propIsEnum2.call(b, prop) && __defNormalProp2(a, prop, b[prop]);
  return a;
};
var __spreadProps2 = (a, b) => __defProps2(a, __getOwnPropDescs2(b));
var __objRest2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    __hasOwnProp2.call(source, prop) && exclude.indexOf(prop) < 0 && (target[prop] = source[prop]);
  if (source != null && __getOwnPropSymbols2)
    for (var prop of __getOwnPropSymbols2(source))
      exclude.indexOf(prop) < 0 && __propIsEnum2.call(source, prop) && (target[prop] = source[prop]);
  return target;
};
var ScreenReaderOnly = React3.forwardRef((_a, ref) => {
  var _b = _a, { as = "span", children } = _b, props = __objRest2(_b, ["as", "children"]);
  return React3.createElement(import_box2.Box, __spreadProps2(__spreadValues2({}, props), { as, border: "none", clip: "rect(0 0 0 0)", height: "1px", margin: "spaceNegative10", overflow: "hidden", padding: "space0", position: "absolute", ref, textTransform: "none", whiteSpace: "nowrap", width: "1px" }), children);
});
ScreenReaderOnly.displayName = "ScreenReaderOnly";

// src/ModalHeader.tsx
var import_CloseIcon = require("@twilio-paste/icons/cjs/CloseIcon");

// src/styles.tsx
var modalHeaderStyles = {
  borderBottomStyle: "solid",
  borderBottomWidth: "borderWidth10",
  borderBottomColor: "colorBorderWeak",
  padding: "space50",
  margin: "space0",
  flexShrink: 0
};
var modalBodyStyles = {
  overflowY: "auto",
  padding: "space50",
  paddingBottom: "space60"
};
var modalFooterStyles = {
  borderTopStyle: "solid",
  borderTopWidth: "borderWidth10",
  borderTopColor: "colorBorderWeak",
  padding: "space50",
  display: "flex",
  flexShrink: 0
};

// src/ModalHeader.tsx
var ModalHeader = React4.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "MODAL_HEADER", i18nDismissLabel = "Close modal" } = _b, props = __objRest(_b, ["children", "element", "i18nDismissLabel"]);
  const { onDismiss } = useModalContext();
  return /* @__PURE__ */ React4.createElement(import_box3.Box, __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, (0, import_box3.safelySpreadBoxProps)(props)), {
    as: "div"
  }), modalHeaderStyles), {
    element,
    ref
  }), /* @__PURE__ */ React4.createElement(import_flex.Flex, {
    hAlignContent: "between"
  }, /* @__PURE__ */ React4.createElement(import_flex.Flex, {
    vAlignContent: "center",
    grow: 1,
    marginRight: "space70"
  }, children), /* @__PURE__ */ React4.createElement(import_button.Button, {
    element: `${element}_CLOSE_BUTTON`,
    variant: "secondary_icon",
    size: "reset",
    onClick: () => onDismiss()
  }, /* @__PURE__ */ React4.createElement(import_CloseIcon.CloseIcon, {
    element: `${element}_CLOSE_ICON`,
    decorative: true,
    size: "sizeIcon60"
  }), /* @__PURE__ */ React4.createElement(ScreenReaderOnly, null, i18nDismissLabel))));
});
ModalHeader.displayName = "ModalHeader";
ModalHeader.propTypes = {
  children: PropTypes3.node.isRequired,
  element: PropTypes3.string
};

// src/ModalHeading.tsx
var React5 = __toESM(require("react"));
var PropTypes4 = __toESM(require("prop-types"));
var import_heading = require("@twilio-paste/heading");
var ModalHeading = React5.forwardRef((_a, ref) => {
  var _b = _a, { children, as = "h2", element = "MODAL_HEADING" } = _b, props = __objRest(_b, ["children", "as", "element"]);
  return /* @__PURE__ */ React5.createElement(import_heading.Heading, __spreadProps(__spreadValues({}, props), {
    as,
    element,
    marginBottom: "space0",
    variant: "heading30",
    ref
  }), children);
});
ModalHeading.displayName = "ModalHeading";
ModalHeading.propTypes = {
  children: PropTypes4.node.isRequired,
  as: PropTypes4.oneOf(["h1", "h2", "h3", "h4", "h5", "h6"]),
  element: PropTypes4.string
};

// src/ModalBody.tsx
var React6 = __toESM(require("react"));
var PropTypes5 = __toESM(require("prop-types"));
var import_box4 = require("@twilio-paste/box");
var ModalBody = React6.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "MODAL_BODY" } = _b, props = __objRest(_b, ["children", "element"]);
  return /* @__PURE__ */ React6.createElement(import_box4.Box, __spreadProps(__spreadValues(__spreadValues({}, (0, import_box4.safelySpreadBoxProps)(props)), modalBodyStyles), {
    as: "div",
    element,
    ref
  }), children);
});
ModalBody.displayName = "ModalBody";
ModalBody.propTypes = {
  children: PropTypes5.node.isRequired,
  element: PropTypes5.string
};

// src/ModalFooter.tsx
var React7 = __toESM(require("react"));
var PropTypes6 = __toESM(require("prop-types"));
var import_box5 = require("@twilio-paste/box");
var ModalFooter = React7.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "MODAL_FOOTER" } = _b, props = __objRest(_b, ["children", "element"]);
  return /* @__PURE__ */ React7.createElement(import_box5.Box, __spreadProps(__spreadValues(__spreadValues({}, (0, import_box5.safelySpreadBoxProps)(props)), modalFooterStyles), {
    as: "div",
    element,
    ref
  }), children);
});
ModalFooter.displayName = "ModalFooter";
ModalFooter.propTypes = {
  children: PropTypes6.node.isRequired,
  element: PropTypes6.string
};

// src/ModalFooterActions.tsx
var React8 = __toESM(require("react"));
var PropTypes7 = __toESM(require("prop-types"));
var import_box6 = require("@twilio-paste/box");
var ModalFooterActions = React8.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "MODAL_FOOTER_ACTIONS", justify } = _b, props = __objRest(_b, ["children", "element", "justify"]);
  const count = React8.Children.count(children);
  return /* @__PURE__ */ React8.createElement(import_box6.Box, __spreadProps(__spreadValues({}, (0, import_box6.safelySpreadBoxProps)(props)), {
    display: "flex",
    justifyContent: justify === "start" ? "flex-start" : "flex-end",
    flexShrink: justify === "start" ? null : 0,
    flexWrap: "wrap",
    flexGrow: 1,
    element,
    alignItems: "center",
    ref
  }), React8.Children.map(children, (child, index) => {
    return /* @__PURE__ */ React8.createElement(import_box6.Box, {
      marginRight: count !== index + 1 ? "space50" : null,
      element: `${element}_ITEM`
    }, child);
  }));
});
ModalFooterActions.displayName = "ModalFooterActions";
ModalFooterActions.propTypes = {
  children: PropTypes7.node.isRequired,
  element: PropTypes7.string,
  justify: PropTypes7.oneOf(["start", "end"])
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Modal,
  ModalBody,
  ModalContext,
  ModalDialogContent,
  ModalDialogOverlay,
  ModalFooter,
  ModalFooterActions,
  ModalHeader,
  ModalHeading,
  modalBodyStyles,
  modalFooterStyles,
  modalHeaderStyles,
  useModalContext
});
