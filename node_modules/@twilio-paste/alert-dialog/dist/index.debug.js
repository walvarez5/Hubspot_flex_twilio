var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  AlertDialog: () => AlertDialog
});
module.exports = __toCommonJS(src_exports);
var React4 = __toESM(require("react"));
var PropTypes4 = __toESM(require("prop-types"));
var import_uid_library = require("@twilio-paste/uid-library");
var import_animation_library = require("@twilio-paste/animation-library");
var import_box4 = require("@twilio-paste/box");
var import_modal5 = require("@twilio-paste/modal");

// src/AlertDialogHeader.tsx
var React = __toESM(require("react"));
var PropTypes = __toESM(require("prop-types"));
var import_box = require("@twilio-paste/box");
var import_heading = require("@twilio-paste/heading");
var import_modal = require("@twilio-paste/modal");
var AlertDialogHeader = React.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "ALERT_DIALOG_HEADER", headingID } = _b, props = __objRest(_b, ["children", "element", "headingID"]);
  return /* @__PURE__ */ React.createElement(import_box.Box, __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
    as: "div"
  }), import_modal.modalHeaderStyles), {
    border: "none",
    element: `${element}_WRAPPER`,
    paddingBottom: "space0",
    ref
  }), /* @__PURE__ */ React.createElement(import_heading.Heading, {
    as: "h3",
    element,
    marginBottom: "space0",
    variant: "heading30",
    id: headingID
  }, children));
});
AlertDialogHeader.displayName = "AlertDialogHeader";
AlertDialogHeader.propTypes = {
  children: PropTypes.string.isRequired,
  headingID: PropTypes.string.isRequired,
  element: PropTypes.string
};

// src/AlertDialogBody.tsx
var React2 = __toESM(require("react"));
var PropTypes2 = __toESM(require("prop-types"));
var import_box2 = require("@twilio-paste/box");
var import_modal2 = require("@twilio-paste/modal");
var AlertDialogBody = React2.forwardRef((_a, ref) => {
  var _b = _a, { bodyID, children, element = "ALERT_DIALOG_BODY" } = _b, props = __objRest(_b, ["bodyID", "children", "element"]);
  return /* @__PURE__ */ React2.createElement(import_box2.Box, __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, (0, import_box2.safelySpreadBoxProps)(props)), {
    as: "div"
  }), import_modal2.modalBodyStyles), {
    element,
    id: bodyID,
    ref
  }), children);
});
AlertDialogBody.displayName = "AlertDialogBody";
AlertDialogBody.propTypes = {
  bodyID: PropTypes2.string.isRequired,
  children: PropTypes2.node.isRequired,
  element: PropTypes2.string
};

// src/AlertDialogContent.tsx
var import_styling_library = require("@twilio-paste/styling-library");
var import_modal3 = require("@twilio-paste/modal");
var AlertDialogContent = (0, import_styling_library.styled)(import_modal3.ModalDialogContent)(() => (0, import_styling_library.css)({
  maxWidth: "size40"
}));
AlertDialogContent.displayName = "AlertDialogContent";

// src/AlertDialogFooter.tsx
var React3 = __toESM(require("react"));
var PropTypes3 = __toESM(require("prop-types"));
var import_box3 = require("@twilio-paste/box");
var import_button = require("@twilio-paste/button");
var import_stack = require("@twilio-paste/stack");
var import_modal4 = require("@twilio-paste/modal");
var AlertDialogFooter = React3.forwardRef((_a, ref) => {
  var _b = _a, { destructive, element = "ALERT_DIALOG_FOOTER", onConfirm, onConfirmLabel, onDismiss, onDismissLabel } = _b, props = __objRest(_b, ["destructive", "element", "onConfirm", "onConfirmLabel", "onDismiss", "onDismissLabel"]);
  const primaryVariant = destructive ? "destructive" : "primary";
  return /* @__PURE__ */ React3.createElement(import_box3.Box, __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, (0, import_box3.safelySpreadBoxProps)(props)), {
    as: "div"
  }), import_modal4.modalFooterStyles), {
    border: "none",
    element,
    justifyContent: "flex-end",
    paddingTop: "space0",
    ref
  }), /* @__PURE__ */ React3.createElement(import_stack.Stack, {
    orientation: "horizontal",
    spacing: "space50"
  }, /* @__PURE__ */ React3.createElement(import_button.Button, {
    variant: "secondary",
    onClick: onDismiss
  }, onDismissLabel), /* @__PURE__ */ React3.createElement(import_button.Button, {
    variant: primaryVariant,
    onClick: onConfirm
  }, onConfirmLabel)));
});
AlertDialogFooter.displayName = "AlertDialogFooter";
AlertDialogFooter.propTypes = {
  destructive: PropTypes3.bool,
  element: PropTypes3.string,
  onConfirm: PropTypes3.func.isRequired,
  onConfirmLabel: PropTypes3.string.isRequired,
  onDismiss: PropTypes3.func.isRequired,
  onDismissLabel: PropTypes3.string.isRequired
};

// src/index.tsx
var getAnimationStates = () => ({
  from: { opacity: 0, transform: `scale(0.675)` },
  enter: { opacity: 1, transform: `scale(1)` },
  leave: { opacity: 0, transform: `scale(0.675)` },
  config: {
    mass: 0.5,
    tension: 370,
    friction: 26
  }
});
var AlertDialog = React4.forwardRef((_a, ref) => {
  var _b = _a, {
    children,
    destructive,
    element = "ALERT_DIALOG",
    heading,
    isOpen,
    onConfirm,
    onConfirmLabel,
    onDismiss,
    onDismissLabel
  } = _b, props = __objRest(_b, [
    "children",
    "destructive",
    "element",
    "heading",
    "isOpen",
    "onConfirm",
    "onConfirmLabel",
    "onDismiss",
    "onDismissLabel"
  ]);
  const transitions = (0, import_animation_library.useTransition)(isOpen, getAnimationStates());
  const headingID = (0, import_uid_library.useUID)();
  const bodyID = (0, import_uid_library.useUID)();
  return /* @__PURE__ */ React4.createElement(React4.Fragment, null, transitions((styles, item) => item && /* @__PURE__ */ React4.createElement(import_modal5.ModalDialogOverlay, {
    isOpen,
    style: { opacity: styles.opacity }
  }, /* @__PURE__ */ React4.createElement(import_box4.Box, __spreadProps(__spreadValues({
    as: AlertDialogContent
  }, (0, import_box4.safelySpreadBoxProps)(props)), {
    "aria-labelledby": headingID,
    "aria-describedby": bodyID,
    element,
    ref,
    role: "alertdialog",
    style: styles
  }), /* @__PURE__ */ React4.createElement(AlertDialogHeader, {
    headingID,
    element: `${element}_HEADER`
  }, heading), /* @__PURE__ */ React4.createElement(AlertDialogBody, {
    bodyID,
    element: `${element}_BODY`
  }, children), /* @__PURE__ */ React4.createElement(AlertDialogFooter, {
    destructive,
    element: `${element}_FOOTER`,
    onDismiss,
    onDismissLabel,
    onConfirm,
    onConfirmLabel
  })))));
});
AlertDialog.displayName = "AlertDialog";
AlertDialog.propTypes = {
  children: PropTypes4.node.isRequired,
  destructive: PropTypes4.bool,
  element: PropTypes4.string,
  heading: PropTypes4.string.isRequired,
  isOpen: PropTypes4.bool.isRequired,
  onConfirm: PropTypes4.func.isRequired,
  onConfirmLabel: PropTypes4.string.isRequired,
  onDismiss: PropTypes4.func.isRequired,
  onDismissLabel: PropTypes4.string.isRequired
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AlertDialog
});
