var __defProp=Object.defineProperty,__defProps=Object.defineProperties;var __getOwnPropDescs=Object.getOwnPropertyDescriptors;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b));var __objRest=(source,exclude)=>{var target={};for(var prop in source)__hasOwnProp.call(source,prop)&&exclude.indexOf(prop)<0&&(target[prop]=source[prop]);if(source!=null&&__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(source))exclude.indexOf(prop)<0&&__propIsEnum.call(source,prop)&&(target[prop]=source[prop]);return target};import*as React4 from"react";import*as PropTypes4 from"prop-types";import{useUID}from"@twilio-paste/uid-library";import{useTransition}from"@twilio-paste/animation-library";import{Box as Box4,safelySpreadBoxProps as safelySpreadBoxProps4}from"@twilio-paste/box";import{ModalDialogOverlay}from"@twilio-paste/modal";import*as React from"react";import*as PropTypes from"prop-types";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{Heading}from"@twilio-paste/heading";import{modalHeaderStyles}from"@twilio-paste/modal";var AlertDialogHeader=React.forwardRef((_a,ref)=>{var _b=_a,{children,element="ALERT_DIALOG_HEADER",headingID}=_b,props=__objRest(_b,["children","element","headingID"]);return React.createElement(Box,__spreadProps(__spreadValues(__spreadProps(__spreadValues({},safelySpreadBoxProps(props)),{as:"div"}),modalHeaderStyles),{border:"none",element:`${element}_WRAPPER`,paddingBottom:"space0",ref}),React.createElement(Heading,{as:"h3",element,marginBottom:"space0",variant:"heading30",id:headingID},children))});AlertDialogHeader.displayName="AlertDialogHeader";AlertDialogHeader.propTypes={children:PropTypes.string.isRequired,headingID:PropTypes.string.isRequired,element:PropTypes.string};import*as React2 from"react";import*as PropTypes2 from"prop-types";import{Box as Box2,safelySpreadBoxProps as safelySpreadBoxProps2}from"@twilio-paste/box";import{modalBodyStyles}from"@twilio-paste/modal";var AlertDialogBody=React2.forwardRef((_a,ref)=>{var _b=_a,{bodyID,children,element="ALERT_DIALOG_BODY"}=_b,props=__objRest(_b,["bodyID","children","element"]);return React2.createElement(Box2,__spreadProps(__spreadValues(__spreadProps(__spreadValues({},safelySpreadBoxProps2(props)),{as:"div"}),modalBodyStyles),{element,id:bodyID,ref}),children)});AlertDialogBody.displayName="AlertDialogBody";AlertDialogBody.propTypes={bodyID:PropTypes2.string.isRequired,children:PropTypes2.node.isRequired,element:PropTypes2.string};import{css,styled}from"@twilio-paste/styling-library";import{ModalDialogContent}from"@twilio-paste/modal";var AlertDialogContent=styled(ModalDialogContent)(()=>css({maxWidth:"size40"}));AlertDialogContent.displayName="AlertDialogContent";import*as React3 from"react";import*as PropTypes3 from"prop-types";import{Box as Box3,safelySpreadBoxProps as safelySpreadBoxProps3}from"@twilio-paste/box";import{Button}from"@twilio-paste/button";import{Stack}from"@twilio-paste/stack";import{modalFooterStyles}from"@twilio-paste/modal";var AlertDialogFooter=React3.forwardRef((_a,ref)=>{var _b=_a,{destructive,element="ALERT_DIALOG_FOOTER",onConfirm,onConfirmLabel,onDismiss,onDismissLabel}=_b,props=__objRest(_b,["destructive","element","onConfirm","onConfirmLabel","onDismiss","onDismissLabel"]);let primaryVariant=destructive?"destructive":"primary";return React3.createElement(Box3,__spreadProps(__spreadValues(__spreadProps(__spreadValues({},safelySpreadBoxProps3(props)),{as:"div"}),modalFooterStyles),{border:"none",element,justifyContent:"flex-end",paddingTop:"space0",ref}),React3.createElement(Stack,{orientation:"horizontal",spacing:"space50"},React3.createElement(Button,{variant:"secondary",onClick:onDismiss},onDismissLabel),React3.createElement(Button,{variant:primaryVariant,onClick:onConfirm},onConfirmLabel)))});AlertDialogFooter.displayName="AlertDialogFooter";AlertDialogFooter.propTypes={destructive:PropTypes3.bool,element:PropTypes3.string,onConfirm:PropTypes3.func.isRequired,onConfirmLabel:PropTypes3.string.isRequired,onDismiss:PropTypes3.func.isRequired,onDismissLabel:PropTypes3.string.isRequired};var getAnimationStates=()=>({from:{opacity:0,transform:"scale(0.675)"},enter:{opacity:1,transform:"scale(1)"},leave:{opacity:0,transform:"scale(0.675)"},config:{mass:.5,tension:370,friction:26}}),AlertDialog=React4.forwardRef((_a,ref)=>{var _b=_a,{children,destructive,element="ALERT_DIALOG",heading,isOpen,onConfirm,onConfirmLabel,onDismiss,onDismissLabel}=_b,props=__objRest(_b,["children","destructive","element","heading","isOpen","onConfirm","onConfirmLabel","onDismiss","onDismissLabel"]);let transitions=useTransition(isOpen,getAnimationStates()),headingID=useUID(),bodyID=useUID();return React4.createElement(React4.Fragment,null,transitions((styles,item)=>item&&React4.createElement(ModalDialogOverlay,{isOpen,style:{opacity:styles.opacity}},React4.createElement(Box4,__spreadProps(__spreadValues({as:AlertDialogContent},safelySpreadBoxProps4(props)),{"aria-labelledby":headingID,"aria-describedby":bodyID,element,ref,role:"alertdialog",style:styles}),React4.createElement(AlertDialogHeader,{headingID,element:`${element}_HEADER`},heading),React4.createElement(AlertDialogBody,{bodyID,element:`${element}_BODY`},children),React4.createElement(AlertDialogFooter,{destructive,element:`${element}_FOOTER`,onDismiss,onDismissLabel,onConfirm,onConfirmLabel})))))});AlertDialog.displayName="AlertDialog";AlertDialog.propTypes={children:PropTypes4.node.isRequired,destructive:PropTypes4.bool,element:PropTypes4.string,heading:PropTypes4.string.isRequired,isOpen:PropTypes4.bool.isRequired,onConfirm:PropTypes4.func.isRequired,onConfirmLabel:PropTypes4.string.isRequired,onDismiss:PropTypes4.func.isRequired,onDismissLabel:PropTypes4.string.isRequired};export{AlertDialog};
