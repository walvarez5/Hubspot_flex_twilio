var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/themeProvider.tsx
import * as React from "react";
import { useReducedMotion, Globals as AnimatedGlobals } from "@twilio-paste/animation-library";
import {
  styled,
  StylingGlobals,
  ThemeProvider as EmotionThemeProvider,
  createCache,
  CacheProvider as EmotionCacheProvider
} from "@twilio-paste/styling-library";

// src/themes/default/index.ts
import {
  backgroundColors,
  borderColors,
  borderWidths,
  radii,
  fonts,
  fontSizes,
  fontWeights,
  lineHeights,
  boxShadows,
  sizings,
  spacings,
  textColors,
  zIndices,
  dataVisualization,
  colors
} from "@twilio-paste/design-tokens";

// src/generateThemeFromTokens.ts
var generateThemeFromTokens = ({
  backgroundColors: backgroundColors7,
  borderColors: borderColors7,
  borderWidths: borderWidths7,
  radii: radii7,
  fonts: fonts7,
  fontSizes: fontSizes7,
  fontWeights: fontWeights7,
  lineHeights: lineHeights7,
  boxShadows: boxShadows7,
  sizings: sizings7,
  spacings: spacings7,
  textColors: textColors7,
  zIndices: zIndices7,
  dataVisualization: dataVisualization7
}) => {
  const breakpoints = [sizings7.size40, sizings7.size100, sizings7.size120];
  return {
    shadows: boxShadows7,
    borderWidths: borderWidths7,
    radii: radii7,
    breakpoints,
    textColors: textColors7,
    borderColors: borderColors7,
    backgroundColors: backgroundColors7,
    fonts: fonts7,
    fontSizes: fontSizes7,
    fontWeights: fontWeights7,
    lineHeights: lineHeights7,
    widths: sizings7,
    maxWidths: sizings7,
    minWidths: sizings7,
    heights: sizings7,
    maxHeights: sizings7,
    minHeights: sizings7,
    sizes: sizings7,
    iconSizes: {
      sizeIcon05: sizings7.sizeIcon05,
      sizeIcon10: sizings7.sizeIcon10,
      sizeIcon20: sizings7.sizeIcon20,
      sizeIcon30: sizings7.sizeIcon30,
      sizeIcon40: sizings7.sizeIcon40,
      sizeIcon50: sizings7.sizeIcon50,
      sizeIcon60: sizings7.sizeIcon60,
      sizeIcon70: sizings7.sizeIcon70,
      sizeIcon80: sizings7.sizeIcon80,
      sizeIcon90: sizings7.sizeIcon90,
      sizeIcon100: sizings7.sizeIcon100,
      sizeIcon110: sizings7.sizeIcon110
    },
    space: spacings7,
    zIndices: zIndices7,
    dataVisualization: dataVisualization7
  };
};

// src/themes/default/index.ts
var DefaultTheme = generateThemeFromTokens({
  backgroundColors,
  borderColors,
  borderWidths,
  radii,
  fonts,
  fontSizes,
  fontWeights,
  lineHeights,
  boxShadows,
  sizings,
  spacings,
  textColors,
  zIndices,
  dataVisualization,
  colors
});

// src/themes/sendgrid/index.ts
import {
  backgroundColors as backgroundColors2,
  borderColors as borderColors2,
  borderWidths as borderWidths2,
  radii as radii2,
  fonts as fonts2,
  fontSizes as fontSizes2,
  fontWeights as fontWeights2,
  lineHeights as lineHeights2,
  boxShadows as boxShadows2,
  sizings as sizings2,
  spacings as spacings2,
  textColors as textColors2,
  zIndices as zIndices2,
  dataVisualization as dataVisualization2,
  colors as colors2
} from "@twilio-paste/design-tokens/dist/themes/sendgrid/tokens.es6";
var SendGridTheme = generateThemeFromTokens({
  backgroundColors: backgroundColors2,
  borderColors: borderColors2,
  borderWidths: borderWidths2,
  radii: radii2,
  fonts: fonts2,
  fontSizes: fontSizes2,
  fontWeights: fontWeights2,
  lineHeights: lineHeights2,
  boxShadows: boxShadows2,
  sizings: sizings2,
  spacings: spacings2,
  textColors: textColors2,
  zIndices: zIndices2,
  dataVisualization: dataVisualization2,
  colors: colors2
});

// src/themes/evergreen/index.ts
import {
  backgroundColors as backgroundColors3,
  borderColors as borderColors3,
  borderWidths as borderWidths3,
  radii as radii3,
  fonts as fonts3,
  fontSizes as fontSizes3,
  fontWeights as fontWeights3,
  lineHeights as lineHeights3,
  boxShadows as boxShadows3,
  sizings as sizings3,
  spacings as spacings3,
  textColors as textColors3,
  zIndices as zIndices3,
  dataVisualization as dataVisualization3,
  colors as colors3
} from "@twilio-paste/design-tokens/dist/themes/evergreen/tokens.es6";
var EvergreenTheme = generateThemeFromTokens({
  backgroundColors: backgroundColors3,
  borderColors: borderColors3,
  borderWidths: borderWidths3,
  radii: radii3,
  fonts: fonts3,
  fontSizes: fontSizes3,
  fontWeights: fontWeights3,
  lineHeights: lineHeights3,
  boxShadows: boxShadows3,
  sizings: sizings3,
  spacings: spacings3,
  textColors: textColors3,
  zIndices: zIndices3,
  dataVisualization: dataVisualization3,
  colors: colors3
});

// src/themes/dark/index.ts
import {
  backgroundColors as backgroundColors4,
  borderColors as borderColors4,
  borderWidths as borderWidths4,
  radii as radii4,
  fonts as fonts4,
  fontSizes as fontSizes4,
  fontWeights as fontWeights4,
  lineHeights as lineHeights4,
  boxShadows as boxShadows4,
  sizings as sizings4,
  spacings as spacings4,
  textColors as textColors4,
  zIndices as zIndices4,
  dataVisualization as dataVisualization4,
  colors as colors4
} from "@twilio-paste/design-tokens/dist/themes/dark/tokens.es6";
var DarkTheme = generateThemeFromTokens({
  backgroundColors: backgroundColors4,
  borderColors: borderColors4,
  borderWidths: borderWidths4,
  radii: radii4,
  fonts: fonts4,
  fontSizes: fontSizes4,
  fontWeights: fontWeights4,
  lineHeights: lineHeights4,
  boxShadows: boxShadows4,
  sizings: sizings4,
  spacings: spacings4,
  textColors: textColors4,
  zIndices: zIndices4,
  dataVisualization: dataVisualization4,
  colors: colors4
});

// src/themes/twilio/index.ts
import {
  backgroundColors as backgroundColors5,
  borderColors as borderColors5,
  borderWidths as borderWidths5,
  radii as radii5,
  fonts as fonts5,
  fontSizes as fontSizes5,
  fontWeights as fontWeights5,
  lineHeights as lineHeights5,
  boxShadows as boxShadows5,
  sizings as sizings5,
  spacings as spacings5,
  textColors as textColors5,
  zIndices as zIndices5,
  dataVisualization as dataVisualization5,
  colors as colors5
} from "@twilio-paste/design-tokens/dist/themes/twilio/tokens.es6";
var TwilioTheme = generateThemeFromTokens({
  backgroundColors: backgroundColors5,
  borderColors: borderColors5,
  borderWidths: borderWidths5,
  radii: radii5,
  fonts: fonts5,
  fontSizes: fontSizes5,
  fontWeights: fontWeights5,
  lineHeights: lineHeights5,
  boxShadows: boxShadows5,
  sizings: sizings5,
  spacings: spacings5,
  textColors: textColors5,
  zIndices: zIndices5,
  dataVisualization: dataVisualization5,
  colors: colors5
});

// src/themes/twilio-dark/index.ts
import {
  backgroundColors as backgroundColors6,
  borderColors as borderColors6,
  borderWidths as borderWidths6,
  radii as radii6,
  fonts as fonts6,
  fontSizes as fontSizes6,
  fontWeights as fontWeights6,
  lineHeights as lineHeights6,
  boxShadows as boxShadows6,
  sizings as sizings6,
  spacings as spacings6,
  textColors as textColors6,
  zIndices as zIndices6,
  dataVisualization as dataVisualization6,
  colors as colors6
} from "@twilio-paste/design-tokens/dist/themes/twilio-dark/tokens.es6";
var TwilioDarkTheme = generateThemeFromTokens({
  backgroundColors: backgroundColors6,
  borderColors: borderColors6,
  borderWidths: borderWidths6,
  radii: radii6,
  fonts: fonts6,
  fontSizes: fontSizes6,
  fontWeights: fontWeights6,
  lineHeights: lineHeights6,
  boxShadows: boxShadows6,
  sizings: sizings6,
  spacings: spacings6,
  textColors: textColors6,
  zIndices: zIndices6,
  dataVisualization: dataVisualization6,
  colors: colors6
});

// src/themes/index.ts
var ConsoleTheme = DefaultTheme;

// src/styles/global.ts
import { css } from "@twilio-paste/styling-library";
var pasteGlobalStyles = css({
  html: {
    fontSize: "100%",
    fontFamily: "fontFamilyText"
  },
  "html:lang(ja), html:lang(ja-JP)": {
    ".paste-theme-provider": {
      fontFamily: "fontFamilyTextJapanese"
    }
  },
  "html:lang(zh-CN)": {
    ".paste-theme-provider": {
      fontFamily: "fontFamilyTextChineseSimplified"
    }
  },
  "html:lang(zh-TW), html:lang(zh-HK)": {
    ".paste-theme-provider": {
      fontFamily: "fontFamilyTextChineseTraditional"
    }
  },
  "html:lang(ko)": {
    ".paste-theme-provider": {
      fontFamily: "fontFamilyTextKorean"
    }
  },
  body: {
    backgroundColor: "colorBackgroundBody",
    margin: 0,
    fontSize: "fontSize30"
  },
  "*, *::after, *::before": {
    boxSizing: "border-box"
  },
  "@media (prefers-reduced-motion: reduce)": {
    "*": {
      animationDuration: "0 !important",
      animationIterationCount: "1 !important",
      transitionDuration: "0 !important",
      scrollBehavior: "auto !important"
    }
  },
  ":root": {
    ["--reach-dialog"]: "1"
  }
});

// src/styles/base.ts
import { css as css2 } from "@twilio-paste/styling-library";
var pasteBaseStyles = css2({
  color: "colorText",
  fontSize: "fontSize30",
  fontFamily: "fontFamilyText",
  lineHeight: "lineHeight30",
  fontWeight: "fontWeightNormal",
  fontVariantNumeric: "tabular-nums"
});

// src/styles/fonts.ts
import { EmotionCSS } from "@twilio-paste/styling-library";
var pasteFonts = EmotionCSS`
/* -------------------------------------------------------
Variable font.
*/
@font-face {
  font-family: 'Inter var';
  font-weight: 100 900;
  font-display: swap;
  font-style: normal;
  font-named-instance: 'Regular';
  src: url("https://assets.twilio.com/public_assets/paste-fonts/1.5.0/Inter-roman.var.woff2?v=3.15") format("woff2");
}
@font-face {
  font-family: 'Inter var';
  font-weight: 100 900;
  font-display: swap;
  font-style: italic;
  font-named-instance: 'Italic';
  src: url("https://assets.twilio.com/public_assets/paste-fonts/1.5.0/Inter-italic.var.woff2?v=3.15") format("woff2");
}
/* --------------------------------------------------------------------------
[EXPERIMENTAL] Multi-axis, single variable font.

Slant axis is not yet widely supported (as of February 2019) and thus this
multi-axis single variable font is opt-in rather than the default.

When using this, you will probably need to set font-variation-settings
explicitly, e.g.

  * { font-variation-settings: "slnt" 0deg }
  .italic { font-variation-settings: "slnt" 10deg }

*/
@font-face {
  font-family: 'Inter var experimental';
  font-weight: 100 900;
  font-display: swap;
  font-style: oblique 0deg 8deg;
  src: url("https://assets.twilio.com/public_assets/paste-fonts/1.5.0/Inter.var.woff2?v=3.15") format("woff2");
}

/*
Twilio Sans Mono
*/
@font-face {
  font-family: 'TwilioSansMono';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-Regular.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-Regular.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansMono';
  font-style: italic;
  font-display: swap;
  font-weight: 400;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-RegularItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-RegularItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansMono';
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-Bold.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-Bold.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansMono';
  font-style: italic;
  font-display: swap;
  font-weight: 700;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-BoldItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-BoldItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansMono';
  font-style: normal;
  font-display: swap;
  font-weight: 500;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-Medium.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-Medium.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansMono';
  font-style: italic;
  font-display: swap;
  font-weight: 500;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-MediumItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansMono-MediumItl.woff') format('woff');
}

/*
Twilio Sans Text
*/
@font-face {
  font-family: 'TwilioSansText';
  font-style: normal;
  font-display: swap;
  font-weight: 300;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Light.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Light.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: italic;
  font-display: swap;
  font-weight: 300;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-LightItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-LightItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Regular.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Regular.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: italic;
  font-display: swap;
  font-weight: 400;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-RegularItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-RegularItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: normal;
  font-display: swap;
  font-weight: 500;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Medium.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Medium.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: italic;
  font-display: swap;
  font-weight: 500;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-MediumItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-MediumItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: normal;
  font-display: swap;
  font-weight: 600;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Semibold.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Semibold.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: italic;
  font-display: swap;
  font-weight: 600;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-SemiboldItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-SemiboldItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Bold.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Bold.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: italic;
  font-display: swap;
  font-weight: 700;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-BoldItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-BoldItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: normal;
  font-display: swap;
  font-weight: 800;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Extrabold.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-Extrabold.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansText';
  font-style: italic;
  font-display: swap;
  font-weight: 800;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-ExtraboldItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansText-ExtraboldItl.woff') format('woff');
}

/*
Twilio Sans Display
*/
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: normal;
  font-display: swap;
  font-weight: 300;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Light.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Light.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: italic;
  font-display: swap;
  font-weight: 300;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-LightItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-LightItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Regular.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Regular.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: italic;
  font-display: swap;
  font-weight: 400;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-RegularItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-RegularItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: normal;
  font-display: swap;
  font-weight: 500;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Medium.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Medium.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: italic;
  font-display: swap;
  font-weight: 500;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-MediumItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-MediumItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: normal;
  font-display: swap;
  font-weight: 600;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Semibold.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Semibold.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: italic;
  font-display: swap;
  font-weight: 600;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-SemiboldItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-SemiboldItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Bold.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Bold.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: italic;
  font-display: swap;
  font-weight: 700;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-BoldItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-BoldItl.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: normal;
  font-display: swap;
  font-weight: 800;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Extrabold.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-Extrabold.woff') format('woff');
}
@font-face {
  font-family: 'TwilioSansDisplay';
  font-style: italic;
  font-display: swap;
  font-weight: 800;
  src: local(''),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-ExtraboldItl.woff2') format('woff2'),
       url('https://assets.twilio.com/public_assets/paste-fonts/1.5.0/TwilioSansDisplay-ExtraboldItl.woff') format('woff');
}
`;

// src/constants.ts
var ThemeVariants = {
  DEFAULT: "default",
  SENDGRID: "sendgrid",
  FLEX: "flex",
  DARK: "dark",
  TWILIO: "twilio",
  TWILIO_DARK: "twilio-dark",
  EVERGREEN: "evergreen"
};
var DeprecatedThemeVariants = {
  CONSOLE: "console"
};

// src/utils/isDeprecatedTheme.ts
var isDeprecatedTheme = (theme) => {
  const themeToDeprecationMessage = {
    console: "It was removed in the 2022.02.04 release of Paste."
  };
  if (themeToDeprecationMessage[theme]) {
    console.error(`Paste: ${theme} is a deprecated theme. ${themeToDeprecationMessage[theme]}`);
  }
  return null;
};

// src/themeProvider.tsx
var StyledBase = styled.div(pasteBaseStyles);
function getProviderThemeProps(theme, customBreakpoints) {
  switch (theme) {
    case ThemeVariants.TWILIO:
      return __spreadProps(__spreadValues({}, TwilioTheme), {
        breakpoints: customBreakpoints || TwilioTheme.breakpoints
      });
    case ThemeVariants.TWILIO_DARK:
      return __spreadProps(__spreadValues({}, TwilioDarkTheme), {
        breakpoints: customBreakpoints || TwilioDarkTheme.breakpoints
      });
    case ThemeVariants.DARK:
      return __spreadProps(__spreadValues({}, DarkTheme), {
        breakpoints: customBreakpoints || DarkTheme.breakpoints
      });
    case ThemeVariants.SENDGRID:
      return __spreadProps(__spreadValues({}, SendGridTheme), {
        breakpoints: customBreakpoints || SendGridTheme.breakpoints
      });
    case ThemeVariants.EVERGREEN:
      return __spreadProps(__spreadValues({}, EvergreenTheme), {
        breakpoints: customBreakpoints || EvergreenTheme.breakpoints
      });
    case DeprecatedThemeVariants.CONSOLE:
      isDeprecatedTheme(DeprecatedThemeVariants.CONSOLE);
      return __spreadProps(__spreadValues({}, DefaultTheme), {
        breakpoints: customBreakpoints || DefaultTheme.breakpoints
      });
    case ThemeVariants.FLEX:
    case ThemeVariants.DEFAULT:
    default:
      return __spreadProps(__spreadValues({}, DefaultTheme), {
        breakpoints: customBreakpoints || DefaultTheme.breakpoints
      });
  }
}
var ThemeProvider = (_a) => {
  var _b = _a, {
    customBreakpoints,
    theme = ThemeVariants.DEFAULT,
    disableAnimations = false,
    cacheProviderProps
  } = _b, props = __objRest(_b, [
    "customBreakpoints",
    "theme",
    "disableAnimations",
    "cacheProviderProps"
  ]);
  const [cache] = React.useState(cacheProviderProps ? createCache(cacheProviderProps) : null);
  const prefersReducedMotion = useReducedMotion();
  React.useMemo(() => {
    AnimatedGlobals.assign({
      skipAnimation: disableAnimations || prefersReducedMotion
    });
  }, [disableAnimations, prefersReducedMotion]);
  const providerThemeProps = getProviderThemeProps(theme, customBreakpoints);
  if (cache) {
    return /* @__PURE__ */ React.createElement(EmotionCacheProvider, { value: cache }, /* @__PURE__ */ React.createElement(EmotionThemeProvider, { theme: providerThemeProps }, /* @__PURE__ */ React.createElement(StylingGlobals, { styles: pasteGlobalStyles({ theme: providerThemeProps }) }), /* @__PURE__ */ React.createElement(StylingGlobals, { styles: pasteFonts }), /* @__PURE__ */ React.createElement(StyledBase, __spreadValues({ className: "paste-theme-provider" }, props))));
  }
  return /* @__PURE__ */ React.createElement(EmotionThemeProvider, { theme: providerThemeProps }, /* @__PURE__ */ React.createElement(StylingGlobals, { styles: pasteGlobalStyles({ theme: providerThemeProps }) }), /* @__PURE__ */ React.createElement(StylingGlobals, { styles: pasteFonts }), /* @__PURE__ */ React.createElement(StyledBase, __spreadValues({ className: "paste-theme-provider" }, props)));
};
ThemeProvider.displayName = "PasteThemeProvider";

// src/themeConsumer.tsx
import * as React2 from "react";
import { ThemeContext } from "@twilio-paste/styling-library";
var ThemeConsumer = (_a) => {
  var _b = _a, { children } = _b, props = __objRest(_b, ["children"]);
  if (children == null || typeof children !== "function") {
    throw new Error("[ThemeConsumer]: You must pass a function as children");
  }
  return /* @__PURE__ */ React2.createElement(ThemeContext.Consumer, null, (theme) => {
    const newTheme = theme;
    return children(__spreadProps(__spreadValues({}, props), { theme: newTheme }));
  });
};
ThemeConsumer.displayName = "PasteThemeConsumer";

// src/withTheme.ts
import { withTheme } from "@twilio-paste/styling-library";

// src/useTheme.tsx
import * as React3 from "react";
import { ThemeContext as ThemeContext2 } from "@twilio-paste/styling-library";
var useTheme = () => {
  const context = React3.useContext(ThemeContext2);
  if (!context) {
    throw new Error("[useHook]: must be used within the @twilio-paste/theme provider");
  }
  return context;
};

// src/generateTokensFromTheme.ts
var generateTokensFromTheme = ({
  backgroundColors: backgroundColors7,
  borderColors: borderColors7,
  borderWidths: borderWidths7,
  radii: radii7,
  fonts: fonts7,
  fontSizes: fontSizes7,
  fontWeights: fontWeights7,
  lineHeights: lineHeights7,
  shadows,
  sizes,
  space,
  textColors: textColors7,
  zIndices: zIndices7,
  dataVisualization: dataVisualization7
}) => {
  return {
    boxShadows: shadows,
    borderWidths: borderWidths7,
    radii: radii7,
    textColors: textColors7,
    borderColors: borderColors7,
    backgroundColors: backgroundColors7,
    fonts: fonts7,
    fontSizes: fontSizes7,
    fontWeights: fontWeights7,
    lineHeights: lineHeights7,
    sizings: sizes,
    spacings: space,
    zIndices: zIndices7,
    colors: {},
    dataVisualization: dataVisualization7
  };
};

// src/utils/remToPx.ts
var PX_PER_REM = 16;
var remToPx = (rem, type = "number") => {
  const remValue = typeof rem === "string" ? Number.parseFloat(rem.replace("rem", "")) : rem;
  const pxValue = Math.round(remValue * PX_PER_REM);
  return type === "number" ? pxValue : `${pxValue}px`;
};

// src/useThemeContrastCheck.ts
import {
  getContrastRatingsOfTokensWithTextContrastRequirements,
  getContrastRatingsOfTokensWithUIControlContrastRequirements,
  getNumberOfTextFailures,
  getNumberOfUIControlFailures
} from "@twilio-paste/color-contrast-utils";
var useThemeContrastCheck = () => {
  const theme = useTheme();
  const designTokens = generateTokensFromTheme(theme);
  const textContrastRating = getContrastRatingsOfTokensWithTextContrastRequirements(designTokens);
  const uiControlContrastRating = getContrastRatingsOfTokensWithUIControlContrastRequirements(designTokens);
  const numberOfTextFailures = getNumberOfTextFailures(textContrastRating);
  const numberOfUIControlFailures = getNumberOfUIControlFailures(uiControlContrastRating);
  const totalFailures = numberOfTextFailures + numberOfUIControlFailures;
  return {
    textContrastRating,
    uiControlContrastRating,
    numberOfTextFailures,
    numberOfUIControlFailures,
    totalFailures
  };
};

// src/index.tsx
var Theme = {
  Provider: ThemeProvider,
  Consumer: ThemeConsumer
};
export {
  ConsoleTheme,
  DarkTheme,
  DefaultTheme,
  EvergreenTheme,
  SendGridTheme,
  StyledBase,
  Theme,
  ThemeVariants,
  TwilioDarkTheme,
  TwilioTheme,
  generateThemeFromTokens,
  generateTokensFromTheme,
  pasteBaseStyles,
  pasteFonts,
  pasteGlobalStyles,
  remToPx,
  useTheme,
  useThemeContrastCheck,
  withTheme
};
