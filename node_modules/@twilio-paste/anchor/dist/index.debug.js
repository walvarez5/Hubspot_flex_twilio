"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Anchor: () => Anchor,
  isExternalUrl: () => isExternalUrl,
  secureExternalLink: () => secureExternalLink
});
module.exports = __toCommonJS(src_exports);
var React3 = __toESM(require("react"));
var import_box3 = require("@twilio-paste/box");
var import_LinkExternalIcon = require("@twilio-paste/icons/cjs/LinkExternalIcon");

// src/DefaultAnchor.tsx
var React = __toESM(require("react"));
var import_box = require("@twilio-paste/box");

// src/proptypes.ts
var import_prop_types = __toESM(require("prop-types"));
var AnchorPropTypes = {
  children: import_prop_types.default.node.isRequired,
  href: import_prop_types.default.string.isRequired,
  rel: import_prop_types.default.string,
  showExternal: import_prop_types.default.bool,
  tabIndex: import_prop_types.default.oneOf([0, -1]),
  target: import_prop_types.default.oneOf(["_self", "_blank", "_parent", "_top"]),
  variant: import_prop_types.default.oneOf(["default", "inverse"]),
  element: import_prop_types.default.string,
  i18nExternalLinkLabel: import_prop_types.default.string
};

// src/DefaultAnchor.tsx
var DefaultAnchor = React.forwardRef((props, ref) => /* @__PURE__ */ React.createElement(
  import_box.Box,
  __spreadProps(__spreadValues({}, props), {
    as: "a",
    color: "colorTextLink",
    fontSize: "inherit",
    fontWeight: "inherit",
    lineHeight: "inherit",
    outline: "none",
    ref,
    textDecoration: "underline",
    _active: {
      color: "colorTextLinkStronger",
      textDecoration: "none"
    },
    _focus: {
      boxShadow: "shadowFocus",
      color: "colorTextLinkStronger",
      textDecoration: "none"
    },
    _hover: {
      color: "colorTextLinkStronger",
      textDecoration: "none"
    }
  }),
  props.children
));
DefaultAnchor.displayName = "DefaultAnchor";
if (false) {
  DefaultAnchor.propTypes = AnchorPropTypes;
}

// src/InverseAnchor.tsx
var React2 = __toESM(require("react"));
var import_box2 = require("@twilio-paste/box");
var InverseAnchor = React2.forwardRef((props, ref) => /* @__PURE__ */ React2.createElement(
  import_box2.Box,
  __spreadProps(__spreadValues({}, props), {
    as: "a",
    color: "colorTextInverse",
    fontSize: "inherit",
    fontWeight: "inherit",
    lineHeight: "inherit",
    outline: "none",
    ref,
    textDecoration: "underline",
    _active: {
      color: "colorTextInverse",
      textDecoration: "none"
    },
    _focus: {
      boxShadow: "shadowFocusInverse",
      color: "colorTextInverse",
      textDecoration: "none"
    },
    _hover: {
      color: "colorTextInverse",
      textDecoration: "none"
    }
  }),
  props.children
));
InverseAnchor.displayName = "InverseAnchor";
if (false) {
  InverseAnchor.propTypes = AnchorPropTypes;
}

// src/index.tsx
var AnchorVariants = {
  inverse: InverseAnchor,
  default: DefaultAnchor
};
var EXTERNAL_URL_REGEX = /^(https?:)\S*$/;
var EXTERNAL_TARGET_DEFAULT = "_blank";
var EXTERNAL_REL_DEFAULT = "noreferrer noopener";
var isExternalUrl = (url) => EXTERNAL_URL_REGEX.test(url);
var secureExternalLink = (href) => {
  if (!isExternalUrl(href))
    return void 0;
  return {
    rel: EXTERNAL_REL_DEFAULT,
    target: EXTERNAL_TARGET_DEFAULT
  };
};
var Anchor = React3.forwardRef(
  (_a, ref) => {
    var _b = _a, {
      element = "ANCHOR",
      variant = "default",
      showExternal,
      display,
      height,
      minHeight,
      maxHeight,
      width,
      minWidth,
      maxWidth,
      size,
      margin,
      marginBottom,
      marginLeft,
      marginRight,
      marginTop,
      marginX = null,
      marginY = null,
      padding,
      paddingBottom,
      paddingLeft,
      paddingRight,
      paddingTop,
      paddingX = null,
      paddingY = null,
      verticalAlign,
      i18nExternalLinkLabel = "(link takes you to an external page)"
    } = _b, props = __objRest(_b, [
      "element",
      "variant",
      "showExternal",
      "display",
      "height",
      "minHeight",
      "maxHeight",
      "width",
      "minWidth",
      "maxWidth",
      "size",
      "margin",
      "marginBottom",
      "marginLeft",
      "marginRight",
      "marginTop",
      "marginX",
      "marginY",
      "padding",
      "paddingBottom",
      "paddingLeft",
      "paddingRight",
      "paddingTop",
      "paddingX",
      "paddingY",
      "verticalAlign",
      "i18nExternalLinkLabel"
    ]);
    const AnchorComponent = AnchorVariants[variant];
    return /* @__PURE__ */ React3.createElement(
      AnchorComponent,
      __spreadProps(__spreadValues(__spreadValues({
        href: props.href,
        ref,
        variant
      }, secureExternalLink(props.href)), (0, import_box3.safelySpreadBoxProps)(props)), {
        element,
        display,
        height,
        minHeight,
        maxHeight,
        width,
        minWidth,
        maxWidth,
        size,
        margin,
        marginBottom,
        marginLeft,
        marginRight,
        marginTop,
        marginX,
        marginY,
        padding,
        paddingBottom,
        paddingLeft,
        paddingRight,
        paddingTop,
        paddingX,
        paddingY,
        verticalAlign
      }),
      showExternal ? /* @__PURE__ */ React3.createElement(import_box3.Box, { as: "span" }, props.children, /* @__PURE__ */ React3.createElement(import_box3.Box, { as: "span", display: "inline-block", flexShrink: 0, verticalAlign: "middle" }, /* @__PURE__ */ React3.createElement(import_LinkExternalIcon.LinkExternalIcon, { decorative: false, title: i18nExternalLinkLabel }))) : props.children
    );
  }
);
Anchor.displayName = "Anchor";
Anchor.propTypes = AnchorPropTypes;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Anchor,
  isExternalUrl,
  secureExternalLink
});
