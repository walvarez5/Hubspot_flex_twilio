var __defProp=Object.defineProperty,__defProps=Object.defineProperties;var __getOwnPropDescs=Object.getOwnPropertyDescriptors;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b));var __objRest=(source,exclude)=>{var target={};for(var prop in source)__hasOwnProp.call(source,prop)&&exclude.indexOf(prop)<0&&(target[prop]=source[prop]);if(source!=null&&__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(source))exclude.indexOf(prop)<0&&__propIsEnum.call(source,prop)&&(target[prop]=source[prop]);return target};import*as React from"react";import PropTypes from"prop-types";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{ErrorIcon}from"@twilio-paste/icons/esm/ErrorIcon";import{SuccessIcon}from"@twilio-paste/icons/esm/SuccessIcon";import{WarningIcon}from"@twilio-paste/icons/esm/WarningIcon";var HelpTextVariants={DEFAULT:"default",ERROR:"error",ERROR_INVERSE:"error_inverse",INVERSE:"inverse",SUCCESS:"success",WARNING:"warning"},VariantOptions={[HelpTextVariants.DEFAULT]:{textColor:"colorTextWeak",icon:null},[HelpTextVariants.INVERSE]:{textColor:"colorTextInverseWeak",icon:null},[HelpTextVariants.ERROR]:{textColor:"colorTextError",icon:React.createElement(Box,{flexShrink:0},React.createElement(ErrorIcon,{color:"colorTextError",decorative:!0,size:"sizeIcon20"}))},[HelpTextVariants.ERROR_INVERSE]:{textColor:"colorTextErrorWeak",icon:React.createElement(Box,{flexShrink:0},React.createElement(ErrorIcon,{color:"colorTextErrorWeak",decorative:!0,size:"sizeIcon20"}))},[HelpTextVariants.SUCCESS]:{textColor:"colorTextSuccess",icon:React.createElement(Box,{flexShrink:0},React.createElement(SuccessIcon,{color:"colorTextIconSuccess",decorative:!0,size:"sizeIcon20"}))},[HelpTextVariants.WARNING]:{textColor:"colorTextWarning",icon:React.createElement(Box,{flexShrink:0},React.createElement(WarningIcon,{color:"colorTextWarning",decorative:!0,size:"sizeIcon20"}))}},HelpText=React.forwardRef((_a,ref)=>{var _b=_a,{marginTop,children,variant="default",element="HELP_TEXT"}=_b,props=__objRest(_b,["marginTop","children","variant","element"]);let{textColor,icon}=VariantOptions[variant];return React.createElement(Box,__spreadProps(__spreadValues({},safelySpreadBoxProps(props)),{display:"flex",columnGap:"space20",marginTop:marginTop||"space30",ref,element,variant,as:"div",color:textColor,fontSize:"fontSize30",lineHeight:"lineHeight30"}),icon,React.createElement("span",null,children))});HelpText.displayName="HelpText";HelpText.propTypes={marginTop:PropTypes.oneOf(["space0"]),element:PropTypes.string};export{HelpText,HelpTextVariants};
