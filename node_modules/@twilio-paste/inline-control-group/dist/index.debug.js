"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  InlineControlGroup: () => InlineControlGroup
});
module.exports = __toCommonJS(src_exports);

// src/InlineControlGroup.tsx
var React = __toESM(require("react"));
var import_prop_types = require("prop-types");
var import_box = require("@twilio-paste/box");
var import_label = require("@twilio-paste/label");
var import_help_text = require("@twilio-paste/help-text");
var InlineControlGroup = React.forwardRef(
  (_a, ref) => {
    var _b = _a, {
      children,
      disabled,
      element = "INLINE_CONTROL_GROUP",
      errorText,
      helpText,
      legend,
      orientation = "vertical",
      required,
      i18nRequiredLabel
    } = _b, props = __objRest(_b, [
      "children",
      "disabled",
      "element",
      "errorText",
      "helpText",
      "legend",
      "orientation",
      "required",
      "i18nRequiredLabel"
    ]);
    return /* @__PURE__ */ React.createElement(
      import_box.Box,
      __spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
        as: "fieldset",
        element,
        margin: "space0",
        padding: "space0",
        minWidth: "0px",
        borderWidth: "borderWidth0",
        ref
      }),
      /* @__PURE__ */ React.createElement(
        import_label.Label,
        {
          as: "legend",
          element: "LEGEND",
          htmlFor: void 0,
          required,
          marginBottom: "space0",
          disabled,
          i18nRequiredLabel
        },
        legend
      ),
      helpText && /* @__PURE__ */ React.createElement(import_help_text.HelpText, { marginTop: "space0" }, helpText),
      /* @__PURE__ */ React.createElement(import_box.Box, { element: `${element}_SET`, marginLeft: "space20", marginRight: "space20" }, React.Children.map(children, (child) => {
        return /* @__PURE__ */ React.createElement(
          import_box.Box,
          {
            element: `${element}_FIELD`,
            display: orientation === "horizontal" ? "inline-block" : "block",
            marginTop: "space40",
            marginRight: orientation === "horizontal" ? "space70" : null
          },
          child
        );
      }), errorText && /* @__PURE__ */ React.createElement(import_box.Box, { element: `${element}_ERROR_TEXT_WRAPPER`, marginTop: "space40" }, /* @__PURE__ */ React.createElement(import_help_text.HelpText, { variant: "error" }, errorText)))
    );
  }
);
InlineControlGroup.displayName = "InlineControlGroup";
if (false) {
  InlineControlGroup.propTypes = {
    children: PropTypes.node.isRequired,
    disabled: PropTypes.bool,
    errorText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    helpText: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    legend: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,
    name: PropTypes.string.isRequired,
    orientation: PropTypes.oneOf(["vertical", "horizontal"]),
    required: PropTypes.bool,
    i18nRequiredLabel: PropTypes.string
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  InlineControlGroup
});
