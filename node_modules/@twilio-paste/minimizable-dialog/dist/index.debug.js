"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  MinimizableDialog: () => MinimizableDialog,
  MinimizableDialogButton: () => MinimizableDialogButton,
  MinimizableDialogContainer: () => MinimizableDialogContainer,
  MinimizableDialogContent: () => MinimizableDialogContent,
  MinimizableDialogHeader: () => MinimizableDialogHeader,
  useMinimizableDialogState: () => useMinimizableDialogState
});
module.exports = __toCommonJS(src_exports);

// src/MinimizableDialog.tsx
var React2 = __toESM(require("react"));
var import_prop_types = __toESM(require("prop-types"));
var import_box = require("@twilio-paste/box");
var import_theme = require("@twilio-paste/theme");
var import_non_modal_dialog_primitive = require("@twilio-paste/non-modal-dialog-primitive");

// src/MinimizableDialogContext.tsx
var React = __toESM(require("react"));
var MinimizableDialogContext = React.createContext({});

// src/MinimizableDialog.tsx
var StyledMinimizableDialog = React2.forwardRef(
  (_a, ref) => {
    var _b = _a, { minimized, style } = _b, props = __objRest(_b, ["minimized", "style"]);
    return /* @__PURE__ */ React2.createElement(
      import_box.Box,
      __spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
        ref,
        boxShadow: "shadow",
        width: "size40",
        zIndex: "zIndex80",
        borderRadius: "borderRadius20",
        transform: "none!important",
        inset: `auto 1.5rem ${minimized === true ? "0" : "1.5"}rem auto!important`,
        _focus: { outline: "none" },
        style
      })
    );
  }
);
StyledMinimizableDialog.displayName = "StyledMinimizableDialog";
var MinimizableDialog = React2.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "MINIMIZABLE_DIALOG" } = _b, props = __objRest(_b, ["children", "element"]);
    const dialog = React2.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React2.createElement(
      import_non_modal_dialog_primitive.NonModalDialogPrimitive,
      __spreadProps(__spreadValues(__spreadValues({}, dialog), props), {
        as: StyledMinimizableDialog,
        ref,
        preventBodyScroll: false,
        hideOnClickOutside: false
      }),
      /* @__PURE__ */ React2.createElement(import_theme.StyledBase, null, /* @__PURE__ */ React2.createElement(import_box.Box, { element, display: "flex", flexDirection: "column", backgroundColor: "colorBackgroundBody" }, children))
    );
  }
);
MinimizableDialog.displayName = "MinimizableDialog";
MinimizableDialog.propTypes = {
  "aria-label": import_prop_types.default.string.isRequired,
  children: import_prop_types.default.node.isRequired,
  element: import_prop_types.default.string
};

// src/MinimizableDialogButton.tsx
var React3 = __toESM(require("react"));
var import_prop_types2 = __toESM(require("prop-types"));
var import_button = require("@twilio-paste/button");
var import_non_modal_dialog_primitive2 = require("@twilio-paste/non-modal-dialog-primitive");
var MinimizableDialogButton = React3.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "MINIMIZABLE_DIALOG_BUTTON" } = _b, props = __objRest(_b, ["children", "element"]);
    const dialog = React3.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React3.createElement(import_non_modal_dialog_primitive2.NonModalDialogDisclosurePrimitive, __spreadProps(__spreadValues(__spreadValues({ element }, dialog), props), { as: import_button.Button, ref }), children);
  }
);
MinimizableDialogButton.propTypes = {
  id: import_prop_types2.default.string,
  children: import_prop_types2.default.node.isRequired,
  toggle: import_prop_types2.default.func,
  element: import_prop_types2.default.string
};
MinimizableDialogButton.displayName = "MinimizableDialogButton";

// src/MinimizableDialogHeader.tsx
var React4 = __toESM(require("react"));
var import_prop_types3 = __toESM(require("prop-types"));
var import_box2 = require("@twilio-paste/box");
var import_button2 = require("@twilio-paste/button");
var import_ChevronUpIcon = require("@twilio-paste/icons/cjs/ChevronUpIcon");
var import_CloseIcon = require("@twilio-paste/icons/cjs/CloseIcon");
var import_screen_reader_only = require("@twilio-paste/screen-reader-only");
var import_MinusIcon = require("@twilio-paste/icons/cjs/MinusIcon");
var MinimizableDialogHeader = React4.forwardRef(
  (_a, ref) => {
    var _b = _a, {
      children,
      element = "MINIMIZABLE_DIALOG_HEADER",
      i18nDismissLabel = "close",
      i18nMinimizeLabel = "minimize"
    } = _b, props = __objRest(_b, [
      "children",
      "element",
      "i18nDismissLabel",
      "i18nMinimizeLabel"
    ]);
    const { hide, minimized, minimize, expand } = React4.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React4.createElement(
      import_box2.Box,
      __spreadProps(__spreadValues({}, (0, import_box2.safelySpreadBoxProps)(props)), {
        ref,
        display: "grid",
        gridTemplateColumns: "1fr auto auto",
        columnGap: "space30",
        backgroundColor: "colorBackgroundInverse",
        paddingX: "space70",
        paddingY: "space40",
        color: "colorTextInverse",
        overflow: "hidden",
        borderTopLeftRadius: "borderRadius20",
        borderTopRightRadius: "borderRadius20",
        element
      }),
      /* @__PURE__ */ React4.createElement(
        import_box2.Box,
        {
          as: "h2",
          element: `${element}_HEADING`,
          fontWeight: "fontWeightBold",
          fontSize: "fontSize30",
          lineHeight: "lineHeight30",
          margin: "space0"
        },
        children
      ),
      /* @__PURE__ */ React4.createElement(
        import_button2.Button,
        {
          element: `${element}_MINIMIZE_BUTTON`,
          variant: "reset",
          size: "reset",
          onClick: minimized ? expand : minimize,
          "aria-pressed": minimized === void 0 ? false : minimized
        },
        minimized ? /* @__PURE__ */ React4.createElement(import_ChevronUpIcon.ChevronUpIcon, { element: `${element}_MINIMIZE_ICON`, decorative: true, size: "sizeIcon20" }) : /* @__PURE__ */ React4.createElement(import_MinusIcon.MinusIcon, { element: `${element}_MINIMIZE_ICON`, decorative: true, size: "sizeIcon20" }),
        /* @__PURE__ */ React4.createElement(import_screen_reader_only.ScreenReaderOnly, null, i18nMinimizeLabel)
      ),
      /* @__PURE__ */ React4.createElement(import_button2.Button, { element: `${element}_CLOSE_BUTTON`, variant: "reset", size: "reset", onClick: hide }, /* @__PURE__ */ React4.createElement(import_CloseIcon.CloseIcon, { element: `${element}_CLOSE_ICON`, decorative: true, size: "sizeIcon20" }), /* @__PURE__ */ React4.createElement(import_screen_reader_only.ScreenReaderOnly, null, i18nDismissLabel))
    );
  }
);
MinimizableDialogHeader.displayName = "MinimizableDialogHeader";
MinimizableDialogHeader.propTypes = {
  children: import_prop_types3.default.node,
  i18nDismissLabel: import_prop_types3.default.string,
  i18nMinimizeLabel: import_prop_types3.default.string,
  element: import_prop_types3.default.string
};

// src/MinimizableDialogContainer.tsx
var React5 = __toESM(require("react"));
var import_non_modal_dialog_primitive3 = require("@twilio-paste/non-modal-dialog-primitive");
var useMinimizableDialogState = (_a) => {
  var _b = _a, {
    minimized: minimizedArg
  } = _b, initialState = __objRest(_b, [
    "minimized"
  ]);
  const [minimized, setMinimized] = React5.useState(minimizedArg);
  const minimize = () => setMinimized(true);
  const expand = () => setMinimized(false);
  const dialog = (0, import_non_modal_dialog_primitive3.useNonModalDialogPrimitiveState)(__spreadValues({}, initialState));
  return __spreadProps(__spreadValues({}, dialog), { minimized, minimize, expand });
};
var BaseMinimizableDialogContainer = (_a) => {
  var _b = _a, {
    gutter,
    children,
    placement,
    modal,
    state,
    minimized: minimizedProp
  } = _b, initialState = __objRest(_b, [
    "gutter",
    "children",
    "placement",
    "modal",
    "state",
    "minimized"
  ]);
  const dialog = state || useMinimizableDialogState(__spreadValues({
    minimized: minimizedProp,
    modal: true
  }, initialState));
  return /* @__PURE__ */ React5.createElement(MinimizableDialogContext.Provider, { value: __spreadValues({}, dialog) }, children);
};
BaseMinimizableDialogContainer.displayName = "BaseMinimizableDialogContainer";
var MinimizableDialogContainer = React5.memo(BaseMinimizableDialogContainer);
MinimizableDialogContainer.displayName = "MinimizableDialogContainer";

// src/MinimizableDialogContent.tsx
var React6 = __toESM(require("react"));
var import_prop_types4 = __toESM(require("prop-types"));
var import_box3 = require("@twilio-paste/box");
var MinimizableDialogContent = React6.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "MINIMIZABLE_DIALOG_CONTENT" } = _b, props = __objRest(_b, ["children", "element"]);
    const { minimized } = React6.useContext(MinimizableDialogContext);
    return /* @__PURE__ */ React6.createElement(
      import_box3.Box,
      __spreadProps(__spreadValues({}, (0, import_box3.safelySpreadBoxProps)(props)), {
        element,
        ref,
        display: minimized ? "none" : "block",
        borderBottomLeftRadius: "borderRadius20",
        borderBottomRightRadius: "borderRadius20"
      }),
      children
    );
  }
);
MinimizableDialogContent.propTypes = {
  children: import_prop_types4.default.node,
  element: import_prop_types4.default.string
};
MinimizableDialogContent.displayName = "MinimizableDialogContent";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  MinimizableDialog,
  MinimizableDialogButton,
  MinimizableDialogContainer,
  MinimizableDialogContent,
  MinimizableDialogHeader,
  useMinimizableDialogState
});
