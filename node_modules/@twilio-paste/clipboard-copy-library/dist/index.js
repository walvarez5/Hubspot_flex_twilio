var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var require_clipboard_copy=__commonJS({"../../../node_modules/clipboard-copy/index.js"(exports,module2){module2.exports=clipboardCopy;function clipboardCopy(text){if(navigator.clipboard)return navigator.clipboard.writeText(text).catch(function(err){throw err!==void 0?err:new DOMException("The request is not allowed","NotAllowedError")});var span=document.createElement("span");span.textContent=text,span.style.whiteSpace="pre",document.body.appendChild(span);var selection=window.getSelection(),range=window.document.createRange();selection.removeAllRanges(),range.selectNode(span),selection.addRange(range);var success=!1;try{success=window.document.execCommand("copy")}catch(err){console.log("error",err)}return selection.removeAllRanges(),window.document.body.removeChild(span),success?Promise.resolve():Promise.reject(new DOMException("The request is not allowed","NotAllowedError"))}}});var require_useTimedToggle=__commonJS({"../../../node_modules/use-clipboard-copy/dist/useTimedToggle.js"(exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.useTimedToggle=void 0;var react_1=require("react");function useTimedToggle(initialValue){var _a=react_1.useState(!1),value=_a[0],setValue=_a[1],timeoutRef=react_1.useRef(),initialValueRef=react_1.useRef(initialValue),toggleValue=function(timeout){clearTimeout(timeoutRef.current),setValue(!initialValueRef.current),timeoutRef.current=window.setTimeout(function(){return setValue(initialValueRef.current)},timeout)};return react_1.useEffect(function(){return function(){return clearTimeout(timeoutRef.current)}},[]),[value,toggleValue]}exports.useTimedToggle=useTimedToggle}});var require_dist=__commonJS({"../../../node_modules/use-clipboard-copy/dist/index.js"(exports){"use strict";var __importDefault=exports&&exports.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});exports.useClipboard=void 0;var clipboard_copy_1=__importDefault(require_clipboard_copy()),react_1=require("react"),useTimedToggle_1=require_useTimedToggle();function isInputLike(node){return node&&(node.nodeName==="TEXTAREA"||node.nodeName==="INPUT")}function useClipboard2(options){options===void 0&&(options={});var _a=useTimedToggle_1.useTimedToggle(!1),copied=_a[0],toggleCopied=_a[1],targetRef=react_1.useRef(null),optionsRef=react_1.useRef(options);optionsRef.current=options;function isSupported(){return!!navigator.clipboard||typeof document.execCommand=="function"&&typeof document.queryCommandSupported=="function"&&document.queryCommandSupported("copy")}var copyHandler=react_1.useCallback(function(text){var opts=optionsRef.current,target=targetRef.current;function handleSuccess(){opts.onSuccess&&opts.onSuccess(),opts.copiedTimeout&&toggleCopied(opts.copiedTimeout),opts.selectOnCopy&&isInputLike(target)&&target.select()}function handleError(){opts.onError&&opts.onError(),opts.selectOnError!==!1&&isInputLike(target)&&target.select()}function copy(value){clipboard_copy_1.default(value).then(handleSuccess).catch(handleError)}typeof text=="string"?copy(text):target&&copy(target.value)},[]);return{copied,copy:copyHandler,isSupported,target:targetRef}}exports.useClipboard=useClipboard2}});var src_exports={};__export(src_exports,{useClipboard:()=>import_use_clipboard_copy.useClipboard});module.exports=__toCommonJS(src_exports);var import_use_clipboard_copy=__toESM(require_dist());0&&(module.exports={useClipboard});
