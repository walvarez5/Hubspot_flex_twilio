var __defProp=Object.defineProperty,__defProps=Object.defineProperties;var __getOwnPropDescs=Object.getOwnPropertyDescriptors;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b));var __objRest=(source,exclude)=>{var target={};for(var prop in source)__hasOwnProp.call(source,prop)&&exclude.indexOf(prop)<0&&(target[prop]=source[prop]);if(source!=null&&__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(source))exclude.indexOf(prop)<0&&__propIsEnum.call(source,prop)&&(target[prop]=source[prop]);return target};import*as React from"react";import PropTypes from"prop-types";import{useUIDSeed}from"@twilio-paste/uid-library";import{isSpaceTokenProp,ResponsiveProp}from"@twilio-paste/style-props";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";var getStackDisplay=orientation=>Array.isArray(orientation)?orientation.map(value=>value==="horizontal"?"flex":"block"):orientation==="horizontal"?"flex":"block",getStackStyles=orientation=>({display:getStackDisplay(orientation),alignItems:"center",flexWrap:"wrap"}),getStackChildMargins=(orientation,spacing)=>{let styles={};if(Array.isArray(orientation)){let marginRight=[],marginBottom=[];orientation.forEach((value,i)=>{marginRight[i]=value==="horizontal"?spacing:"space0",marginBottom[i]=value==="horizontal"?"space0":spacing}),styles={marginRight,marginBottom}}return orientation==="horizontal"&&(styles={marginRight:spacing}),orientation==="vertical"&&(styles={marginBottom:spacing}),styles},Stack=React.forwardRef((_a,ref)=>{var _b=_a,{children,orientation,spacing,element="STACK"}=_b,props=__objRest(_b,["children","orientation","spacing","element"]);let[childrenCount,validChildren]=React.useMemo(()=>{let filteredChildren=React.Children.toArray(children).filter(child=>React.isValidElement(child)||typeof child=="string");return[filteredChildren.length,filteredChildren]},[children]),stackStyles=React.useMemo(()=>getStackStyles(orientation),[orientation]),childMargins=React.useMemo(()=>getStackChildMargins(orientation,spacing),[orientation,spacing]),keySeed=useUIDSeed();return React.createElement(Box,__spreadProps(__spreadValues(__spreadValues({element},safelySpreadBoxProps(props)),stackStyles),{ref}),validChildren.map((child,index)=>React.createElement(Box,__spreadProps(__spreadValues({element:`${element}_CHILD`},childrenCount!==index+1?childMargins:null),{key:keySeed(`stack-${index}`)}),child)))});Stack.displayName="Stack";Stack.propTypes={orientation:ResponsiveProp(PropTypes.oneOf(["horizontal","vertical"])).isRequired,spacing:isSpaceTokenProp,element:PropTypes.string};export{Stack,getStackChildMargins,getStackDisplay,getStackStyles};
