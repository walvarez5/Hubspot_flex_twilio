var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/List.tsx
import * as React from "react";
import PropTypes from "prop-types";
import { Text } from "@twilio-paste/text";
import { isMarginTokenProp } from "@twilio-paste/style-props";
var List = React.forwardRef(
  (_a, ref) => {
    var _b = _a, { as, children, element = "LIST", listStyleType = "disc" } = _b, props = __objRest(_b, ["as", "children", "element", "listStyleType"]);
    return /* @__PURE__ */ React.createElement(
      Text,
      __spreadProps(__spreadValues({}, props), {
        as,
        color: "colorText",
        element,
        fontSize: "fontSize30",
        fontWeight: "fontWeightNormal",
        lineHeight: "lineHeight40",
        marginLeft: "space70",
        listStyleType,
        ref
      }),
      children
    );
  }
);
List.displayName = "List";
List.propTypes = {
  as: PropTypes.oneOf(["ol", "ul"]).isRequired,
  element: PropTypes.string,
  marginTop: isMarginTokenProp,
  marginBottom: isMarginTokenProp
};

// src/ListItem.tsx
import * as React2 from "react";
import PropTypes2 from "prop-types";
import { Text as Text2, safelySpreadTextProps } from "@twilio-paste/text";
var ListItem = React2.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "LIST_ITEM" } = _b, props = __objRest(_b, ["children", "element"]);
  return /* @__PURE__ */ React2.createElement(
    Text2,
    __spreadProps(__spreadValues({}, safelySpreadTextProps(props)), {
      as: "li",
      color: "colorText",
      element,
      fontSize: "fontSize30",
      fontWeight: "fontWeightNormal",
      lineHeight: "lineHeight40",
      marginBottom: "space30",
      marginTop: "space30",
      ref
    }),
    children
  );
});
ListItem.displayName = "ListItem";
ListItem.propTypes = {
  element: PropTypes2.string
};

// src/OrderedList.tsx
import * as React3 from "react";
import PropTypes3 from "prop-types";
import { safelySpreadTextProps as safelySpreadTextProps2 } from "@twilio-paste/text";
import { isMarginTokenProp as isMarginTokenProp2 } from "@twilio-paste/style-props";
var OrderedList = React3.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "ORDERED_LIST", marginTop, marginBottom = "space70" } = _b, props = __objRest(_b, ["children", "element", "marginTop", "marginBottom"]);
    return /* @__PURE__ */ React3.createElement(
      List,
      __spreadProps(__spreadValues({}, safelySpreadTextProps2(props)), {
        as: "ol",
        element,
        marginTop,
        marginBottom,
        listStyleType: "decimal",
        ref
      }),
      children
    );
  }
);
OrderedList.displayName = "OrderedList";
OrderedList.propTypes = {
  element: PropTypes3.string,
  marginTop: isMarginTokenProp2,
  marginBottom: isMarginTokenProp2
};

// src/UnorderedList.tsx
import * as React4 from "react";
import PropTypes4 from "prop-types";
import { safelySpreadTextProps as safelySpreadTextProps3 } from "@twilio-paste/text";
import { isMarginTokenProp as isMarginTokenProp3 } from "@twilio-paste/style-props";
var UnorderedList = React4.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "UNORDERED_LIST", marginTop, marginBottom = "space70" } = _b, props = __objRest(_b, ["children", "element", "marginTop", "marginBottom"]);
    return /* @__PURE__ */ React4.createElement(
      List,
      __spreadProps(__spreadValues({}, safelySpreadTextProps3(props)), {
        as: "ul",
        element,
        marginTop,
        marginBottom,
        ref,
        listStyleType: "disc"
      }),
      children
    );
  }
);
UnorderedList.displayName = "UnorderedList";
UnorderedList.propTypes = {
  element: PropTypes4.string,
  marginTop: isMarginTokenProp3,
  marginBottom: isMarginTokenProp3
};
export {
  List,
  ListItem,
  OrderedList,
  UnorderedList
};
