"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Pagination: () => Pagination,
  PaginationArrow: () => PaginationArrow,
  PaginationEllipsis: () => PaginationEllipsis,
  PaginationItems: () => PaginationItems,
  PaginationLabel: () => PaginationLabel,
  PaginationNumber: () => PaginationNumber,
  PaginationNumbers: () => PaginationNumbers
});
module.exports = __toCommonJS(src_exports);

// src/Pagination.tsx
var React = __toESM(require("react"));
var import_box = require("@twilio-paste/box");

// src/proptypes.ts
var import_prop_types = __toESM(require("prop-types"));
var PaginationPropTypes = {
  label: import_prop_types.default.string.isRequired,
  children: import_prop_types.default.node.isRequired,
  element: import_prop_types.default.string
};
var PaginationItemsPropTypes = {
  children: import_prop_types.default.node.isRequired,
  element: import_prop_types.default.string
};
var PaginationNumbersPropTypes = {
  children: import_prop_types.default.node.isRequired,
  pageLabel: import_prop_types.default.string,
  element: import_prop_types.default.string
};
var PaginationLabelPropTypes = {
  children: import_prop_types.default.node.isRequired,
  element: import_prop_types.default.string
};
var PaginationNumberPropTypes = {
  as: import_prop_types.default.oneOf(["a", "button"]),
  children: import_prop_types.default.node.isRequired,
  isCurrent: import_prop_types.default.bool,
  label: import_prop_types.default.string.isRequired,
  href: import_prop_types.default.string,
  element: import_prop_types.default.string
};
var PaginationArrowButtonPropTypes = {
  as: import_prop_types.default.oneOf(["a", "button"]),
  disabled: import_prop_types.default.bool,
  visibleLabel: import_prop_types.default.string,
  element: import_prop_types.default.string
};
var PaginationArrowPropTypes = {
  as: import_prop_types.default.oneOf(["a", "button"]),
  disabled: import_prop_types.default.bool,
  href: import_prop_types.default.string,
  isHovered: import_prop_types.default.bool,
  label: import_prop_types.default.string.isRequired,
  variant: import_prop_types.default.oneOf(["back", "forward"]).isRequired,
  visibleLabel: import_prop_types.default.string,
  element: import_prop_types.default.string
};
var PaginationArrowIconWrapperPropTypes = {
  children: import_prop_types.default.node.isRequired,
  isHovered: import_prop_types.default.bool,
  element: import_prop_types.default.string
};
var PaginationEllipsisPropTypes = {
  label: import_prop_types.default.string.isRequired,
  element: import_prop_types.default.string
};

// src/Pagination.tsx
var Pagination = React.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "PAGINATION", label } = _b, props = __objRest(_b, ["children", "element", "label"]);
    return /* @__PURE__ */ React.createElement(import_box.Box, __spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), { element, ref, "aria-label": label, as: "nav", role: "navigation" }), children);
  }
);
Pagination.displayName = "Pagination";
Pagination.propTypes = PaginationPropTypes;

// src/PaginationItems.tsx
var React2 = __toESM(require("react"));
var import_uid_library = require("@twilio-paste/uid-library");
var import_box2 = require("@twilio-paste/box");

// src/styles.ts
var ULStyles = {
  display: "inline-flex",
  margin: "space0",
  padding: "space0"
};
var LIStyles = {
  listStyleType: "none",
  margin: "space0",
  padding: "space0"
};

// src/PaginationItems.tsx
var PaginationItems = React2.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "PAGINATION_ITEMS" } = _b, props = __objRest(_b, ["children", "element"]);
    const [validChildren] = React2.useMemo(
      () => [React2.Children.toArray(children).filter((child) => React2.isValidElement(child))],
      [children]
    );
    const keySeed = (0, import_uid_library.useUIDSeed)();
    return /* @__PURE__ */ React2.createElement(import_box2.Box, __spreadProps(__spreadValues(__spreadValues({}, ULStyles), (0, import_box2.safelySpreadBoxProps)(props)), { ref, element, as: "ul" }), validChildren.map((child, index) => {
      return /* @__PURE__ */ React2.createElement(
        import_box2.Box,
        __spreadProps(__spreadValues({}, LIStyles), {
          key: keySeed(`pagination-items-${index}`),
          element: `${element}_ITEM`,
          as: "li",
          marginRight: "space90",
          _last: {
            marginRight: "space0"
          }
        }),
        child
      );
    }));
  }
);
PaginationItems.displayName = "PaginationItems";
PaginationItems.propTypes = PaginationItemsPropTypes;

// src/PaginationArrow/index.tsx
var React7 = __toESM(require("react"));

// src/PaginationArrow/PaginationBackArrow.tsx
var React5 = __toESM(require("react"));
var import_text = require("@twilio-paste/text");
var import_ArrowBackIcon = require("@twilio-paste/icons/cjs/ArrowBackIcon");

// src/PaginationArrow/PaginationArrowButton.tsx
var React3 = __toESM(require("react"));
var import_box3 = require("@twilio-paste/box");
var PaginationArrowButton = React3.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "PAGINATION_ARROW_BUTTON", disabled, visibleLabel } = _b, props = __objRest(_b, ["children", "element", "disabled", "visibleLabel"]);
    return /* @__PURE__ */ React3.createElement(
      import_box3.Box,
      __spreadProps(__spreadValues({}, (0, import_box3.safelySpreadBoxProps)(props)), {
        element,
        ref,
        "aria-hidden": disabled,
        alignItems: "center",
        appearance: "none",
        background: "none",
        border: "none",
        borderColor: "colorBorder",
        borderRadius: visibleLabel ? "borderRadius10" : "borderRadiusCircle",
        color: "colorText",
        display: "flex",
        fontFamily: "inherit",
        fontVariantNumeric: "tabular-nums",
        fontWeight: "fontWeightNormal",
        lineHeight: "lineHeight30",
        margin: "space0",
        outline: "none",
        opacity: disabled ? "0" : "1",
        padding: "space0",
        position: "relative",
        textDecoration: "none",
        transition: "border-color 100ms ease-in, box-shadow 100ms ease-in, color 100ms ease-in, opacity 150ms ease-in, visibility 150ms ease-in",
        visibility: disabled ? "hidden" : "visible",
        _hover: {
          borderColor: "colorBorderPrimaryStronger",
          color: "colorTextLinkStronger",
          cursor: "pointer",
          textDecoration: "none"
        },
        _focus: {
          borderColor: "colorBorderPrimaryStronger",
          boxShadow: "shadowFocus",
          color: "colorTextLinkStronger",
          textDecoration: "none"
        },
        _active: { textDecoration: "none" }
      }),
      children
    );
  }
);
PaginationArrowButton.displayName = "PaginationArrowButton";
PaginationArrowButton.propTypes = PaginationArrowButtonPropTypes;

// src/PaginationArrow/PaginationArrowIconWrapper.tsx
var React4 = __toESM(require("react"));
var import_box4 = require("@twilio-paste/box");
var PaginationArrowIconWrapper = ({
  children,
  element = "PAGINATION_ARROW_ICON_WRAPPER",
  isFocused,
  isHovered
}) => {
  return /* @__PURE__ */ React4.createElement(
    import_box4.Box,
    {
      element,
      alignItems: "center",
      backgroundColor: isHovered || isFocused ? "colorBackgroundPrimaryWeakest" : "none",
      borderColor: "inherit",
      borderRadius: "borderRadiusCircle",
      borderStyle: "solid",
      borderWidth: "borderWidth10",
      display: "flex",
      height: "sizeSquare80",
      justifyContent: "center",
      transition: "background-color 100ms ease-in",
      width: "sizeSquare80"
    },
    children
  );
};
PaginationArrowIconWrapper.displayName = "PaginationArrowIconWrapper";
PaginationArrowIconWrapper.propTypes = PaginationArrowIconWrapperPropTypes;

// src/PaginationArrow/PaginationBackArrow.tsx
var PaginationBackArrow = React5.forwardRef(
  (_a, ref) => {
    var _b = _a, { as = "button", element = "PAGINATION_ARROW", disabled, isFocused, isHovered, label, visibleLabel } = _b, props = __objRest(_b, ["as", "element", "disabled", "isFocused", "isHovered", "label", "visibleLabel"]);
    return /* @__PURE__ */ React5.createElement(
      PaginationArrowButton,
      __spreadProps(__spreadValues({}, props), {
        ref,
        as,
        disabled,
        visibleLabel,
        element: `${element}_BUTTON`
      }),
      /* @__PURE__ */ React5.createElement(PaginationArrowIconWrapper, { isFocused, isHovered, element: `${element}_ICON_WRAPPER` }, /* @__PURE__ */ React5.createElement(import_ArrowBackIcon.ArrowBackIcon, { decorative: false, display: "block", title: label, element: `${element}_ICON` })),
      visibleLabel ? /* @__PURE__ */ React5.createElement(import_text.Text, { "aria-hidden": "true", as: "span", color: "inherit", marginLeft: "space30", element: `${element}_TEXT` }, visibleLabel) : null
    );
  }
);
PaginationBackArrow.displayName = "PaginationBackArrow";
PaginationBackArrow.propTypes = PaginationArrowPropTypes;

// src/PaginationArrow/PaginationForwardArrow.tsx
var React6 = __toESM(require("react"));
var import_text2 = require("@twilio-paste/text");
var import_ArrowForwardIcon = require("@twilio-paste/icons/cjs/ArrowForwardIcon");
var PaginationForwardArrow = React6.forwardRef(
  (_a, ref) => {
    var _b = _a, { as = "button", element = "PAGINATION_ARROW", disabled, isFocused, isHovered, label, visibleLabel } = _b, props = __objRest(_b, ["as", "element", "disabled", "isFocused", "isHovered", "label", "visibleLabel"]);
    return /* @__PURE__ */ React6.createElement(
      PaginationArrowButton,
      __spreadProps(__spreadValues({}, props), {
        ref,
        element: `${element}_BUTTON`,
        as,
        disabled,
        visibleLabel
      }),
      visibleLabel ? /* @__PURE__ */ React6.createElement(import_text2.Text, { "aria-hidden": "true", as: "span", color: "inherit", marginRight: "space30", element: `${element}_TEXT` }, visibleLabel) : null,
      /* @__PURE__ */ React6.createElement(PaginationArrowIconWrapper, { isFocused, isHovered, element: `${element}_ICON_WRAPPER` }, /* @__PURE__ */ React6.createElement(import_ArrowForwardIcon.ArrowForwardIcon, { decorative: false, display: "block", title: label, element: `${element}_ICON` }))
    );
  }
);
PaginationForwardArrow.displayName = "PaginationForwardArrow";
PaginationForwardArrow.propTypes = PaginationArrowPropTypes;

// src/utils.ts
var handleLinkValidation = ({ as, href }) => {
  const hasHref = href != null && href !== "";
  if (as !== "a" && hasHref) {
    throw new Error(
      `[Paste: Pagination] You cannot pass href into button pagination without the 'a' tag.  Use 'as="a"'.`
    );
  }
  if (as === "a" && !hasHref) {
    throw new Error(`[Paste: Pagination] Missing href prop for link pagination.`);
  }
};

// src/PaginationArrow/index.tsx
var PaginationArrow = React7.forwardRef(
  (_a, ref) => {
    var _b = _a, {
      as = "button",
      element = "PAGINATION_ARROW",
      disabled,
      href,
      isHovered,
      label,
      variant = "back",
      visibleLabel
    } = _b, props = __objRest(_b, [
      "as",
      "element",
      "disabled",
      "href",
      "isHovered",
      "label",
      "variant",
      "visibleLabel"
    ]);
    const [hovered, setHovered] = React7.useState(false);
    const [focused, setFocused] = React7.useState(false);
    handleLinkValidation({ as, href });
    return variant === "back" ? /* @__PURE__ */ React7.createElement(
      PaginationBackArrow,
      __spreadProps(__spreadValues({}, props), {
        element,
        ref,
        as,
        disabled,
        href,
        isFocused: focused,
        isHovered: hovered,
        label,
        variant,
        visibleLabel,
        onMouseEnter: (event) => {
          if (typeof props.onMouseEnter === "function") {
            props.onMouseEnter(event);
          }
          setHovered(true);
        },
        onMouseLeave: (event) => {
          if (typeof props.onMouseLeave === "function") {
            props.onMouseLeave(event);
          }
          setHovered(false);
        },
        onFocus: (event) => {
          if (typeof props.onFocus === "function") {
            props.onFocus(event);
          }
          setFocused(true);
        },
        onBlur: (event) => {
          if (typeof props.onBlur === "function") {
            props.onBlur(event);
          }
          setFocused(false);
        }
      })
    ) : /* @__PURE__ */ React7.createElement(
      PaginationForwardArrow,
      __spreadProps(__spreadValues({}, props), {
        element,
        ref,
        as,
        disabled,
        href,
        isFocused: focused,
        isHovered: hovered,
        label,
        variant,
        visibleLabel,
        onMouseEnter: (event) => {
          if (typeof props.onMouseEnter === "function") {
            props.onMouseEnter(event);
          }
          setHovered(true);
        },
        onMouseLeave: (event) => {
          if (typeof props.onMouseLeave === "function") {
            props.onMouseLeave(event);
          }
          setHovered(false);
        },
        onFocus: (event) => {
          if (typeof props.onFocus === "function") {
            props.onFocus(event);
          }
          setFocused(true);
        },
        onBlur: (event) => {
          if (typeof props.onBlur === "function") {
            props.onBlur(event);
          }
          setFocused(false);
        }
      })
    );
  }
);
PaginationArrow.displayName = "PaginationArrow";
PaginationArrow.propTypes = PaginationArrowPropTypes;

// src/PaginationLabel.tsx
var React8 = __toESM(require("react"));
var import_text3 = require("@twilio-paste/text");
var PaginationLabel = React8.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "PAGINATION_LABEL" } = _b, props = __objRest(_b, ["children", "element"]);
    return /* @__PURE__ */ React8.createElement(
      import_text3.Text,
      __spreadProps(__spreadValues({}, (0, import_text3.safelySpreadTextProps)(props)), {
        ref,
        element,
        as: "div",
        color: "colorTextWeak",
        paddingBottom: "space20",
        paddingTop: "space20",
        textAlign: "center"
      }),
      children
    );
  }
);
PaginationLabel.displayName = "PaginationLabel";
PaginationLabel.propTypes = PaginationLabelPropTypes;

// src/PaginationEllipsis.tsx
var React9 = __toESM(require("react"));
var import_text4 = require("@twilio-paste/text");
var PaginationEllipsis = React9.forwardRef(
  (_a, ref) => {
    var _b = _a, { label, element = "PAGINATION_ELLIPSIS" } = _b, props = __objRest(_b, ["label", "element"]);
    return /* @__PURE__ */ React9.createElement(
      import_text4.Text,
      __spreadProps(__spreadValues({}, (0, import_text4.safelySpreadTextProps)(props)), {
        ref,
        element,
        "aria-label": label,
        as: "span",
        display: "inline-block",
        paddingBottom: "space20",
        paddingLeft: "space30",
        paddingRight: "space30",
        paddingTop: "space20"
      }),
      "\u2026"
    );
  }
);
PaginationEllipsis.displayName = "PaginationEllipsis";
PaginationEllipsis.propTypes = PaginationEllipsisPropTypes;

// src/PaginationNumber.tsx
var React10 = __toESM(require("react"));
var import_box5 = require("@twilio-paste/box");
var import_text5 = require("@twilio-paste/text");
var PaginationNumber = React10.forwardRef(
  (_a, ref) => {
    var _b = _a, { as = "button", element = "PAGINATION_NUMBER", children, href, isCurrent, label } = _b, props = __objRest(_b, ["as", "element", "children", "href", "isCurrent", "label"]);
    handleLinkValidation({ as, href });
    return /* @__PURE__ */ React10.createElement(
      import_box5.Box,
      __spreadProps(__spreadValues({}, (0, import_box5.safelySpreadBoxProps)(props)), {
        ref,
        element,
        "aria-label": label,
        "aria-current": isCurrent,
        as,
        href,
        appearance: "none",
        background: "none",
        backgroundColor: isCurrent ? "colorBackgroundPrimaryStronger" : "transparent",
        borderColor: "transparent",
        borderRadius: "borderRadius10",
        borderStyle: "solid",
        borderWidth: "borderWidth10",
        color: isCurrent ? "colorTextWeakest" : "colorText",
        display: "inline-block",
        fontFamily: "inherit",
        fontSize: "fontSize30",
        fontVariantNumeric: "tabular-nums",
        fontWeight: "fontWeightNormal",
        lineHeight: "lineHeight30",
        margin: "space0",
        outline: "none",
        paddingBottom: "space20",
        paddingLeft: "space30",
        paddingRight: "space30",
        paddingTop: "space20",
        position: "relative",
        textDecoration: "none",
        transition: "background-color 100ms ease-in, border-color 100ms ease-in, box-shadow 100ms ease-in, color 100ms ease-in",
        _hover: {
          backgroundColor: isCurrent ? "colorBackgroundPrimaryStronger" : "colorBackgroundPrimaryWeakest",
          borderColor: isCurrent ? "transparent" : "colorBorderPrimaryStronger",
          color: isCurrent ? "colorTextWeakest" : "colorTextLinkStronger",
          cursor: "pointer",
          textDecoration: "none"
        },
        _focus: {
          backgroundColor: isCurrent ? "colorBackgroundPrimaryStronger" : "colorBackgroundPrimaryWeakest",
          borderColor: isCurrent ? "transparent" : "colorBorderPrimaryStronger",
          boxShadow: "shadowFocus",
          color: isCurrent ? "colorTextWeakest" : "colorTextLinkStronger",
          textDecoration: "none"
        },
        _active: { textDecoration: "none" }
      }),
      children ? /* @__PURE__ */ React10.createElement(import_text5.Text, { "aria-hidden": "true", as: "span", color: "inherit", element: `${element}_TEXT` }, children) : null
    );
  }
);
PaginationNumber.displayName = "PaginationNumber";
PaginationNumber.propTypes = PaginationNumberPropTypes;

// src/PaginationNumbers.tsx
var React11 = __toESM(require("react"));
var import_uid_library2 = require("@twilio-paste/uid-library");
var import_box6 = require("@twilio-paste/box");
var PaginationNumbers = React11.forwardRef(
  (_a, ref) => {
    var _b = _a, { children, element = "PAGINATION_NUMBERS", pageLabel } = _b, props = __objRest(_b, ["children", "element", "pageLabel"]);
    const [validChildren] = React11.useMemo(
      () => [React11.Children.toArray(children).filter((child) => React11.isValidElement(child))],
      [children]
    );
    const keySeed = (0, import_uid_library2.useUIDSeed)();
    return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(
      import_box6.Box,
      __spreadProps(__spreadValues(__spreadValues({}, ULStyles), (0, import_box6.safelySpreadBoxProps)(props)), {
        element,
        ref,
        as: "ul",
        justifyContent: "center",
        paddingLeft: "space40",
        paddingRight: "space40",
        width: "100%"
      }),
      validChildren.map((child, index) => {
        return /* @__PURE__ */ React11.createElement(
          import_box6.Box,
          __spreadProps(__spreadValues({}, LIStyles), {
            key: keySeed(`pagination-numbers-${index}`),
            element: `${element}_ITEM`,
            as: "li",
            marginRight: "space30",
            _last: {
              marginRight: "space0"
            }
          }),
          child
        );
      })
    ), pageLabel ? /* @__PURE__ */ React11.createElement(PaginationLabel, null, pageLabel) : null);
  }
);
PaginationNumbers.displayName = "PaginationNumbers";
PaginationNumbers.propTypes = PaginationNumbersPropTypes;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Pagination,
  PaginationArrow,
  PaginationEllipsis,
  PaginationItems,
  PaginationLabel,
  PaginationNumber,
  PaginationNumbers
});
