import * as React from 'react';
import type { BoxProps, BoxStyleProps } from '@twilio-paste/box';
import type { HeadingProps } from '@twilio-paste/heading';
import type { DisclosurePrimitiveProps } from '@twilio-paste/disclosure-primitive';
import type { DisclosureVariants } from './types';
export interface StyledDisclosureHeadingProps extends Omit<DisclosureHeadingProps, 'as'>, Pick<BoxProps, 'element'> {
    renderAs: HeadingProps['as'];
    customDisabled?: boolean;
    customFocusable?: boolean;
    disclosureVariant: DisclosureVariants;
    element: string;
    isHovered: boolean;
    isDisabled: boolean;
    setIsHovered: (value: boolean) => void;
    setIsDisabled: (value: boolean) => void;
}
export interface DisclosureHeadingProps extends Omit<DisclosurePrimitiveProps, 'baseId' | 'toggle' | keyof BoxStyleProps>, Pick<BoxProps, 'element'> {
    children: NonNullable<React.ReactNode>;
    as: HeadingProps['as'];
    marginBottom?: HeadingProps['marginBottom'];
    variant: HeadingProps['variant'];
}
declare const DisclosureHeading: React.FC<DisclosureHeadingProps>;
export { DisclosureHeading };
//# sourceMappingURL=DisclosureHeading.d.ts.map