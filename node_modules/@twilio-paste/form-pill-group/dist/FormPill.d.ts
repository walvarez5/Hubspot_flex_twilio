import * as React from 'react';
import type { BoxProps } from '@twilio-paste/box';
import type { CompositeStateReturn } from '@twilio-paste/reakit-library';
import type { PillVariant } from './types';
interface FormPillProps extends CompositeStateReturn, Pick<BoxProps, 'element'> {
    selected?: boolean;
    disabled?: boolean;
    children: React.ReactNode;
    variant?: PillVariant;
    /** Event handler to respond to selection events */
    onSelect?: (event: React.MouseEvent<HTMLButtonElement>) => void;
    /** Event handler to respond to dismiss events */
    onDismiss?: (event: React.MouseEvent<Element> | React.KeyboardEvent<Element>) => void;
    /** Event handler to respond to focus events */
    onFocus?: () => void;
    /** Event handler to respond to blur events */
    onBlur?: () => void;
    i18nErrorLabel?: string;
}
/**
 * FormPill represents and entity inside of a data collection. It is used as a child of FormPillGroup and should be used
 * in conjunction with the useFormPillGroupState hook
 *
 * @example
 * <FormPill
 *  {...pillState}
 *  onDismiss={() => {
 *    console.log('removed the first pill');
 *  }}
 *  onSelect={() => {}}
 *  onFocus={() => {}}
 *  onBlur={() => {}}
 * >
 *
 * @see https://paste.twilio.design/components/form-pill-group
 */
export declare const FormPill: React.ForwardRefExoticComponent<FormPillProps & React.RefAttributes<HTMLElement>>;
export {};
//# sourceMappingURL=FormPill.d.ts.map