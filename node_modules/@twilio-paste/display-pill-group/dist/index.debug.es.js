var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/DisplayPill.tsx
import * as React from "react";
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
import { secureExternalLink } from "@twilio-paste/anchor";
var DisplayPill = React.forwardRef((_a, ref) => {
  var _b = _a, { element = "DISPLAY_PILL" } = _b, props = __objRest(_b, ["element"]);
  return /* @__PURE__ */ React.createElement(Box, {
    as: "li",
    listStyleType: "none"
  }, /* @__PURE__ */ React.createElement(Box, __spreadProps(__spreadValues(__spreadValues({}, safelySpreadBoxProps(props)), props.href ? secureExternalLink(props.href) : {}), {
    ref,
    element,
    as: props.href ? "a" : "div",
    alignItems: "center",
    backgroundColor: "colorBackgroundStrong",
    borderRadius: "borderRadiusPill",
    color: "colorText",
    columnGap: "space20",
    cursor: props.href ? "pointer" : "default",
    display: "flex",
    fontSize: "fontSize20",
    fontWeight: "fontWeightSemibold",
    lineHeight: "lineHeight10",
    paddingX: "space30",
    paddingY: "space20",
    outline: "none",
    _hover: {
      textDecoration: "none"
    },
    _focus: {
      boxShadow: "shadowFocus",
      textDecoration: "none"
    }
  }), props.children));
});
DisplayPill.displayName = "DisplayPill";

// src/DisplayPillGroup.tsx
import * as React2 from "react";
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
var DisplayPillGroup = React2.forwardRef((_a, ref) => {
  var _b = _a, { element = "DISPLAY_PILL_GROUP" } = _b, props = __objRest(_b, ["element"]);
  return /* @__PURE__ */ React2.createElement(Box2, __spreadProps(__spreadValues({}, safelySpreadBoxProps2(props)), {
    element,
    ref,
    as: "ul",
    margin: "space0",
    padding: "space0",
    display: "flex",
    flexWrap: "wrap",
    rowGap: "space20",
    columnGap: "space20"
  }), props.children);
});
DisplayPillGroup.displayName = "DisplayPillGroup";
export {
  DisplayPill,
  DisplayPillGroup
};
