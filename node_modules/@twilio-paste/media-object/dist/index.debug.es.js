var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// src/MediaObject.tsx
import * as React from "react";
import PropTypes from "prop-types";
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
var MediaObject = React.forwardRef(
  (_a, ref) => {
    var _b = _a, { as = "span", children, element = "MEDIA_OBJECT", marginBottom, marginTop, verticalAlign = "top" } = _b, props = __objRest(_b, ["as", "children", "element", "marginBottom", "marginTop", "verticalAlign"]);
    return /* @__PURE__ */ React.createElement(
      Box,
      __spreadProps(__spreadValues({}, safelySpreadBoxProps(props)), {
        alignItems: verticalAlign === "top" ? "flex-start" : "center",
        as,
        display: "flex",
        element,
        marginBottom,
        marginTop,
        ref
      }),
      children
    );
  }
);
MediaObject.displayName = "MediaObject";
MediaObject.propTypes = {
  children: PropTypes.node.isRequired,
  verticalAlign: PropTypes.oneOf(["center", "top"])
};

// src/MediaFigure.tsx
import * as React2 from "react";
import PropTypes2 from "prop-types";
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
import { isMarginTokenProp } from "@twilio-paste/style-props";
var MediaFigure = React2.forwardRef(
  (_a, ref) => {
    var _b = _a, { align = "start", as = "span", children, element = "MEDIA_FIGURE", spacing = "space0" } = _b, props = __objRest(_b, ["align", "as", "children", "element", "spacing"]);
    return /* @__PURE__ */ React2.createElement(
      Box2,
      __spreadProps(__spreadValues({}, safelySpreadBoxProps2(props)), {
        as,
        display: "flex",
        element,
        flexShrink: 0,
        marginLeft: align === "end" ? spacing : void 0,
        marginRight: align === "start" ? spacing : void 0,
        ref
      }),
      children
    );
  }
);
MediaFigure.displayName = "MediaFigure";
MediaFigure.propTypes = {
  align: PropTypes2.oneOf(["start", "end"]),
  children: PropTypes2.node.isRequired,
  spacing: isMarginTokenProp
};

// src/MediaBody.tsx
import * as React3 from "react";
import PropTypes3 from "prop-types";
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
var MediaBody = React3.forwardRef(
  (_a, ref) => {
    var _b = _a, { as = "span", children, element = "MEDIA_BODY" } = _b, props = __objRest(_b, ["as", "children", "element"]);
    return /* @__PURE__ */ React3.createElement(Box3, __spreadProps(__spreadValues({}, safelySpreadBoxProps3(props)), { as, element, flex: 1, minWidth: "size0", ref }), children);
  }
);
MediaBody.displayName = "MediaBody";
MediaBody.propTypes = {
  children: PropTypes3.node.isRequired
};
export {
  MediaBody,
  MediaFigure,
  MediaObject
};
