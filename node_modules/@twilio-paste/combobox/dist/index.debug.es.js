var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));

// ../../../../node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "../../../../node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// ../../../../node_modules/lodash/eq.js
var require_eq = __commonJS({
  "../../../../node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// ../../../../node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "../../../../node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// ../../../../node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "../../../../node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// ../../../../node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "../../../../node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// ../../../../node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "../../../../node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// ../../../../node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "../../../../node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// ../../../../node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "../../../../node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// ../../../../node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "../../../../node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// ../../../../node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "../../../../node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// ../../../../node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "../../../../node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// ../../../../node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "../../../../node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// ../../../../node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "../../../../node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// ../../../../node_modules/lodash/_root.js
var require_root = __commonJS({
  "../../../../node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// ../../../../node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "../../../../node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol = root.Symbol;
    module.exports = Symbol;
  }
});

// ../../../../node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "../../../../node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol ? Symbol.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// ../../../../node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "../../../../node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// ../../../../node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "../../../../node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol ? Symbol.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// ../../../../node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "../../../../node_modules/lodash/isObject.js"(exports, module) {
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// ../../../../node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "../../../../node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// ../../../../node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "../../../../node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// ../../../../node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "../../../../node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func2) {
      return !!maskSrcKey && maskSrcKey in func2;
    }
    module.exports = isMasked;
  }
});

// ../../../../node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "../../../../node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func2) {
      if (func2 != null) {
        try {
          return funcToString.call(func2);
        } catch (e) {
        }
        try {
          return func2 + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// ../../../../node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "../../../../node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// ../../../../node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "../../../../node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object2, key) {
      return object2 == null ? void 0 : object2[key];
    }
    module.exports = getValue;
  }
});

// ../../../../node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "../../../../node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object2, key) {
      var value = getValue(object2, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// ../../../../node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "../../../../node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// ../../../../node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "../../../../node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// ../../../../node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "../../../../node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// ../../../../node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "../../../../node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// ../../../../node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "../../../../node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// ../../../../node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "../../../../node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// ../../../../node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "../../../../node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// ../../../../node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "../../../../node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// ../../../../node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "../../../../node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// ../../../../node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "../../../../node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// ../../../../node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "../../../../node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// ../../../../node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "../../../../node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// ../../../../node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "../../../../node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// ../../../../node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "../../../../node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// ../../../../node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "../../../../node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// ../../../../node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "../../../../node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// ../../../../node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "../../../../node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// ../../../../node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "../../../../node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// ../../../../node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "../../../../node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// ../../../../node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "../../../../node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// ../../../../node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "../../../../node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// ../../../../node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "../../../../node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// ../../../../node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "../../../../node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    module.exports = cacheHas;
  }
});

// ../../../../node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "../../../../node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// ../../../../node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "../../../../node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array2 = root.Uint8Array;
    module.exports = Uint8Array2;
  }
});

// ../../../../node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "../../../../node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// ../../../../node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "../../../../node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// ../../../../node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "../../../../node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol = require_Symbol();
    var Uint8Array2 = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object2, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object2.byteLength != other.byteLength || object2.byteOffset != other.byteOffset) {
            return false;
          }
          object2 = object2.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object2.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object2), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object2, +other);
        case errorTag:
          return object2.name == other.name && object2.message == other.message;
        case regexpTag:
        case stringTag:
          return object2 == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object2.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object2);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object2, other);
          var result = equalArrays(convert(object2), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object2);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object2) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// ../../../../node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "../../../../node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// ../../../../node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "../../../../node_modules/lodash/isArray.js"(exports, module) {
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// ../../../../node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "../../../../node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object2, keysFunc, symbolsFunc) {
      var result = keysFunc(object2);
      return isArray(object2) ? result : arrayPush(result, symbolsFunc(object2));
    }
    module.exports = baseGetAllKeys;
  }
});

// ../../../../node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "../../../../node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// ../../../../node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "../../../../node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// ../../../../node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "../../../../node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object2) {
      if (object2 == null) {
        return [];
      }
      object2 = Object(object2);
      return arrayFilter(nativeGetSymbols(object2), function(symbol) {
        return propertyIsEnumerable.call(object2, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// ../../../../node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "../../../../node_modules/lodash/_baseTimes.js"(exports, module) {
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// ../../../../node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "../../../../node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// ../../../../node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "../../../../node_modules/lodash/_baseIsArguments.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// ../../../../node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "../../../../node_modules/lodash/isArguments.js"(exports, module) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// ../../../../node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "../../../../node_modules/lodash/stubFalse.js"(exports, module) {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// ../../../../node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "../../../../node_modules/lodash/isBuffer.js"(exports, module) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// ../../../../node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "../../../../node_modules/lodash/_isIndex.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// ../../../../node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "../../../../node_modules/lodash/isLength.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// ../../../../node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "../../../../node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// ../../../../node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "../../../../node_modules/lodash/_baseUnary.js"(exports, module) {
    function baseUnary(func2) {
      return function(value) {
        return func2(value);
      };
    }
    module.exports = baseUnary;
  }
});

// ../../../../node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "../../../../node_modules/lodash/_nodeUtil.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// ../../../../node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "../../../../node_modules/lodash/isTypedArray.js"(exports, module) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// ../../../../node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "../../../../node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// ../../../../node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "../../../../node_modules/lodash/_isPrototype.js"(exports, module) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// ../../../../node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "../../../../node_modules/lodash/_overArg.js"(exports, module) {
    function overArg(func2, transform) {
      return function(arg) {
        return func2(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// ../../../../node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "../../../../node_modules/lodash/_nativeKeys.js"(exports, module) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// ../../../../node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "../../../../node_modules/lodash/_baseKeys.js"(exports, module) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object2) {
      if (!isPrototype(object2)) {
        return nativeKeys(object2);
      }
      var result = [];
      for (var key in Object(object2)) {
        if (hasOwnProperty.call(object2, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// ../../../../node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "../../../../node_modules/lodash/isArrayLike.js"(exports, module) {
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// ../../../../node_modules/lodash/keys.js
var require_keys = __commonJS({
  "../../../../node_modules/lodash/keys.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object2) {
      return isArrayLike(object2) ? arrayLikeKeys(object2) : baseKeys(object2);
    }
    module.exports = keys;
  }
});

// ../../../../node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "../../../../node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object2) {
      return baseGetAllKeys(object2, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// ../../../../node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "../../../../node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object2, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object2), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object2);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object2;
      }
      var result = true;
      stack.set(object2, other);
      stack.set(other, object2);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object2[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object2, stack) : customizer(objValue, othValue, key, object2, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object2.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object2 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object2);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// ../../../../node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "../../../../node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module.exports = DataView;
  }
});

// ../../../../node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "../../../../node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// ../../../../node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "../../../../node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set = getNative(root, "Set");
    module.exports = Set;
  }
});

// ../../../../node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "../../../../node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap = getNative(root, "WeakMap");
    module.exports = WeakMap;
  }
});

// ../../../../node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "../../../../node_modules/lodash/_getTag.js"(exports, module) {
    var DataView = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set = require_Set();
    var WeakMap = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set);
    var weakMapCtorString = toSource(WeakMap);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// ../../../../node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "../../../../node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object2, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object2), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object2), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object2)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object2) ? equalArrays(object2, other, bitmask, customizer, equalFunc, stack) : equalByTag(object2, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object2, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object2.value() : object2, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object2, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// ../../../../node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "../../../../node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// ../../../../node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "../../../../node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object2, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object2 == null) {
        return !length;
      }
      object2 = Object(object2);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object2[data[0]] : !(data[0] in object2)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object2[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object2)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object2, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// ../../../../node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "../../../../node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// ../../../../node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "../../../../node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object2) {
      var result = keys(object2), length = result.length;
      while (length--) {
        var key = result[length], value = object2[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// ../../../../node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "../../../../node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object2) {
        if (object2 == null) {
          return false;
        }
        return object2[key] === srcValue && (srcValue !== void 0 || key in Object(object2));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// ../../../../node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "../../../../node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object2) {
        return object2 === source || baseIsMatch(object2, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// ../../../../node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "../../../../node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// ../../../../node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "../../../../node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object2) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object2 != null && value in Object(object2);
    }
    module.exports = isKey;
  }
});

// ../../../../node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "../../../../node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func2, resolver) {
      if (typeof func2 != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func2.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// ../../../../node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "../../../../node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func2) {
      var result = memoize(func2, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });
      var cache = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// ../../../../node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "../../../../node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string4) {
      var result = [];
      if (string4.charCodeAt(0) === 46) {
        result.push("");
      }
      string4.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// ../../../../node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "../../../../node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// ../../../../node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "../../../../node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// ../../../../node_modules/lodash/toString.js
var require_toString = __commonJS({
  "../../../../node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString;
  }
});

// ../../../../node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "../../../../node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object2) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object2) ? [value] : stringToPath(toString(value));
    }
    module.exports = castPath;
  }
});

// ../../../../node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "../../../../node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// ../../../../node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "../../../../node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object2, path) {
      path = castPath(path, object2);
      var index = 0, length = path.length;
      while (object2 != null && index < length) {
        object2 = object2[toKey(path[index++])];
      }
      return index && index == length ? object2 : void 0;
    }
    module.exports = baseGet;
  }
});

// ../../../../node_modules/lodash/get.js
var require_get = __commonJS({
  "../../../../node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get(object2, path, defaultValue) {
      var result = object2 == null ? void 0 : baseGet(object2, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// ../../../../node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "../../../../node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object2, key) {
      return object2 != null && key in Object(object2);
    }
    module.exports = baseHasIn;
  }
});

// ../../../../node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "../../../../node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object2, path, hasFunc) {
      path = castPath(path, object2);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object2 != null && hasFunc(object2, key))) {
          break;
        }
        object2 = object2[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object2 == null ? 0 : object2.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object2) || isArguments(object2));
    }
    module.exports = hasPath;
  }
});

// ../../../../node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "../../../../node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object2, path) {
      return object2 != null && hasPath(object2, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// ../../../../node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "../../../../node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object2) {
        var objValue = get(object2, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object2, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// ../../../../node_modules/lodash/identity.js
var require_identity = __commonJS({
  "../../../../node_modules/lodash/identity.js"(exports, module) {
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// ../../../../node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "../../../../node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object2) {
        return object2 == null ? void 0 : object2[key];
      };
    }
    module.exports = baseProperty;
  }
});

// ../../../../node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "../../../../node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object2) {
        return baseGet(object2, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// ../../../../node_modules/lodash/property.js
var require_property = __commonJS({
  "../../../../node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// ../../../../node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "../../../../node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// ../../../../node_modules/lodash/_createFind.js
var require_createFind = __commonJS({
  "../../../../node_modules/lodash/_createFind.js"(exports, module) {
    var baseIteratee = require_baseIteratee();
    var isArrayLike = require_isArrayLike();
    var keys = require_keys();
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = baseIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) {
            return iteratee(iterable[key], key, iterable);
          };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : void 0;
      };
    }
    module.exports = createFind;
  }
});

// ../../../../node_modules/lodash/_baseFindIndex.js
var require_baseFindIndex = __commonJS({
  "../../../../node_modules/lodash/_baseFindIndex.js"(exports, module) {
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  }
});

// ../../../../node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "../../../../node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string4) {
      var index = string4.length;
      while (index-- && reWhitespace.test(string4.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// ../../../../node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "../../../../node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string4) {
      return string4 ? string4.slice(0, trimmedEndIndex(string4) + 1).replace(reTrimStart, "") : string4;
    }
    module.exports = baseTrim;
  }
});

// ../../../../node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "../../../../node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// ../../../../node_modules/lodash/toFinite.js
var require_toFinite = __commonJS({
  "../../../../node_modules/lodash/toFinite.js"(exports, module) {
    var toNumber = require_toNumber();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    module.exports = toFinite;
  }
});

// ../../../../node_modules/lodash/toInteger.js
var require_toInteger = __commonJS({
  "../../../../node_modules/lodash/toInteger.js"(exports, module) {
    var toFinite = require_toFinite();
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    module.exports = toInteger;
  }
});

// ../../../../node_modules/lodash/findIndex.js
var require_findIndex = __commonJS({
  "../../../../node_modules/lodash/findIndex.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIteratee = require_baseIteratee();
    var toInteger = require_toInteger();
    var nativeMax = Math.max;
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, baseIteratee(predicate, 3), index);
    }
    module.exports = findIndex;
  }
});

// ../../../../node_modules/lodash/find.js
var require_find = __commonJS({
  "../../../../node_modules/lodash/find.js"(exports, module) {
    var createFind = require_createFind();
    var findIndex = require_findIndex();
    var find2 = createFind(findIndex);
    module.exports = find2;
  }
});

// ../../../../node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "../../../../node_modules/lodash/_defineProperty.js"(exports, module) {
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func2 = getNative(Object, "defineProperty");
        func2({}, "", {});
        return func2;
      } catch (e) {
      }
    }();
    module.exports = defineProperty;
  }
});

// ../../../../node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "../../../../node_modules/lodash/_baseAssignValue.js"(exports, module) {
    var defineProperty = require_defineProperty();
    function baseAssignValue(object2, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object2, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object2[key] = value;
      }
    }
    module.exports = baseAssignValue;
  }
});

// ../../../../node_modules/lodash/_arrayAggregator.js
var require_arrayAggregator = __commonJS({
  "../../../../node_modules/lodash/_arrayAggregator.js"(exports, module) {
    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }
      return accumulator;
    }
    module.exports = arrayAggregator;
  }
});

// ../../../../node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "../../../../node_modules/lodash/_createBaseFor.js"(exports, module) {
    function createBaseFor(fromRight) {
      return function(object2, iteratee, keysFunc) {
        var index = -1, iterable = Object(object2), props2 = keysFunc(object2), length = props2.length;
        while (length--) {
          var key = props2[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object2;
      };
    }
    module.exports = createBaseFor;
  }
});

// ../../../../node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "../../../../node_modules/lodash/_baseFor.js"(exports, module) {
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  }
});

// ../../../../node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "../../../../node_modules/lodash/_baseForOwn.js"(exports, module) {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object2, iteratee) {
      return object2 && baseFor(object2, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// ../../../../node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "../../../../node_modules/lodash/_createBaseEach.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  }
});

// ../../../../node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "../../../../node_modules/lodash/_baseEach.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  }
});

// ../../../../node_modules/lodash/_baseAggregator.js
var require_baseAggregator = __commonJS({
  "../../../../node_modules/lodash/_baseAggregator.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection2) {
        setter(accumulator, value, iteratee(value), collection2);
      });
      return accumulator;
    }
    module.exports = baseAggregator;
  }
});

// ../../../../node_modules/lodash/_createAggregator.js
var require_createAggregator = __commonJS({
  "../../../../node_modules/lodash/_createAggregator.js"(exports, module) {
    var arrayAggregator = require_arrayAggregator();
    var baseAggregator = require_baseAggregator();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func2 = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
        return func2(collection, setter, baseIteratee(iteratee, 2), accumulator);
      };
    }
    module.exports = createAggregator;
  }
});

// ../../../../node_modules/lodash/groupBy.js
var require_groupBy = __commonJS({
  "../../../../node_modules/lodash/groupBy.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var createAggregator = require_createAggregator();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var groupBy2 = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });
    module.exports = groupBy2;
  }
});

// ../../../../node_modules/lodash/isEmpty.js
var require_isEmpty = __commonJS({
  "../../../../node_modules/lodash/isEmpty.js"(exports, module) {
    var baseKeys = require_baseKeys();
    var getTag = require_getTag();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isArrayLike = require_isArrayLike();
    var isBuffer = require_isBuffer();
    var isPrototype = require_isPrototype();
    var isTypedArray = require_isTypedArray();
    var mapTag = "[object Map]";
    var setTag = "[object Set]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function isEmpty2(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) && (isArray(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }
    module.exports = isEmpty2;
  }
});

// ../../../../node_modules/lodash/_baseIsNaN.js
var require_baseIsNaN = __commonJS({
  "../../../../node_modules/lodash/_baseIsNaN.js"(exports, module) {
    function baseIsNaN(value) {
      return value !== value;
    }
    module.exports = baseIsNaN;
  }
});

// ../../../../node_modules/lodash/_strictIndexOf.js
var require_strictIndexOf = __commonJS({
  "../../../../node_modules/lodash/_strictIndexOf.js"(exports, module) {
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    module.exports = strictIndexOf;
  }
});

// ../../../../node_modules/lodash/_baseIndexOf.js
var require_baseIndexOf = __commonJS({
  "../../../../node_modules/lodash/_baseIndexOf.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIsNaN = require_baseIsNaN();
    var strictIndexOf = require_strictIndexOf();
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    module.exports = baseIndexOf;
  }
});

// ../../../../node_modules/lodash/isString.js
var require_isString = __commonJS({
  "../../../../node_modules/lodash/isString.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isArray = require_isArray();
    var isObjectLike = require_isObjectLike();
    var stringTag = "[object String]";
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }
    module.exports = isString;
  }
});

// ../../../../node_modules/lodash/_baseValues.js
var require_baseValues = __commonJS({
  "../../../../node_modules/lodash/_baseValues.js"(exports, module) {
    var arrayMap = require_arrayMap();
    function baseValues(object2, props2) {
      return arrayMap(props2, function(key) {
        return object2[key];
      });
    }
    module.exports = baseValues;
  }
});

// ../../../../node_modules/lodash/values.js
var require_values = __commonJS({
  "../../../../node_modules/lodash/values.js"(exports, module) {
    var baseValues = require_baseValues();
    var keys = require_keys();
    function values(object2) {
      return object2 == null ? [] : baseValues(object2, keys(object2));
    }
    module.exports = values;
  }
});

// ../../../../node_modules/lodash/includes.js
var require_includes = __commonJS({
  "../../../../node_modules/lodash/includes.js"(exports, module) {
    var baseIndexOf = require_baseIndexOf();
    var isArrayLike = require_isArrayLike();
    var isString = require_isString();
    var toInteger = require_toInteger();
    var values = require_values();
    var nativeMax = Math.max;
    function includes2(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
    }
    module.exports = includes2;
  }
});

// src/index.tsx
import { useComboboxPrimitive as useComboboxPrimitive3 } from "@twilio-paste/combobox-primitive";

// src/singleselect/Combobox.tsx
import * as React9 from "react";
import * as PropTypes4 from "prop-types";

// ../../../../node_modules/react-virtual/dist/react-virtual.mjs
import React from "react";
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var props = ["bottom", "height", "left", "right", "top", "width"];
var rectChanged = function rectChanged2(a, b) {
  if (a === void 0) {
    a = {};
  }
  if (b === void 0) {
    b = {};
  }
  return props.some(function(prop) {
    return a[prop] !== b[prop];
  });
};
var observedNodes = /* @__PURE__ */ new Map();
var rafId;
var run = function run2() {
  var changedStates = [];
  observedNodes.forEach(function(state, node5) {
    var newRect = node5.getBoundingClientRect();
    if (rectChanged(newRect, state.rect)) {
      state.rect = newRect;
      changedStates.push(state);
    }
  });
  changedStates.forEach(function(state) {
    state.callbacks.forEach(function(cb) {
      return cb(state.rect);
    });
  });
  rafId = window.requestAnimationFrame(run2);
};
function observeRect(node5, cb) {
  return {
    observe: function observe() {
      var wasEmpty = observedNodes.size === 0;
      if (observedNodes.has(node5)) {
        observedNodes.get(node5).callbacks.push(cb);
      } else {
        observedNodes.set(node5, {
          rect: void 0,
          hasRectChanged: false,
          callbacks: [cb]
        });
      }
      if (wasEmpty)
        run();
    },
    unobserve: function unobserve() {
      var state = observedNodes.get(node5);
      if (state) {
        var index = state.callbacks.indexOf(cb);
        if (index >= 0)
          state.callbacks.splice(index, 1);
        if (!state.callbacks.length)
          observedNodes["delete"](node5);
        if (!observedNodes.size)
          cancelAnimationFrame(rafId);
      }
    }
  };
}
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? React.useLayoutEffect : React.useEffect;
function useRect(nodeRef, initialRect) {
  if (initialRect === void 0) {
    initialRect = {
      width: 0,
      height: 0
    };
  }
  var _React$useState = React.useState(nodeRef.current), element = _React$useState[0], setElement = _React$useState[1];
  var _React$useReducer = React.useReducer(rectReducer, initialRect), rect = _React$useReducer[0], dispatch = _React$useReducer[1];
  var initialRectSet = React.useRef(false);
  useIsomorphicLayoutEffect(function() {
    if (nodeRef.current !== element) {
      setElement(nodeRef.current);
    }
  });
  useIsomorphicLayoutEffect(function() {
    if (element && !initialRectSet.current) {
      initialRectSet.current = true;
      var _rect = element.getBoundingClientRect();
      dispatch({
        rect: _rect
      });
    }
  }, [element]);
  React.useEffect(function() {
    if (!element) {
      return;
    }
    var observer = observeRect(element, function(rect2) {
      dispatch({
        rect: rect2
      });
    });
    observer.observe();
    return function() {
      observer.unobserve();
    };
  }, [element]);
  return rect;
}
function rectReducer(state, action) {
  var rect = action.rect;
  if (state.height !== rect.height || state.width !== rect.width) {
    return rect;
  }
  return state;
}
var defaultEstimateSize = function defaultEstimateSize2() {
  return 50;
};
var defaultKeyExtractor = function defaultKeyExtractor2(index) {
  return index;
};
var defaultMeasureSize = function defaultMeasureSize2(el, horizontal) {
  var key = horizontal ? "offsetWidth" : "offsetHeight";
  return el[key];
};
var defaultRangeExtractor = function defaultRangeExtractor2(range) {
  var start = Math.max(range.start - range.overscan, 0);
  var end = Math.min(range.end + range.overscan, range.size - 1);
  var arr = [];
  for (var i = start; i <= end; i++) {
    arr.push(i);
  }
  return arr;
};
function useVirtual(_ref) {
  var _measurements;
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 0 : _ref$size, _ref$estimateSize = _ref.estimateSize, estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize, _ref$overscan = _ref.overscan, overscan = _ref$overscan === void 0 ? 1 : _ref$overscan, _ref$paddingStart = _ref.paddingStart, paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart, _ref$paddingEnd = _ref.paddingEnd, paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd, parentRef = _ref.parentRef, horizontal = _ref.horizontal, scrollToFn = _ref.scrollToFn, useObserver = _ref.useObserver, initialRect = _ref.initialRect, onScrollElement = _ref.onScrollElement, scrollOffsetFn = _ref.scrollOffsetFn, _ref$keyExtractor = _ref.keyExtractor, keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor, _ref$measureSize = _ref.measureSize, measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize, _ref$rangeExtractor = _ref.rangeExtractor, rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;
  var sizeKey = horizontal ? "width" : "height";
  var scrollKey = horizontal ? "scrollLeft" : "scrollTop";
  var latestRef = React.useRef({
    scrollOffset: 0,
    measurements: []
  });
  var _React$useState = React.useState(0), scrollOffset = _React$useState[0], setScrollOffset = _React$useState[1];
  latestRef.current.scrollOffset = scrollOffset;
  var useMeasureParent = useObserver || useRect;
  var _useMeasureParent = useMeasureParent(parentRef, initialRect), outerSize = _useMeasureParent[sizeKey];
  latestRef.current.outerSize = outerSize;
  var defaultScrollToFn = React.useCallback(function(offset) {
    if (parentRef.current) {
      parentRef.current[scrollKey] = offset;
    }
  }, [parentRef, scrollKey]);
  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;
  scrollToFn = React.useCallback(function(offset) {
    resolvedScrollToFn(offset, defaultScrollToFn);
  }, [defaultScrollToFn, resolvedScrollToFn]);
  var _React$useState2 = React.useState({}), measuredCache = _React$useState2[0], setMeasuredCache = _React$useState2[1];
  var measure = React.useCallback(function() {
    return setMeasuredCache({});
  }, []);
  var pendingMeasuredCacheIndexesRef = React.useRef([]);
  var measurements = React.useMemo(function() {
    var min = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;
    pendingMeasuredCacheIndexesRef.current = [];
    var measurements2 = latestRef.current.measurements.slice(0, min);
    for (var i = min; i < size; i++) {
      var key = keyExtractor(i);
      var measuredSize = measuredCache[key];
      var _start = measurements2[i - 1] ? measurements2[i - 1].end : paddingStart;
      var _size = typeof measuredSize === "number" ? measuredSize : estimateSize(i);
      var _end = _start + _size;
      measurements2[i] = {
        index: i,
        start: _start,
        size: _size,
        end: _end,
        key
      };
    }
    return measurements2;
  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);
  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;
  latestRef.current.measurements = measurements;
  latestRef.current.totalSize = totalSize;
  var element = onScrollElement ? onScrollElement.current : parentRef.current;
  var scrollOffsetFnRef = React.useRef(scrollOffsetFn);
  scrollOffsetFnRef.current = scrollOffsetFn;
  useIsomorphicLayoutEffect(function() {
    if (!element) {
      setScrollOffset(0);
      return;
    }
    var onScroll = function onScroll2(event) {
      var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];
      setScrollOffset(offset);
    };
    onScroll();
    element.addEventListener("scroll", onScroll, {
      capture: false,
      passive: true
    });
    return function() {
      element.removeEventListener("scroll", onScroll);
    };
  }, [element, scrollKey]);
  var _calculateRange = calculateRange(latestRef.current), start = _calculateRange.start, end = _calculateRange.end;
  var indexes = React.useMemo(function() {
    return rangeExtractor({
      start,
      end,
      overscan,
      size: measurements.length
    });
  }, [start, end, overscan, measurements.length, rangeExtractor]);
  var measureSizeRef = React.useRef(measureSize);
  measureSizeRef.current = measureSize;
  var virtualItems = React.useMemo(function() {
    var virtualItems2 = [];
    var _loop = function _loop2(k2, len2) {
      var i = indexes[k2];
      var measurement = measurements[i];
      var item = _extends(_extends({}, measurement), {}, {
        measureRef: function measureRef(el) {
          if (el) {
            var measuredSize = measureSizeRef.current(el, horizontal);
            if (measuredSize !== item.size) {
              var _scrollOffset = latestRef.current.scrollOffset;
              if (item.start < _scrollOffset) {
                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));
              }
              pendingMeasuredCacheIndexesRef.current.push(i);
              setMeasuredCache(function(old) {
                var _extends2;
                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));
              });
            }
          }
        }
      });
      virtualItems2.push(item);
    };
    for (var k = 0, len = indexes.length; k < len; k++) {
      _loop(k);
    }
    return virtualItems2;
  }, [indexes, defaultScrollToFn, horizontal, measurements]);
  var mountedRef = React.useRef(false);
  useIsomorphicLayoutEffect(function() {
    if (mountedRef.current) {
      setMeasuredCache({});
    }
    mountedRef.current = true;
  }, [estimateSize]);
  var scrollToOffset = React.useCallback(function(toOffset, _temp) {
    var _ref2 = _temp === void 0 ? {} : _temp, _ref2$align = _ref2.align, align = _ref2$align === void 0 ? "start" : _ref2$align;
    var _latestRef$current = latestRef.current, scrollOffset2 = _latestRef$current.scrollOffset, outerSize2 = _latestRef$current.outerSize;
    if (align === "auto") {
      if (toOffset <= scrollOffset2) {
        align = "start";
      } else if (toOffset >= scrollOffset2 + outerSize2) {
        align = "end";
      } else {
        align = "start";
      }
    }
    if (align === "start") {
      scrollToFn(toOffset);
    } else if (align === "end") {
      scrollToFn(toOffset - outerSize2);
    } else if (align === "center") {
      scrollToFn(toOffset - outerSize2 / 2);
    }
  }, [scrollToFn]);
  var tryScrollToIndex = React.useCallback(function(index, _temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2, _ref3$align = _ref3.align, align = _ref3$align === void 0 ? "auto" : _ref3$align, rest = _objectWithoutPropertiesLoose(_ref3, ["align"]);
    var _latestRef$current2 = latestRef.current, measurements2 = _latestRef$current2.measurements, scrollOffset2 = _latestRef$current2.scrollOffset, outerSize2 = _latestRef$current2.outerSize;
    var measurement = measurements2[Math.max(0, Math.min(index, size - 1))];
    if (!measurement) {
      return;
    }
    if (align === "auto") {
      if (measurement.end >= scrollOffset2 + outerSize2) {
        align = "end";
      } else if (measurement.start <= scrollOffset2) {
        align = "start";
      } else {
        return;
      }
    }
    var toOffset = align === "center" ? measurement.start + measurement.size / 2 : align === "end" ? measurement.end : measurement.start;
    scrollToOffset(toOffset, _extends({
      align
    }, rest));
  }, [scrollToOffset, size]);
  var scrollToIndex = React.useCallback(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    tryScrollToIndex.apply(void 0, args);
    requestAnimationFrame(function() {
      tryScrollToIndex.apply(void 0, args);
    });
  }, [tryScrollToIndex]);
  return {
    virtualItems,
    totalSize,
    scrollToOffset,
    scrollToIndex,
    measure
  };
}
var findNearestBinarySearch = function findNearestBinarySearch2(low, high, getCurrentValue, value) {
  while (low <= high) {
    var middle = (low + high) / 2 | 0;
    var currentValue = getCurrentValue(middle);
    if (currentValue < value) {
      low = middle + 1;
    } else if (currentValue > value) {
      high = middle - 1;
    } else {
      return middle;
    }
  }
  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};
function calculateRange(_ref4) {
  var measurements = _ref4.measurements, outerSize = _ref4.outerSize, scrollOffset = _ref4.scrollOffset;
  var size = measurements.length - 1;
  var getOffset = function getOffset2(index) {
    return measurements[index].start;
  };
  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);
  var end = start;
  while (end < size && measurements[end].end < scrollOffset + outerSize) {
    end++;
  }
  return {
    start,
    end
  };
}

// src/singleselect/Combobox.tsx
import { useUID } from "@twilio-paste/uid-library";
import { useWindowSize } from "@twilio-paste/utils";
import { ChevronDownIcon } from "@twilio-paste/icons/esm/ChevronDownIcon";
import { Box as Box6 } from "@twilio-paste/box";
import { InputBox, InputChevronWrapper, getInputChevronIconColor } from "@twilio-paste/input-box";
import { Label } from "@twilio-paste/label";
import { HelpText } from "@twilio-paste/help-text";

// src/styles/ComboboxInputSelect.tsx
import * as React2 from "react";
import { InputElement } from "@twilio-paste/input";
var ComboboxInputSelect = React2.forwardRef((_a, ref) => {
  var props2 = __objRest(_a, []);
  return /* @__PURE__ */ React2.createElement(InputElement, __spreadValues({
    paddingRight: props2.autocomplete ? void 0 : "space100",
    cursor: props2.autocomplete ? void 0 : "pointer",
    readOnly: !props2.autocomplete,
    type: "text",
    ref
  }, props2));
});
ComboboxInputSelect.displayName = "ComboboxInputSelect";

// src/styles/ComboboxInputWrapper.tsx
import * as React3 from "react";
import * as PropTypes from "prop-types";
import { Box, safelySpreadBoxProps } from "@twilio-paste/box";
var ComboboxInputWrapper = React3.forwardRef((_a, ref) => {
  var _b = _a, { children } = _b, props2 = __objRest(_b, ["children"]);
  return /* @__PURE__ */ React3.createElement(Box, __spreadProps(__spreadValues({}, safelySpreadBoxProps(props2)), {
    ref,
    display: "flex",
    position: "relative",
    width: "100%"
  }), children);
});
ComboboxInputWrapper.displayName = "ComboboxInputWrapper";
if (false) {
  ComboboxInputWrapper.propTypes = {
    children: PropTypes.node.isRequired
  };
}

// src/styles/ComboboxListbox.tsx
import * as React4 from "react";
import * as PropTypes2 from "prop-types";
import { Box as Box2, safelySpreadBoxProps as safelySpreadBoxProps2 } from "@twilio-paste/box";
var ComboboxListbox = React4.forwardRef((_a, ref) => {
  var _b = _a, { children, element = "COMBOBOX_LISTBOX", hidden } = _b, props2 = __objRest(_b, ["children", "element", "hidden"]);
  if (hidden) {
    return /* @__PURE__ */ React4.createElement(Box2, __spreadProps(__spreadValues({}, safelySpreadBoxProps2(props2)), {
      appearance: "none",
      ref
    }));
  }
  return /* @__PURE__ */ React4.createElement(Box2, __spreadProps(__spreadValues({}, safelySpreadBoxProps2(props2)), {
    as: "div",
    backgroundColor: "colorBackgroundBody",
    borderRadius: "borderRadius20",
    borderColor: "colorBorderWeak",
    borderWidth: "borderWidth10",
    borderStyle: "solid",
    boxShadow: "shadow",
    element,
    listStyleType: "none",
    margin: "space0",
    overflowY: "auto",
    padding: "space0",
    position: "absolute",
    width: "100%",
    maxHeight: "size30",
    zIndex: "zIndex20",
    marginTop: "space20",
    ref
  }), children);
});
ComboboxListbox.displayName = "ComboboxListbox";
ComboboxListbox.propTypes = {
  children: PropTypes2.node.isRequired,
  element: PropTypes2.string
};

// src/ComboboxItems.tsx
var import_find = __toESM(require_find());
import * as React7 from "react";
import { Box as Box5 } from "@twilio-paste/box";

// src/styles/ComboboxListboxOption.tsx
import * as React5 from "react";
import { Box as Box3, safelySpreadBoxProps as safelySpreadBoxProps3 } from "@twilio-paste/box";
import { SelectedIcon } from "@twilio-paste/icons/esm/SelectedIcon";
import { Text } from "@twilio-paste/text";
var VariantStyles = {
  groupOption: {
    paddingLeft: "space70",
    paddingRight: "space50"
  },
  default: {
    paddingLeft: "space50",
    paddingRight: "space50"
  }
};
var getVirtualStyles = (startHeight) => ({
  position: "absolute",
  top: 0,
  left: 0,
  width: "100%",
  transform: `translateY(${startHeight}px)`
});
var ComboboxListboxOption = React5.forwardRef((_a, ref) => {
  var _b = _a, {
    children,
    element = "COMBOBOX",
    highlighted,
    selected,
    disabled = false,
    variant = "default",
    startHeight
  } = _b, props2 = __objRest(_b, [
    "children",
    "element",
    "highlighted",
    "selected",
    "disabled",
    "variant",
    "startHeight"
  ]);
  const virtualItemStyles = startHeight != null ? getVirtualStyles(startHeight) : {};
  return /* @__PURE__ */ React5.createElement(Box3, __spreadValues(__spreadValues(__spreadProps(__spreadValues({
    role: "option"
  }, safelySpreadBoxProps3(props2)), {
    "aria-selected": selected,
    "aria-disabled": disabled,
    as: "li",
    position: "relative",
    element: `${element}_LIST_ITEM`,
    backgroundColor: highlighted ? "colorBackgroundPrimaryWeakest" : "colorBackgroundBody",
    color: disabled ? "colorTextWeaker" : highlighted ? "colorTextLinkStronger" : selected ? "colorTextLink" : "colorText",
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    paddingY: "space40",
    cursor: disabled ? "not-allowed" : "pointer",
    ref,
    transition: "background-color 150ms ease, color 150ms ease",
    borderBottomWidth: "borderWidth10",
    borderBottomColor: "colorBorderDecorative10Weaker",
    borderBottomStyle: "solid",
    _before: {
      content: `""`,
      position: "absolute",
      top: 0,
      bottom: 0,
      left: 0,
      borderLeftWidth: "borderWidth30",
      borderLeftColor: highlighted ? "colorBorderPrimaryStronger" : "transparent",
      borderLeftStyle: "solid"
    },
    _last: {
      borderBottomColor: "transparent"
    }
  }), virtualItemStyles), VariantStyles[variant]), /* @__PURE__ */ React5.createElement(Box3, {
    as: "span"
  }, /* @__PURE__ */ React5.createElement(Text, {
    as: "span",
    color: "inherit",
    element: `${element}_LIST_ITEM_TEXT`
  }, children)), /* @__PURE__ */ React5.createElement(Box3, {
    as: "span",
    hidden: selected ? false : true
  }, /* @__PURE__ */ React5.createElement(SelectedIcon, {
    decorative: true,
    color: "inherit"
  })));
});
ComboboxListboxOption.displayName = "ComboboxListboxOption";

// src/styles/ComboboxListboxGroup.tsx
import * as React6 from "react";
import * as PropTypes3 from "prop-types";
import { Box as Box4 } from "@twilio-paste/box";
import { Text as Text2 } from "@twilio-paste/text";
var ComboboxListboxGroup = React6.forwardRef(({ children, element = "COMBOBOX", groupName, groupLabelTemplate }, ref) => {
  return /* @__PURE__ */ React6.createElement(Box4, {
    as: "ul",
    ref,
    element: `${element}_LIST`,
    role: !groupName ? "presentation" : "group",
    "aria-label": groupName,
    margin: "space0",
    padding: "space0",
    listStyleType: "none"
  }, groupName ? /* @__PURE__ */ React6.createElement(Box4, {
    as: "li",
    backgroundColor: "colorBackground",
    role: "presentation",
    paddingY: "space40",
    paddingLeft: "space70",
    paddingRight: "space50",
    element: `${element}_GROUPNAME`
  }, /* @__PURE__ */ React6.createElement(Text2, {
    as: "span",
    fontWeight: "fontWeightBold",
    color: "colorTextWeak",
    element: `${element}_GROUPNAME_TEXT`
  }, groupLabelTemplate ? groupLabelTemplate(groupName) : groupName)) : null, children);
});
ComboboxListboxGroup.displayName = "ComboboxListboxGroup";
ComboboxListboxGroup.propTypes = {
  children: PropTypes3.node.isRequired,
  groupName: PropTypes3.string,
  element: PropTypes3.string
};

// src/helpers.tsx
var import_groupBy = __toESM(require_groupBy());
var getIndexedItems = (items) => {
  return items.map((item, index) => {
    if (typeof item === "string") {
      return { label: item, index };
    }
    return __spreadProps(__spreadValues({}, item), { index });
  });
};
var getGroupedItems = (items, groupItemsBy) => {
  return (0, import_groupBy.default)(items, (item) => typeof item === "string" ? "Uncategorized" : item[groupItemsBy]);
};
var getHelpTextVariant = (variant, hasError) => {
  if (hasError && variant === "inverse") {
    return "error_inverse";
  }
  if (hasError) {
    return "error";
  }
  if (variant === "inverse") {
    return "inverse";
  }
  return "default";
};

// src/ComboboxItems.tsx
var ComboboxItems = React7.memo(React7.forwardRef(({
  items,
  element = "COMBOBOX",
  getItemProps,
  highlightedIndex,
  selectedItems,
  disabledItems,
  optionTemplate,
  groupLabelTemplate,
  groupItemsBy,
  totalSize,
  virtualItems,
  emptyState: EmptyState
}, ref) => {
  const templatizedItems = React7.useMemo(() => {
    return optionTemplate != null && typeof optionTemplate === "function" ? items.map((item) => optionTemplate(item)) : items;
  }, [JSON.stringify(items), optionTemplate]);
  if (groupItemsBy == null) {
    if (virtualItems.length === 0 && EmptyState != null) {
      return /* @__PURE__ */ React7.createElement(ComboboxListboxGroup, {
        element,
        ref
      }, /* @__PURE__ */ React7.createElement(Box5, {
        as: "li",
        role: "option",
        position: "relative",
        element: `${element}_EMPTY_STATE`,
        backgroundColor: "colorBackgroundBody",
        color: "colorText"
      }, /* @__PURE__ */ React7.createElement(EmptyState, null)));
    }
    return /* @__PURE__ */ React7.createElement(ComboboxListboxGroup, {
      element,
      ref
    }, /* @__PURE__ */ React7.createElement("li", {
      role: "presentation",
      key: "total-size",
      style: { margin: 0, height: totalSize }
    }), virtualItems.map(({ measureRef, index: virtualItemIndex, start }) => {
      const item = templatizedItems[virtualItemIndex];
      const disabled = disabledItems != null && disabledItems.includes(items[virtualItemIndex]);
      return /* @__PURE__ */ React7.createElement(ComboboxListboxOption, __spreadProps(__spreadValues({}, getItemProps({ item, index: virtualItemIndex, ref: measureRef, disabled })), {
        key: virtualItemIndex,
        element,
        highlighted: highlightedIndex === virtualItemIndex,
        selected: selectedItems == null ? void 0 : selectedItems.includes(items[virtualItemIndex]),
        disabled,
        variant: "default",
        startHeight: start,
        "aria-setsize": items.length,
        "aria-posinset": virtualItemIndex + 1
      }), item);
    }));
  }
  const groupedItems = React7.useMemo(() => {
    const indexedItems = getIndexedItems(items);
    return getGroupedItems(indexedItems, groupItemsBy);
  }, [items, groupItemsBy]);
  const groupedItemKeys = Object.keys(groupedItems);
  if (groupedItemKeys.length === 0 && EmptyState != null) {
    return /* @__PURE__ */ React7.createElement(ComboboxListboxGroup, {
      element,
      ref
    }, /* @__PURE__ */ React7.createElement(Box5, {
      as: "li",
      role: "option",
      position: "relative",
      element: `${element}_EMPTY_STATE`,
      backgroundColor: "colorBackgroundBody",
      color: "colorText"
    }, /* @__PURE__ */ React7.createElement(EmptyState, null)));
  }
  return /* @__PURE__ */ React7.createElement(React7.Fragment, null, groupedItemKeys.map((groupedItemKey) => {
    const isUncategorized = groupedItemKey === "undefined";
    const groupKey = isUncategorized ? "$$$Uncategorized$$$" : groupedItemKey;
    return /* @__PURE__ */ React7.createElement(ComboboxListboxGroup, {
      element,
      key: groupKey,
      groupName: isUncategorized ? void 0 : groupKey,
      groupLabelTemplate
    }, groupedItems[groupedItemKey].map((_a) => {
      var _b = _a, { index } = _b, item = __objRest(_b, ["index"]);
      const disabled = disabledItems != null && (0, import_find.default)(disabledItems, item);
      return /* @__PURE__ */ React7.createElement(ComboboxListboxOption, __spreadProps(__spreadValues({}, getItemProps({ item, index, disabled })), {
        element,
        highlighted: highlightedIndex === index,
        selected: (0, import_find.default)(selectedItems, item) != null,
        disabled,
        key: index,
        variant: isUncategorized ? "default" : "groupOption"
      }), optionTemplate ? optionTemplate(item) : item);
    }));
  }));
}));
ComboboxItems.displayName = "ComboboxItems";

// src/singleselect/extractPropsFromState.tsx
var import_isEmpty = __toESM(require_isEmpty());
import * as React8 from "react";
import { useComboboxPrimitive } from "@twilio-paste/combobox-primitive";
var getDefaultState = ({
  onInputValueChange,
  onIsOpenChange,
  onSelectedItemChange,
  onHighlightedIndexChange,
  itemToString,
  initialIsOpen,
  inputValue,
  selectedItem,
  initialSelectedItem,
  items,
  getA11yStatusMessage,
  getA11ySelectionMessage
}) => {
  return useComboboxPrimitive(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({
    initialSelectedItem,
    items,
    onHighlightedIndexChange: React8.useCallback((changes) => {
      if (onHighlightedIndexChange) {
        onHighlightedIndexChange(changes);
      }
    }, [onHighlightedIndexChange]),
    onInputValueChange,
    onIsOpenChange,
    onSelectedItemChange
  }, itemToString != null && { itemToString }), initialIsOpen != null && { initialIsOpen }), inputValue != null && { defaultInputValue: inputValue }), selectedItem != null && { selectedItem }), getA11yStatusMessage != null && { getA11yStatusMessage }), getA11ySelectionMessage != null && { getA11ySelectionMessage }));
};
var extractPropsFromState = (_a) => {
  var _b = _a, {
    state
  } = _b, props2 = __objRest(_b, [
    "state"
  ]);
  if (state != null && !(0, import_isEmpty.default)(state)) {
    return state;
  }
  return getDefaultState(props2);
};

// src/singleselect/Combobox.tsx
var getHelpTextVariant2 = (variant, hasError) => {
  if (hasError && variant === "inverse") {
    return "error_inverse";
  }
  if (hasError) {
    return "error";
  }
  if (variant === "inverse") {
    return "inverse";
  }
  return "default";
};
var Combobox = React9.forwardRef((_a, ref) => {
  var _b = _a, {
    autocomplete,
    disabled,
    element = "COMBOBOX",
    hasError,
    helpText,
    initialSelectedItem,
    disabledItems,
    initialIsOpen,
    inputValue,
    insertAfter,
    insertBefore,
    items,
    itemToString,
    labelText,
    onInputValueChange,
    onSelectedItemChange,
    optionTemplate,
    onHighlightedIndexChange,
    onIsOpenChange,
    required,
    selectedItem,
    groupItemsBy,
    groupLabelTemplate,
    variant = "default",
    emptyState,
    getA11yStatusMessage,
    getA11ySelectionMessage,
    state
  } = _b, props2 = __objRest(_b, [
    "autocomplete",
    "disabled",
    "element",
    "hasError",
    "helpText",
    "initialSelectedItem",
    "disabledItems",
    "initialIsOpen",
    "inputValue",
    "insertAfter",
    "insertBefore",
    "items",
    "itemToString",
    "labelText",
    "onInputValueChange",
    "onSelectedItemChange",
    "optionTemplate",
    "onHighlightedIndexChange",
    "onIsOpenChange",
    "required",
    "selectedItem",
    "groupItemsBy",
    "groupLabelTemplate",
    "variant",
    "emptyState",
    "getA11yStatusMessage",
    "getA11ySelectionMessage",
    "state"
  ]);
  const parentRef = React9.useRef(null);
  const helpTextId = useUID();
  const { width } = useWindowSize();
  const {
    getComboboxProps,
    getInputProps,
    getItemProps,
    getLabelProps,
    getMenuProps,
    getToggleButtonProps,
    highlightedIndex,
    selectedItem: internalSelectedItem,
    isOpen
  } = extractPropsFromState({
    onInputValueChange,
    onIsOpenChange,
    onSelectedItemChange,
    onHighlightedIndexChange,
    itemToString,
    initialIsOpen,
    inputValue,
    selectedItem,
    initialSelectedItem,
    items,
    state,
    getA11yStatusMessage,
    getA11ySelectionMessage
  });
  if (getComboboxProps === void 0 || getInputProps === void 0 || getItemProps === void 0 || getLabelProps === void 0 || getMenuProps === void 0 || getToggleButtonProps === void 0 || highlightedIndex === void 0 || isOpen === void 0) {
    throw new Error("[Combobox]: One of getComboboxProps, getInputProps, getItemProps, getLabelProps, getMenuProps, getToggleButtonProps, highlightedIndex or isOpen is missing from the state object. Please make sure this is provided.");
  }
  const rowVirtualizer = useVirtual({
    size: items.length,
    parentRef,
    overscan: 8
  });
  React9.useEffect(() => {
    rowVirtualizer.measure();
  }, [width]);
  const scrollToIndexRef = React9.useCallback((node5) => {
    if (node5) {
      rowVirtualizer.scrollToIndex(items.indexOf(internalSelectedItem));
    }
  }, [items, internalSelectedItem]);
  return /* @__PURE__ */ React9.createElement(Box6, {
    position: "relative",
    element: `${element}_WRAPPER`
  }, /* @__PURE__ */ React9.createElement(Label, __spreadValues({
    disabled,
    required,
    variant
  }, getLabelProps()), labelText), /* @__PURE__ */ React9.createElement(InputBox, {
    disabled,
    element,
    hasError,
    insertBefore,
    insertAfter,
    variant
  }, /* @__PURE__ */ React9.createElement(ComboboxInputWrapper, __spreadValues({}, getComboboxProps({ role: "combobox" })), /* @__PURE__ */ React9.createElement(ComboboxInputSelect, __spreadProps(__spreadValues(__spreadValues(__spreadValues({}, getToggleButtonProps({ tabIndex: 0 })), getInputProps(__spreadValues({ disabled, required, ref }, props2))), !autocomplete ? { onChange: (event) => event.preventDefault() } : void 0), {
    autocomplete,
    "aria-describedby": helpTextId,
    element: `${element}_ELEMENT`
  })), !autocomplete && /* @__PURE__ */ React9.createElement(InputChevronWrapper, {
    element: `${element}_CHEVRON_WRAPPER`
  }, /* @__PURE__ */ React9.createElement(ChevronDownIcon, {
    decorative: true,
    color: getInputChevronIconColor(variant, disabled, false),
    size: "sizeIcon30"
  })))), /* @__PURE__ */ React9.createElement(ComboboxListbox, __spreadValues({
    hidden: !isOpen,
    element: `${element}_LISTBOX`
  }, getMenuProps({ ref: parentRef })), /* @__PURE__ */ React9.createElement(ComboboxItems, {
    ref: scrollToIndexRef,
    items,
    element,
    getItemProps,
    highlightedIndex,
    disabledItems,
    optionTemplate,
    groupItemsBy,
    groupLabelTemplate,
    totalSize: rowVirtualizer.totalSize,
    virtualItems: rowVirtualizer.virtualItems,
    emptyState
  })), helpText && /* @__PURE__ */ React9.createElement(HelpText, {
    id: helpTextId,
    variant: getHelpTextVariant2(variant, hasError)
  }, helpText));
});
Combobox.displayName = "Combobox";
Combobox.propTypes = {
  autocomplete: PropTypes4.bool,
  element: PropTypes4.string,
  groupItemsBy: PropTypes4.string,
  helpText: PropTypes4.oneOfType([PropTypes4.string, PropTypes4.node]),
  initialIsOpen: PropTypes4.bool,
  initialSelectedItem: PropTypes4.oneOfType([PropTypes4.string, PropTypes4.object]),
  items: PropTypes4.arrayOf(PropTypes4.any).isRequired,
  itemToString: PropTypes4.func,
  labelText: PropTypes4.oneOfType([PropTypes4.string, PropTypes4.node]).isRequired,
  onHighlightedIndexChange: PropTypes4.func,
  onInputValueChange: PropTypes4.func,
  onIsOpenChange: PropTypes4.func,
  onSelectedItemChange: PropTypes4.func,
  optionTemplate: PropTypes4.func,
  selectedItem: PropTypes4.oneOfType([PropTypes4.string, PropTypes4.object])
};

// src/multiselect/MultiselectCombobox.tsx
import * as React11 from "react";
var import_includes = __toESM(require_includes());
import { useWindowSize as useWindowSize2 } from "@twilio-paste/utils";
import { useUID as useUID2 } from "@twilio-paste/uid-library";
import { ChevronDownIcon as ChevronDownIcon2 } from "@twilio-paste/icons/esm/ChevronDownIcon";
import { Box as Box8 } from "@twilio-paste/box";
import { Label as Label2 } from "@twilio-paste/label";
import { HelpText as HelpText2 } from "@twilio-paste/help-text";
import { ScreenReaderOnly } from "@twilio-paste/screen-reader-only";
import { FormPillGroup, FormPill, useFormPillState } from "@twilio-paste/form-pill-group";
import { useComboboxPrimitive as useComboboxPrimitive2, useMultiSelectPrimitive } from "@twilio-paste/combobox-primitive";
import { InputBox as InputBox2, InputChevronWrapper as InputChevronWrapper2, getInputChevronIconColor as getInputChevronIconColor2 } from "@twilio-paste/input-box";

// src/multiselect/GrowingInput.tsx
import * as React10 from "react";
import { Box as Box7 } from "@twilio-paste/box";
import { InputElement as InputElement2 } from "@twilio-paste/input";
var GrowingInput = React10.forwardRef((_a, ref) => {
  var _b = _a, { element = "GROWING_INPUT", onChange, initialValue = "", value } = _b, props2 = __objRest(_b, ["element", "onChange", "initialValue", "value"]);
  const [text, setText] = React10.useState(value || initialValue);
  return /* @__PURE__ */ React10.createElement(Box7, {
    element: `${element}_CONTAINER`,
    display: "inline-grid",
    gridTemplateColumns: "min-content",
    maxWidth: "100%",
    overflow: "hidden",
    height: "24px",
    _after: {
      content: `"${text}"`,
      fontFamily: "inherit",
      fontSize: "fontSize30",
      fontWeight: "fontWeightMedium",
      paddingX: "space40",
      visibility: "hidden",
      height: "size0",
      whiteSpace: "nowrap"
    }
  }, /* @__PURE__ */ React10.createElement(InputElement2, __spreadProps(__spreadValues({}, props2), {
    ref,
    element,
    type: "text",
    value: text,
    padding: "space0",
    onChange: (event) => {
      event.preventDefault();
      setText(event.currentTarget.value.replace(/  +/g, " "));
      if (onChange != null) {
        onChange(event);
      }
    }
  })));
});
GrowingInput.displayName = "GrowingInput";

// src/multiselect/MultiselectCombobox.tsx
var MultiselectCombobox = React11.forwardRef((_a, ref) => {
  var _b = _a, {
    element = "MULTISELECT_COMBOBOX",
    disabled,
    hasError,
    helpText,
    initialSelectedItems = [],
    disabledItems,
    inputValue,
    insertAfter,
    insertBefore,
    items,
    itemToString = (item) => item ? item.toString() : "",
    labelText,
    optionTemplate,
    required,
    variant = "default",
    initialIsOpen,
    onHighlightedIndexChange,
    onInputValueChange,
    onSelectedItemsChange: onSelectedItemsChangeProp,
    onIsOpenChange,
    groupItemsBy,
    groupLabelTemplate,
    emptyState,
    maxHeight = "100%",
    selectedItemsLabelText,
    i18nKeyboardControls = "Press Delete or Backspace to remove. Press Enter to toggle selection."
  } = _b, props2 = __objRest(_b, [
    "element",
    "disabled",
    "hasError",
    "helpText",
    "initialSelectedItems",
    "disabledItems",
    "inputValue",
    "insertAfter",
    "insertBefore",
    "items",
    "itemToString",
    "labelText",
    "optionTemplate",
    "required",
    "variant",
    "initialIsOpen",
    "onHighlightedIndexChange",
    "onInputValueChange",
    "onSelectedItemsChange",
    "onIsOpenChange",
    "groupItemsBy",
    "groupLabelTemplate",
    "emptyState",
    "maxHeight",
    "selectedItemsLabelText",
    "i18nKeyboardControls"
  ]);
  const a11yLabelId = useUID2();
  const helpTextId = useUID2();
  const pillState = useFormPillState();
  const parentRef = React11.useRef(null);
  const { width } = useWindowSize2();
  const onSelectedItemsChange = React11.useCallback((changes) => {
    if (onSelectedItemsChangeProp) {
      onSelectedItemsChangeProp(changes.selectedItems);
    }
  }, [onSelectedItemsChangeProp]);
  const {
    getDropdownProps,
    removeSelectedItem,
    addSelectedItem,
    selectedItems
  } = useMultiSelectPrimitive({
    initialSelectedItems,
    onSelectedItemsChange
  });
  const {
    isOpen,
    getToggleButtonProps,
    getLabelProps,
    getMenuProps,
    getInputProps,
    getComboboxProps,
    getItemProps,
    highlightedIndex
  } = useComboboxPrimitive2({
    items,
    itemToString,
    selectedItem: null,
    defaultInputValue: inputValue,
    onInputValueChange,
    onHighlightedIndexChange,
    onIsOpenChange,
    initialIsOpen,
    stateReducer(_state, actionAndChanges) {
      const { changes, type } = actionAndChanges;
      switch (type) {
        case useComboboxPrimitive2.stateChangeTypes.InputKeyDownEnter:
        case useComboboxPrimitive2.stateChangeTypes.ItemClick:
        case useComboboxPrimitive2.stateChangeTypes.InputBlur:
          return __spreadValues(__spreadValues({}, changes), changes.selectedItem != null ? {
            isOpen: true,
            highlightedIndex: items.indexOf(changes.selectedItem),
            inputValue: ""
          } : {});
        case useComboboxPrimitive2.stateChangeTypes.MenuMouseLeave:
          return __spreadProps(__spreadValues({}, changes), {
            highlightedIndex: -2
          });
      }
      return changes;
    },
    onStateChange({ type, selectedItem: newSelectedItem }) {
      switch (type) {
        case useComboboxPrimitive2.stateChangeTypes.InputKeyDownEnter:
        case useComboboxPrimitive2.stateChangeTypes.ItemClick:
          if (newSelectedItem) {
            if (disabledItems != null && (0, import_includes.default)(disabledItems, newSelectedItem)) {
              return;
            }
            if ((0, import_includes.default)(selectedItems, newSelectedItem)) {
              removeSelectedItem(newSelectedItem);
            } else {
              addSelectedItem(newSelectedItem);
            }
          }
          break;
        default:
          break;
      }
    }
  });
  const size = React11.useMemo(() => items.length, [items]);
  const rowVirtualizer = useVirtual({
    size,
    parentRef,
    overscan: 8
  });
  React11.useEffect(() => {
    rowVirtualizer.measure();
  }, [width]);
  const scrollToIndexRef = React11.useCallback((node5) => {
    if (node5 == null) {
      return;
    }
    if (highlightedIndex === -1) {
      const lastSelectedItem = selectedItems[selectedItems.length - 1];
      rowVirtualizer.scrollToIndex(items.indexOf(lastSelectedItem));
    }
    if (highlightedIndex === 0) {
      rowVirtualizer.scrollToIndex(0);
    }
    if (highlightedIndex === size - 1) {
      rowVirtualizer.scrollToIndex(size - 1);
    }
  }, [items, selectedItems, highlightedIndex]);
  const comboboxProps = getComboboxProps({
    disabled,
    role: "combobox"
  });
  const ariaExpanded = comboboxProps["aria-expanded"] || "false";
  return /* @__PURE__ */ React11.createElement(Box8, {
    position: "relative",
    element: `${element}_WRAPPER`
  }, /* @__PURE__ */ React11.createElement(Label2, __spreadValues({
    disabled,
    required,
    variant
  }, getLabelProps()), labelText), /* @__PURE__ */ React11.createElement(InputBox2, {
    disabled,
    hasError,
    element,
    insertBefore,
    insertAfter,
    variant
  }, /* @__PURE__ */ React11.createElement(Box8, __spreadProps(__spreadValues(__spreadValues({}, getToggleButtonProps({ disabled })), comboboxProps), {
    "aria-expanded": ariaExpanded,
    position: "relative",
    width: "100%",
    paddingY: "space30",
    paddingLeft: "space40",
    paddingRight: "space100",
    maxHeight,
    overflowY: "auto"
  }), /* @__PURE__ */ React11.createElement(FormPillGroup, __spreadProps(__spreadValues({}, pillState), {
    element: `${element}_PILL_GROUP`,
    display: "inline-flex",
    "aria-label": selectedItemsLabelText,
    "aria-describedby": a11yLabelId,
    i18nKeyboardControls: ""
  }), selectedItems.map(function renderSelectedItems(selectedItemPill) {
    const key = groupItemsBy != null && typeof selectedItemPill !== "string" ? `${selectedItemPill[groupItemsBy]}-${itemToString(selectedItemPill)}` : itemToString(selectedItemPill);
    return /* @__PURE__ */ React11.createElement(FormPill, __spreadValues({
      variant: hasError ? "error" : "default",
      element: `${element}_PILL`,
      key,
      disabled,
      onDismiss: disabled ? void 0 : (event) => {
        removeSelectedItem(selectedItemPill);
        event.stopPropagation();
      },
      onSelect: (event) => event.stopPropagation()
    }, pillState), itemToString(selectedItemPill));
  })), /* @__PURE__ */ React11.createElement(Box8, {
    as: "span",
    marginLeft: "space20"
  }, /* @__PURE__ */ React11.createElement(GrowingInput, __spreadProps(__spreadValues({}, getInputProps(__spreadValues(__spreadProps(__spreadValues({}, getDropdownProps({ ref, preventKeyAction: isOpen })), {
    disabled,
    required
  }), props2))), {
    "aria-describedby": helpTextId,
    element: `${element}_ELEMENT`
  }))), /* @__PURE__ */ React11.createElement(InputChevronWrapper2, {
    element: `${element}_CHEVRON_WRAPPER`
  }, /* @__PURE__ */ React11.createElement(ChevronDownIcon2, {
    decorative: true,
    color: getInputChevronIconColor2("default", false, false),
    size: "sizeIcon30"
  })))), /* @__PURE__ */ React11.createElement(ComboboxListbox, __spreadProps(__spreadValues({}, getMenuProps({ ref: parentRef })), {
    element: `${element}_LISTBOX`,
    hidden: !isOpen,
    "aria-multiselectable": "true"
  }), /* @__PURE__ */ React11.createElement(ComboboxItems, {
    ref: scrollToIndexRef,
    items,
    element,
    getItemProps,
    highlightedIndex,
    selectedItems,
    disabledItems,
    totalSize: rowVirtualizer.totalSize,
    virtualItems: rowVirtualizer.virtualItems,
    optionTemplate,
    groupItemsBy,
    groupLabelTemplate,
    emptyState
  })), helpText && /* @__PURE__ */ React11.createElement(HelpText2, {
    id: helpTextId,
    variant: getHelpTextVariant(variant, hasError),
    element: `${element}_HELP_TEXT`
  }, helpText), /* @__PURE__ */ React11.createElement(ScreenReaderOnly, {
    id: a11yLabelId
  }, i18nKeyboardControls));
});
MultiselectCombobox.displayName = "MultiselectCombobox";
export {
  Combobox,
  ComboboxInputWrapper,
  ComboboxListbox,
  ComboboxListboxGroup,
  ComboboxListboxOption,
  MultiselectCombobox,
  useComboboxPrimitive3 as useCombobox
};
