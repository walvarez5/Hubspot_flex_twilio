var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop))
      __defNormalProp(a2, prop, b2[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop))
        __defNormalProp(a2, prop, b2[prop]);
    }
  return a2;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// ../../node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "../../node_modules/lodash/_freeGlobal.js"(exports, module2) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module2.exports = freeGlobal;
  }
});

// ../../node_modules/lodash/_root.js
var require_root = __commonJS({
  "../../node_modules/lodash/_root.js"(exports, module2) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module2.exports = root;
  }
});

// ../../node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "../../node_modules/lodash/_Symbol.js"(exports, module2) {
    var root = require_root();
    var Symbol = root.Symbol;
    module2.exports = Symbol;
  }
});

// ../../node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "../../node_modules/lodash/_arrayMap.js"(exports, module2) {
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module2.exports = arrayMap;
  }
});

// ../../node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "../../node_modules/lodash/isArray.js"(exports, module2) {
    var isArray = Array.isArray;
    module2.exports = isArray;
  }
});

// ../../node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "../../node_modules/lodash/_getRawTag.js"(exports, module2) {
    var Symbol = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol ? Symbol.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module2.exports = getRawTag;
  }
});

// ../../node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "../../node_modules/lodash/_objectToString.js"(exports, module2) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module2.exports = objectToString;
  }
});

// ../../node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "../../node_modules/lodash/_baseGetTag.js"(exports, module2) {
    var Symbol = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol ? Symbol.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module2.exports = baseGetTag;
  }
});

// ../../node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "../../node_modules/lodash/isObjectLike.js"(exports, module2) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module2.exports = isObjectLike;
  }
});

// ../../node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "../../node_modules/lodash/isSymbol.js"(exports, module2) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module2.exports = isSymbol;
  }
});

// ../../node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "../../node_modules/lodash/_baseToString.js"(exports, module2) {
    var Symbol = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module2.exports = baseToString;
  }
});

// ../../node_modules/lodash/toString.js
var require_toString = __commonJS({
  "../../node_modules/lodash/toString.js"(exports, module2) {
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module2.exports = toString;
  }
});

// ../../node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "../../node_modules/lodash/_baseSlice.js"(exports, module2) {
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module2.exports = baseSlice;
  }
});

// ../../node_modules/lodash/_castSlice.js
var require_castSlice = __commonJS({
  "../../node_modules/lodash/_castSlice.js"(exports, module2) {
    var baseSlice = require_baseSlice();
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === void 0 ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }
    module2.exports = castSlice;
  }
});

// ../../node_modules/lodash/_hasUnicode.js
var require_hasUnicode = __commonJS({
  "../../node_modules/lodash/_hasUnicode.js"(exports, module2) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsZWJ = "\\u200d";
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    module2.exports = hasUnicode;
  }
});

// ../../node_modules/lodash/_asciiToArray.js
var require_asciiToArray = __commonJS({
  "../../node_modules/lodash/_asciiToArray.js"(exports, module2) {
    function asciiToArray(string) {
      return string.split("");
    }
    module2.exports = asciiToArray;
  }
});

// ../../node_modules/lodash/_unicodeToArray.js
var require_unicodeToArray = __commonJS({
  "../../node_modules/lodash/_unicodeToArray.js"(exports, module2) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsZWJ = "\\u200d";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    module2.exports = unicodeToArray;
  }
});

// ../../node_modules/lodash/_stringToArray.js
var require_stringToArray = __commonJS({
  "../../node_modules/lodash/_stringToArray.js"(exports, module2) {
    var asciiToArray = require_asciiToArray();
    var hasUnicode = require_hasUnicode();
    var unicodeToArray = require_unicodeToArray();
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    module2.exports = stringToArray;
  }
});

// ../../node_modules/lodash/_createCaseFirst.js
var require_createCaseFirst = __commonJS({
  "../../node_modules/lodash/_createCaseFirst.js"(exports, module2) {
    var castSlice = require_castSlice();
    var hasUnicode = require_hasUnicode();
    var stringToArray = require_stringToArray();
    var toString = require_toString();
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);
        var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
        var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
        return chr[methodName]() + trailing;
      };
    }
    module2.exports = createCaseFirst;
  }
});

// ../../node_modules/lodash/upperFirst.js
var require_upperFirst = __commonJS({
  "../../node_modules/lodash/upperFirst.js"(exports, module2) {
    var createCaseFirst = require_createCaseFirst();
    var upperFirst = createCaseFirst("toUpperCase");
    module2.exports = upperFirst;
  }
});

// ../../node_modules/lodash/capitalize.js
var require_capitalize = __commonJS({
  "../../node_modules/lodash/capitalize.js"(exports, module2) {
    var toString = require_toString();
    var upperFirst = require_upperFirst();
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }
    module2.exports = capitalize;
  }
});

// ../../node_modules/lodash/_arrayReduce.js
var require_arrayReduce = __commonJS({
  "../../node_modules/lodash/_arrayReduce.js"(exports, module2) {
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1, length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }
    module2.exports = arrayReduce;
  }
});

// ../../node_modules/lodash/_basePropertyOf.js
var require_basePropertyOf = __commonJS({
  "../../node_modules/lodash/_basePropertyOf.js"(exports, module2) {
    function basePropertyOf(object) {
      return function(key) {
        return object == null ? void 0 : object[key];
      };
    }
    module2.exports = basePropertyOf;
  }
});

// ../../node_modules/lodash/_deburrLetter.js
var require_deburrLetter = __commonJS({
  "../../node_modules/lodash/_deburrLetter.js"(exports, module2) {
    var basePropertyOf = require_basePropertyOf();
    var deburredLetters = {
      "\xC0": "A",
      "\xC1": "A",
      "\xC2": "A",
      "\xC3": "A",
      "\xC4": "A",
      "\xC5": "A",
      "\xE0": "a",
      "\xE1": "a",
      "\xE2": "a",
      "\xE3": "a",
      "\xE4": "a",
      "\xE5": "a",
      "\xC7": "C",
      "\xE7": "c",
      "\xD0": "D",
      "\xF0": "d",
      "\xC8": "E",
      "\xC9": "E",
      "\xCA": "E",
      "\xCB": "E",
      "\xE8": "e",
      "\xE9": "e",
      "\xEA": "e",
      "\xEB": "e",
      "\xCC": "I",
      "\xCD": "I",
      "\xCE": "I",
      "\xCF": "I",
      "\xEC": "i",
      "\xED": "i",
      "\xEE": "i",
      "\xEF": "i",
      "\xD1": "N",
      "\xF1": "n",
      "\xD2": "O",
      "\xD3": "O",
      "\xD4": "O",
      "\xD5": "O",
      "\xD6": "O",
      "\xD8": "O",
      "\xF2": "o",
      "\xF3": "o",
      "\xF4": "o",
      "\xF5": "o",
      "\xF6": "o",
      "\xF8": "o",
      "\xD9": "U",
      "\xDA": "U",
      "\xDB": "U",
      "\xDC": "U",
      "\xF9": "u",
      "\xFA": "u",
      "\xFB": "u",
      "\xFC": "u",
      "\xDD": "Y",
      "\xFD": "y",
      "\xFF": "y",
      "\xC6": "Ae",
      "\xE6": "ae",
      "\xDE": "Th",
      "\xFE": "th",
      "\xDF": "ss",
      "\u0100": "A",
      "\u0102": "A",
      "\u0104": "A",
      "\u0101": "a",
      "\u0103": "a",
      "\u0105": "a",
      "\u0106": "C",
      "\u0108": "C",
      "\u010A": "C",
      "\u010C": "C",
      "\u0107": "c",
      "\u0109": "c",
      "\u010B": "c",
      "\u010D": "c",
      "\u010E": "D",
      "\u0110": "D",
      "\u010F": "d",
      "\u0111": "d",
      "\u0112": "E",
      "\u0114": "E",
      "\u0116": "E",
      "\u0118": "E",
      "\u011A": "E",
      "\u0113": "e",
      "\u0115": "e",
      "\u0117": "e",
      "\u0119": "e",
      "\u011B": "e",
      "\u011C": "G",
      "\u011E": "G",
      "\u0120": "G",
      "\u0122": "G",
      "\u011D": "g",
      "\u011F": "g",
      "\u0121": "g",
      "\u0123": "g",
      "\u0124": "H",
      "\u0126": "H",
      "\u0125": "h",
      "\u0127": "h",
      "\u0128": "I",
      "\u012A": "I",
      "\u012C": "I",
      "\u012E": "I",
      "\u0130": "I",
      "\u0129": "i",
      "\u012B": "i",
      "\u012D": "i",
      "\u012F": "i",
      "\u0131": "i",
      "\u0134": "J",
      "\u0135": "j",
      "\u0136": "K",
      "\u0137": "k",
      "\u0138": "k",
      "\u0139": "L",
      "\u013B": "L",
      "\u013D": "L",
      "\u013F": "L",
      "\u0141": "L",
      "\u013A": "l",
      "\u013C": "l",
      "\u013E": "l",
      "\u0140": "l",
      "\u0142": "l",
      "\u0143": "N",
      "\u0145": "N",
      "\u0147": "N",
      "\u014A": "N",
      "\u0144": "n",
      "\u0146": "n",
      "\u0148": "n",
      "\u014B": "n",
      "\u014C": "O",
      "\u014E": "O",
      "\u0150": "O",
      "\u014D": "o",
      "\u014F": "o",
      "\u0151": "o",
      "\u0154": "R",
      "\u0156": "R",
      "\u0158": "R",
      "\u0155": "r",
      "\u0157": "r",
      "\u0159": "r",
      "\u015A": "S",
      "\u015C": "S",
      "\u015E": "S",
      "\u0160": "S",
      "\u015B": "s",
      "\u015D": "s",
      "\u015F": "s",
      "\u0161": "s",
      "\u0162": "T",
      "\u0164": "T",
      "\u0166": "T",
      "\u0163": "t",
      "\u0165": "t",
      "\u0167": "t",
      "\u0168": "U",
      "\u016A": "U",
      "\u016C": "U",
      "\u016E": "U",
      "\u0170": "U",
      "\u0172": "U",
      "\u0169": "u",
      "\u016B": "u",
      "\u016D": "u",
      "\u016F": "u",
      "\u0171": "u",
      "\u0173": "u",
      "\u0174": "W",
      "\u0175": "w",
      "\u0176": "Y",
      "\u0177": "y",
      "\u0178": "Y",
      "\u0179": "Z",
      "\u017B": "Z",
      "\u017D": "Z",
      "\u017A": "z",
      "\u017C": "z",
      "\u017E": "z",
      "\u0132": "IJ",
      "\u0133": "ij",
      "\u0152": "Oe",
      "\u0153": "oe",
      "\u0149": "'n",
      "\u017F": "s"
    };
    var deburrLetter = basePropertyOf(deburredLetters);
    module2.exports = deburrLetter;
  }
});

// ../../node_modules/lodash/deburr.js
var require_deburr = __commonJS({
  "../../node_modules/lodash/deburr.js"(exports, module2) {
    var deburrLetter = require_deburrLetter();
    var toString = require_toString();
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsCombo = "[" + rsComboRange + "]";
    var reComboMark = RegExp(rsCombo, "g");
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
    }
    module2.exports = deburr;
  }
});

// ../../node_modules/lodash/_asciiWords.js
var require_asciiWords = __commonJS({
  "../../node_modules/lodash/_asciiWords.js"(exports, module2) {
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }
    module2.exports = asciiWords;
  }
});

// ../../node_modules/lodash/_hasUnicodeWord.js
var require_hasUnicodeWord = __commonJS({
  "../../node_modules/lodash/_hasUnicodeWord.js"(exports, module2) {
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }
    module2.exports = hasUnicodeWord;
  }
});

// ../../node_modules/lodash/_unicodeWords.js
var require_unicodeWords = __commonJS({
  "../../node_modules/lodash/_unicodeWords.js"(exports, module2) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsDingbatRange = "\\u2700-\\u27bf";
    var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
    var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
    var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
    var rsPunctuationRange = "\\u2000-\\u206f";
    var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['\u2019]";
    var rsBreak = "[" + rsBreakRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsDigits = "\\d+";
    var rsDingbat = "[" + rsDingbatRange + "]";
    var rsLower = "[" + rsLowerRange + "]";
    var rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsUpper = "[" + rsUpperRange + "]";
    var rsZWJ = "\\u200d";
    var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
    var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
    var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
    var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
    var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq;
    var reUnicodeWord = RegExp([
      rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
      rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
      rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
      rsUpper + "+" + rsOptContrUpper,
      rsOrdUpper,
      rsOrdLower,
      rsDigits,
      rsEmoji
    ].join("|"), "g");
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }
    module2.exports = unicodeWords;
  }
});

// ../../node_modules/lodash/words.js
var require_words = __commonJS({
  "../../node_modules/lodash/words.js"(exports, module2) {
    var asciiWords = require_asciiWords();
    var hasUnicodeWord = require_hasUnicodeWord();
    var toString = require_toString();
    var unicodeWords = require_unicodeWords();
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? void 0 : pattern;
      if (pattern === void 0) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }
    module2.exports = words;
  }
});

// ../../node_modules/lodash/_createCompounder.js
var require_createCompounder = __commonJS({
  "../../node_modules/lodash/_createCompounder.js"(exports, module2) {
    var arrayReduce = require_arrayReduce();
    var deburr = require_deburr();
    var words = require_words();
    var rsApos = "['\u2019]";
    var reApos = RegExp(rsApos, "g");
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
      };
    }
    module2.exports = createCompounder;
  }
});

// ../../node_modules/lodash/camelCase.js
var require_camelCase = __commonJS({
  "../../node_modules/lodash/camelCase.js"(exports, module2) {
    var capitalize = require_capitalize();
    var createCompounder = require_createCompounder();
    var camelCase2 = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });
    module2.exports = camelCase2;
  }
});

// src/index.ts
var src_exports = {};
__export(src_exports, {
  convertRawTokenJSONToArray: () => convertRawTokenJSONToArray,
  flattenCategorizedTokens: () => flattenCategorizedTokens,
  getContrastRatingForTokenPairing: () => getContrastRatingForTokenPairing,
  getContrastRatingsOfTokensWithDataVisualizationContrastRequirements: () => getContrastRatingsOfTokensWithDataVisualizationContrastRequirements,
  getContrastRatingsOfTokensWithTextContrastRequirements: () => getContrastRatingsOfTokensWithTextContrastRequirements,
  getContrastRatingsOfTokensWithUIControlContrastRequirements: () => getContrastRatingsOfTokensWithUIControlContrastRequirements,
  getNumberOfTextFailures: () => getNumberOfTextFailures,
  getNumberOfUIControlFailures: () => getNumberOfUIControlFailures,
  getTokensWithDataVisualizationContrastRequirements: () => getTokensWithDataVisualizationContrastRequirements,
  getTokensWithTextContrastRequirements: () => getTokensWithTextContrastRequirements,
  getTokensWithUIControlContrastRequirements: () => getTokensWithUIControlContrastRequirements
});
module.exports = __toCommonJS(src_exports);

// ../../node_modules/color-combos/dist/index.es.js
var r = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function e(r2, e2) {
  return r2(e2 = { exports: {} }, e2.exports), e2.exports;
}
var t = "[object GeneratorFunction]";
var n = /^\[object .+?Constructor\]$/;
var a = typeof r == "object" && r && r.Object === Object && r;
var o = typeof self == "object" && self && self.Object === Object && self;
var i = a || o || Function("return this")();
function l(r2, e2) {
  return !!(r2 ? r2.length : 0) && function(r3, e3, t2) {
    if (e3 != e3)
      return function(r4, e4, t3, n3) {
        var a3 = r4.length, o2 = t3 + (n3 ? 1 : -1);
        for (; n3 ? o2-- : ++o2 < a3; )
          if (e4(r4[o2], o2, r4))
            return o2;
        return -1;
      }(r3, h, t2);
    var n2 = t2 - 1, a2 = r3.length;
    for (; ++n2 < a2; )
      if (r3[n2] === e3)
        return n2;
    return -1;
  }(r2, e2, 0) > -1;
}
function s(r2, e2, t2) {
  for (var n2 = -1, a2 = r2 ? r2.length : 0; ++n2 < a2; )
    if (t2(e2, r2[n2]))
      return true;
  return false;
}
function h(r2) {
  return r2 != r2;
}
function u(r2, e2) {
  return r2.has(e2);
}
function c(r2) {
  var e2 = -1, t2 = Array(r2.size);
  return r2.forEach(function(r3) {
    t2[++e2] = r3;
  }), t2;
}
var f;
var g = Array.prototype;
var d = Function.prototype;
var p = Object.prototype;
var b = i["__core-js_shared__"];
var v = (f = /[^.]+$/.exec(b && b.keys && b.keys.IE_PROTO || "")) ? "Symbol(src)_1." + f : "";
var y = d.toString;
var m = p.hasOwnProperty;
var w = p.toString;
var k = RegExp("^" + y.call(m).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
var M = g.splice;
var _ = $(i, "Map");
var x = $(i, "Set");
var j = $(Object, "create");
function O(r2) {
  var e2 = -1, t2 = r2 ? r2.length : 0;
  for (this.clear(); ++e2 < t2; ) {
    var n2 = r2[e2];
    this.set(n2[0], n2[1]);
  }
}
function q(r2) {
  var e2 = -1, t2 = r2 ? r2.length : 0;
  for (this.clear(); ++e2 < t2; ) {
    var n2 = r2[e2];
    this.set(n2[0], n2[1]);
  }
}
function A(r2) {
  var e2 = -1, t2 = r2 ? r2.length : 0;
  for (this.clear(); ++e2 < t2; ) {
    var n2 = r2[e2];
    this.set(n2[0], n2[1]);
  }
}
function z(r2) {
  var e2 = -1, t2 = r2 ? r2.length : 0;
  for (this.__data__ = new A(); ++e2 < t2; )
    this.add(r2[e2]);
}
function F(r2, e2) {
  for (var t2, n2, a2 = r2.length; a2--; )
    if ((t2 = r2[a2][0]) === (n2 = e2) || t2 != t2 && n2 != n2)
      return a2;
  return -1;
}
function E(r2) {
  return !(!I(r2) || (e2 = r2, v && v in e2)) && (function(r3) {
    var e3 = I(r3) ? w.call(r3) : "";
    return e3 == "[object Function]" || e3 == t;
  }(r2) || function(r3) {
    var e3 = false;
    if (r3 != null && typeof r3.toString != "function")
      try {
        e3 = !!(r3 + "");
      } catch (r4) {
      }
    return e3;
  }(r2) ? k : n).test(function(r3) {
    if (r3 != null) {
      try {
        return y.call(r3);
      } catch (r4) {
      }
      try {
        return r3 + "";
      } catch (r4) {
      }
    }
    return "";
  }(r2));
  var e2;
}
O.prototype.clear = function() {
  this.__data__ = j ? j(null) : {};
}, O.prototype.delete = function(r2) {
  return this.has(r2) && delete this.__data__[r2];
}, O.prototype.get = function(r2) {
  var e2 = this.__data__;
  if (j) {
    var t2 = e2[r2];
    return t2 === "__lodash_hash_undefined__" ? void 0 : t2;
  }
  return m.call(e2, r2) ? e2[r2] : void 0;
}, O.prototype.has = function(r2) {
  var e2 = this.__data__;
  return j ? e2[r2] !== void 0 : m.call(e2, r2);
}, O.prototype.set = function(r2, e2) {
  return this.__data__[r2] = j && e2 === void 0 ? "__lodash_hash_undefined__" : e2, this;
}, q.prototype.clear = function() {
  this.__data__ = [];
}, q.prototype.delete = function(r2) {
  var e2 = this.__data__, t2 = F(e2, r2);
  return !(t2 < 0) && (t2 == e2.length - 1 ? e2.pop() : M.call(e2, t2, 1), true);
}, q.prototype.get = function(r2) {
  var e2 = this.__data__, t2 = F(e2, r2);
  return t2 < 0 ? void 0 : e2[t2][1];
}, q.prototype.has = function(r2) {
  return F(this.__data__, r2) > -1;
}, q.prototype.set = function(r2, e2) {
  var t2 = this.__data__, n2 = F(t2, r2);
  return n2 < 0 ? t2.push([r2, e2]) : t2[n2][1] = e2, this;
}, A.prototype.clear = function() {
  this.__data__ = { hash: new O(), map: new (_ || q)(), string: new O() };
}, A.prototype.delete = function(r2) {
  return S(this, r2).delete(r2);
}, A.prototype.get = function(r2) {
  return S(this, r2).get(r2);
}, A.prototype.has = function(r2) {
  return S(this, r2).has(r2);
}, A.prototype.set = function(r2, e2) {
  return S(this, r2).set(r2, e2), this;
}, z.prototype.add = z.prototype.push = function(r2) {
  return this.__data__.set(r2, "__lodash_hash_undefined__"), this;
}, z.prototype.has = function(r2) {
  return this.__data__.has(r2);
};
var P = x && 1 / c(new x([, -0]))[1] == 1 / 0 ? function(r2) {
  return new x(r2);
} : function() {
};
function S(r2, e2) {
  var t2, n2, a2 = r2.__data__;
  return ((n2 = typeof (t2 = e2)) == "string" || n2 == "number" || n2 == "symbol" || n2 == "boolean" ? t2 !== "__proto__" : t2 === null) ? a2[typeof e2 == "string" ? "string" : "hash"] : a2.map;
}
function $(r2, e2) {
  var t2 = function(r3, e3) {
    return r3 == null ? void 0 : r3[e3];
  }(r2, e2);
  return E(t2) ? t2 : void 0;
}
function I(r2) {
  var e2 = typeof r2;
  return !!r2 && (e2 == "object" || e2 == "function");
}
var L = function(r2) {
  return r2 && r2.length ? function(r3, e2, t2) {
    var n2 = -1, a2 = l, o2 = r3.length, i2 = true, h2 = [], f2 = h2;
    if (t2)
      i2 = false, a2 = s;
    else if (o2 >= 200) {
      var g2 = e2 ? null : P(r3);
      if (g2)
        return c(g2);
      i2 = false, a2 = u, f2 = new z();
    } else
      f2 = e2 ? [] : h2;
    r:
      for (; ++n2 < o2; ) {
        var d2 = r3[n2], p2 = e2 ? e2(d2) : d2;
        if (d2 = t2 || d2 !== 0 ? d2 : 0, i2 && p2 == p2) {
          for (var b2 = f2.length; b2--; )
            if (f2[b2] === p2)
              continue r;
          e2 && f2.push(p2), h2.push(d2);
        } else
          a2(f2, p2, t2) || (f2 !== h2 && f2.push(p2), h2.push(d2));
      }
    return h2;
  }(r2) : [];
};
var N = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
var C = e(function(r2) {
  var e2 = Array.prototype.concat, t2 = Array.prototype.slice, n2 = r2.exports = function(r3) {
    for (var n3, a2 = [], o2 = 0, i2 = r3.length; o2 < i2; o2++) {
      var l2 = r3[o2];
      (n3 = l2) && typeof n3 != "string" && (n3 instanceof Array || Array.isArray(n3) || n3.length >= 0 && (n3.splice instanceof Function || Object.getOwnPropertyDescriptor(n3, n3.length - 1) && n3.constructor.name !== "String")) ? a2 = e2.call(a2, t2.call(l2)) : a2.push(l2);
    }
    return a2;
  };
  n2.wrap = function(r3) {
    return function() {
      return r3(n2(arguments));
    };
  };
});
var U = e(function(r2) {
  var e2 = {};
  for (var t2 in N)
    N.hasOwnProperty(t2) && (e2[N[t2]] = t2);
  var n2 = r2.exports = { to: {}, get: {} };
  function a2(r3, e3, t3) {
    return Math.min(Math.max(e3, r3), t3);
  }
  function o2(r3) {
    var e3 = r3.toString(16).toUpperCase();
    return e3.length < 2 ? "0" + e3 : e3;
  }
  n2.get = function(r3) {
    var e3, t3;
    switch (r3.substring(0, 3).toLowerCase()) {
      case "hsl":
        e3 = n2.get.hsl(r3), t3 = "hsl";
        break;
      case "hwb":
        e3 = n2.get.hwb(r3), t3 = "hwb";
        break;
      default:
        e3 = n2.get.rgb(r3), t3 = "rgb";
    }
    return e3 ? { model: t3, value: e3 } : null;
  }, n2.get.rgb = function(r3) {
    if (!r3)
      return null;
    var e3, t3, n3, o3 = [0, 0, 0, 1];
    if (e3 = r3.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)) {
      for (n3 = e3[2], e3 = e3[1], t3 = 0; t3 < 3; t3++) {
        var i2 = 2 * t3;
        o3[t3] = parseInt(e3.slice(i2, i2 + 2), 16);
      }
      n3 && (o3[3] = parseInt(n3, 16) / 255);
    } else if (e3 = r3.match(/^#([a-f0-9]{3,4})$/i)) {
      for (n3 = (e3 = e3[1])[3], t3 = 0; t3 < 3; t3++)
        o3[t3] = parseInt(e3[t3] + e3[t3], 16);
      n3 && (o3[3] = parseInt(n3 + n3, 16) / 255);
    } else if (e3 = r3.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/)) {
      for (t3 = 0; t3 < 3; t3++)
        o3[t3] = parseInt(e3[t3 + 1], 0);
      e3[4] && (o3[3] = parseFloat(e3[4]));
    } else {
      if (!(e3 = r3.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/)))
        return (e3 = r3.match(/(\D+)/)) ? e3[1] === "transparent" ? [0, 0, 0, 0] : (o3 = N[e3[1]]) ? (o3[3] = 1, o3) : null : null;
      for (t3 = 0; t3 < 3; t3++)
        o3[t3] = Math.round(2.55 * parseFloat(e3[t3 + 1]));
      e3[4] && (o3[3] = parseFloat(e3[4]));
    }
    for (t3 = 0; t3 < 3; t3++)
      o3[t3] = a2(o3[t3], 0, 255);
    return o3[3] = a2(o3[3], 0, 1), o3;
  }, n2.get.hsl = function(r3) {
    if (!r3)
      return null;
    var e3 = r3.match(/^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/);
    if (e3) {
      var t3 = parseFloat(e3[4]);
      return [(parseFloat(e3[1]) + 360) % 360, a2(parseFloat(e3[2]), 0, 100), a2(parseFloat(e3[3]), 0, 100), a2(isNaN(t3) ? 1 : t3, 0, 1)];
    }
    return null;
  }, n2.get.hwb = function(r3) {
    if (!r3)
      return null;
    var e3 = r3.match(/^hwb\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/);
    if (e3) {
      var t3 = parseFloat(e3[4]);
      return [(parseFloat(e3[1]) % 360 + 360) % 360, a2(parseFloat(e3[2]), 0, 100), a2(parseFloat(e3[3]), 0, 100), a2(isNaN(t3) ? 1 : t3, 0, 1)];
    }
    return null;
  }, n2.to.hex = function() {
    var r3 = C(arguments);
    return "#" + o2(r3[0]) + o2(r3[1]) + o2(r3[2]) + (r3[3] < 1 ? o2(Math.round(255 * r3[3])) : "");
  }, n2.to.rgb = function() {
    var r3 = C(arguments);
    return r3.length < 4 || r3[3] === 1 ? "rgb(" + Math.round(r3[0]) + ", " + Math.round(r3[1]) + ", " + Math.round(r3[2]) + ")" : "rgba(" + Math.round(r3[0]) + ", " + Math.round(r3[1]) + ", " + Math.round(r3[2]) + ", " + r3[3] + ")";
  }, n2.to.rgb.percent = function() {
    var r3 = C(arguments), e3 = Math.round(r3[0] / 255 * 100), t3 = Math.round(r3[1] / 255 * 100), n3 = Math.round(r3[2] / 255 * 100);
    return r3.length < 4 || r3[3] === 1 ? "rgb(" + e3 + "%, " + t3 + "%, " + n3 + "%)" : "rgba(" + e3 + "%, " + t3 + "%, " + n3 + "%, " + r3[3] + ")";
  }, n2.to.hsl = function() {
    var r3 = C(arguments);
    return r3.length < 4 || r3[3] === 1 ? "hsl(" + r3[0] + ", " + r3[1] + "%, " + r3[2] + "%)" : "hsla(" + r3[0] + ", " + r3[1] + "%, " + r3[2] + "%, " + r3[3] + ")";
  }, n2.to.hwb = function() {
    var r3 = C(arguments), e3 = "";
    return r3.length >= 4 && r3[3] !== 1 && (e3 = ", " + r3[3]), "hwb(" + r3[0] + ", " + r3[1] + "%, " + r3[2] + "%" + e3 + ")";
  }, n2.to.keyword = function(r3) {
    return e2[r3.slice(0, 3)];
  };
});
U.to, U.get;
var D = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
var T = e(function(r2) {
  var e2 = {};
  for (var t2 in D)
    D.hasOwnProperty(t2) && (e2[D[t2]] = t2);
  var n2 = r2.exports = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
  for (var a2 in n2)
    if (n2.hasOwnProperty(a2)) {
      if (!("channels" in n2[a2]))
        throw new Error("missing channels property: " + a2);
      if (!("labels" in n2[a2]))
        throw new Error("missing channel labels property: " + a2);
      if (n2[a2].labels.length !== n2[a2].channels)
        throw new Error("channel and label counts mismatch: " + a2);
      var o2 = n2[a2].channels, i2 = n2[a2].labels;
      delete n2[a2].channels, delete n2[a2].labels, Object.defineProperty(n2[a2], "channels", { value: o2 }), Object.defineProperty(n2[a2], "labels", { value: i2 });
    }
  n2.rgb.hsl = function(r3) {
    var e3, t3, n3 = r3[0] / 255, a3 = r3[1] / 255, o3 = r3[2] / 255, i3 = Math.min(n3, a3, o3), l2 = Math.max(n3, a3, o3), s2 = l2 - i3;
    return l2 === i3 ? e3 = 0 : n3 === l2 ? e3 = (a3 - o3) / s2 : a3 === l2 ? e3 = 2 + (o3 - n3) / s2 : o3 === l2 && (e3 = 4 + (n3 - a3) / s2), (e3 = Math.min(60 * e3, 360)) < 0 && (e3 += 360), t3 = (i3 + l2) / 2, [e3, 100 * (l2 === i3 ? 0 : t3 <= 0.5 ? s2 / (l2 + i3) : s2 / (2 - l2 - i3)), 100 * t3];
  }, n2.rgb.hsv = function(r3) {
    var e3, t3, n3, a3, o3, i3 = r3[0] / 255, l2 = r3[1] / 255, s2 = r3[2] / 255, h2 = Math.max(i3, l2, s2), u2 = h2 - Math.min(i3, l2, s2), c2 = function(r4) {
      return (h2 - r4) / 6 / u2 + 0.5;
    };
    return u2 === 0 ? a3 = o3 = 0 : (o3 = u2 / h2, e3 = c2(i3), t3 = c2(l2), n3 = c2(s2), i3 === h2 ? a3 = n3 - t3 : l2 === h2 ? a3 = 1 / 3 + e3 - n3 : s2 === h2 && (a3 = 2 / 3 + t3 - e3), a3 < 0 ? a3 += 1 : a3 > 1 && (a3 -= 1)), [360 * a3, 100 * o3, 100 * h2];
  }, n2.rgb.hwb = function(r3) {
    var e3 = r3[0], t3 = r3[1], a3 = r3[2];
    return [n2.rgb.hsl(r3)[0], 100 * (1 / 255 * Math.min(e3, Math.min(t3, a3))), 100 * (a3 = 1 - 1 / 255 * Math.max(e3, Math.max(t3, a3)))];
  }, n2.rgb.cmyk = function(r3) {
    var e3, t3 = r3[0] / 255, n3 = r3[1] / 255, a3 = r3[2] / 255;
    return [100 * ((1 - t3 - (e3 = Math.min(1 - t3, 1 - n3, 1 - a3))) / (1 - e3) || 0), 100 * ((1 - n3 - e3) / (1 - e3) || 0), 100 * ((1 - a3 - e3) / (1 - e3) || 0), 100 * e3];
  }, n2.rgb.keyword = function(r3) {
    var t3 = e2[r3];
    if (t3)
      return t3;
    var n3, a3, o3, i3 = 1 / 0;
    for (var l2 in D)
      if (D.hasOwnProperty(l2)) {
        var s2 = D[l2], h2 = (a3 = r3, o3 = s2, Math.pow(a3[0] - o3[0], 2) + Math.pow(a3[1] - o3[1], 2) + Math.pow(a3[2] - o3[2], 2));
        h2 < i3 && (i3 = h2, n3 = l2);
      }
    return n3;
  }, n2.keyword.rgb = function(r3) {
    return D[r3];
  }, n2.rgb.xyz = function(r3) {
    var e3 = r3[0] / 255, t3 = r3[1] / 255, n3 = r3[2] / 255;
    return [100 * (0.4124 * (e3 = e3 > 0.04045 ? Math.pow((e3 + 0.055) / 1.055, 2.4) : e3 / 12.92) + 0.3576 * (t3 = t3 > 0.04045 ? Math.pow((t3 + 0.055) / 1.055, 2.4) : t3 / 12.92) + 0.1805 * (n3 = n3 > 0.04045 ? Math.pow((n3 + 0.055) / 1.055, 2.4) : n3 / 12.92)), 100 * (0.2126 * e3 + 0.7152 * t3 + 0.0722 * n3), 100 * (0.0193 * e3 + 0.1192 * t3 + 0.9505 * n3)];
  }, n2.rgb.lab = function(r3) {
    var e3 = n2.rgb.xyz(r3), t3 = e3[0], a3 = e3[1], o3 = e3[2];
    return a3 /= 100, o3 /= 108.883, t3 = (t3 /= 95.047) > 8856e-6 ? Math.pow(t3, 1 / 3) : 7.787 * t3 + 16 / 116, [116 * (a3 = a3 > 8856e-6 ? Math.pow(a3, 1 / 3) : 7.787 * a3 + 16 / 116) - 16, 500 * (t3 - a3), 200 * (a3 - (o3 = o3 > 8856e-6 ? Math.pow(o3, 1 / 3) : 7.787 * o3 + 16 / 116))];
  }, n2.hsl.rgb = function(r3) {
    var e3, t3, n3, a3, o3, i3 = r3[0] / 360, l2 = r3[1] / 100, s2 = r3[2] / 100;
    if (l2 === 0)
      return [o3 = 255 * s2, o3, o3];
    e3 = 2 * s2 - (t3 = s2 < 0.5 ? s2 * (1 + l2) : s2 + l2 - s2 * l2), a3 = [0, 0, 0];
    for (var h2 = 0; h2 < 3; h2++)
      (n3 = i3 + 1 / 3 * -(h2 - 1)) < 0 && n3++, n3 > 1 && n3--, o3 = 6 * n3 < 1 ? e3 + 6 * (t3 - e3) * n3 : 2 * n3 < 1 ? t3 : 3 * n3 < 2 ? e3 + (t3 - e3) * (2 / 3 - n3) * 6 : e3, a3[h2] = 255 * o3;
    return a3;
  }, n2.hsl.hsv = function(r3) {
    var e3 = r3[0], t3 = r3[1] / 100, n3 = r3[2] / 100, a3 = t3, o3 = Math.max(n3, 0.01);
    return t3 *= (n3 *= 2) <= 1 ? n3 : 2 - n3, a3 *= o3 <= 1 ? o3 : 2 - o3, [e3, 100 * (n3 === 0 ? 2 * a3 / (o3 + a3) : 2 * t3 / (n3 + t3)), 100 * ((n3 + t3) / 2)];
  }, n2.hsv.rgb = function(r3) {
    var e3 = r3[0] / 60, t3 = r3[1] / 100, n3 = r3[2] / 100, a3 = Math.floor(e3) % 6, o3 = e3 - Math.floor(e3), i3 = 255 * n3 * (1 - t3), l2 = 255 * n3 * (1 - t3 * o3), s2 = 255 * n3 * (1 - t3 * (1 - o3));
    switch (n3 *= 255, a3) {
      case 0:
        return [n3, s2, i3];
      case 1:
        return [l2, n3, i3];
      case 2:
        return [i3, n3, s2];
      case 3:
        return [i3, l2, n3];
      case 4:
        return [s2, i3, n3];
      case 5:
        return [n3, i3, l2];
    }
  }, n2.hsv.hsl = function(r3) {
    var e3, t3, n3, a3 = r3[0], o3 = r3[1] / 100, i3 = r3[2] / 100, l2 = Math.max(i3, 0.01);
    return n3 = (2 - o3) * i3, t3 = o3 * l2, [a3, 100 * (t3 = (t3 /= (e3 = (2 - o3) * l2) <= 1 ? e3 : 2 - e3) || 0), 100 * (n3 /= 2)];
  }, n2.hwb.rgb = function(r3) {
    var e3, t3, n3, a3, o3, i3, l2, s2 = r3[0] / 360, h2 = r3[1] / 100, u2 = r3[2] / 100, c2 = h2 + u2;
    switch (c2 > 1 && (h2 /= c2, u2 /= c2), n3 = 6 * s2 - (e3 = Math.floor(6 * s2)), (1 & e3) != 0 && (n3 = 1 - n3), a3 = h2 + n3 * ((t3 = 1 - u2) - h2), e3) {
      default:
      case 6:
      case 0:
        o3 = t3, i3 = a3, l2 = h2;
        break;
      case 1:
        o3 = a3, i3 = t3, l2 = h2;
        break;
      case 2:
        o3 = h2, i3 = t3, l2 = a3;
        break;
      case 3:
        o3 = h2, i3 = a3, l2 = t3;
        break;
      case 4:
        o3 = a3, i3 = h2, l2 = t3;
        break;
      case 5:
        o3 = t3, i3 = h2, l2 = a3;
    }
    return [255 * o3, 255 * i3, 255 * l2];
  }, n2.cmyk.rgb = function(r3) {
    var e3 = r3[0] / 100, t3 = r3[1] / 100, n3 = r3[2] / 100, a3 = r3[3] / 100;
    return [255 * (1 - Math.min(1, e3 * (1 - a3) + a3)), 255 * (1 - Math.min(1, t3 * (1 - a3) + a3)), 255 * (1 - Math.min(1, n3 * (1 - a3) + a3))];
  }, n2.xyz.rgb = function(r3) {
    var e3, t3, n3, a3 = r3[0] / 100, o3 = r3[1] / 100, i3 = r3[2] / 100;
    return t3 = -0.9689 * a3 + 1.8758 * o3 + 0.0415 * i3, n3 = 0.0557 * a3 + -0.204 * o3 + 1.057 * i3, e3 = (e3 = 3.2406 * a3 + -1.5372 * o3 + -0.4986 * i3) > 31308e-7 ? 1.055 * Math.pow(e3, 1 / 2.4) - 0.055 : 12.92 * e3, t3 = t3 > 31308e-7 ? 1.055 * Math.pow(t3, 1 / 2.4) - 0.055 : 12.92 * t3, n3 = n3 > 31308e-7 ? 1.055 * Math.pow(n3, 1 / 2.4) - 0.055 : 12.92 * n3, [255 * (e3 = Math.min(Math.max(0, e3), 1)), 255 * (t3 = Math.min(Math.max(0, t3), 1)), 255 * (n3 = Math.min(Math.max(0, n3), 1))];
  }, n2.xyz.lab = function(r3) {
    var e3 = r3[0], t3 = r3[1], n3 = r3[2];
    return t3 /= 100, n3 /= 108.883, e3 = (e3 /= 95.047) > 8856e-6 ? Math.pow(e3, 1 / 3) : 7.787 * e3 + 16 / 116, [116 * (t3 = t3 > 8856e-6 ? Math.pow(t3, 1 / 3) : 7.787 * t3 + 16 / 116) - 16, 500 * (e3 - t3), 200 * (t3 - (n3 = n3 > 8856e-6 ? Math.pow(n3, 1 / 3) : 7.787 * n3 + 16 / 116))];
  }, n2.lab.xyz = function(r3) {
    var e3, t3, n3, a3 = r3[0];
    e3 = r3[1] / 500 + (t3 = (a3 + 16) / 116), n3 = t3 - r3[2] / 200;
    var o3 = Math.pow(t3, 3), i3 = Math.pow(e3, 3), l2 = Math.pow(n3, 3);
    return t3 = o3 > 8856e-6 ? o3 : (t3 - 16 / 116) / 7.787, e3 = i3 > 8856e-6 ? i3 : (e3 - 16 / 116) / 7.787, n3 = l2 > 8856e-6 ? l2 : (n3 - 16 / 116) / 7.787, [e3 *= 95.047, t3 *= 100, n3 *= 108.883];
  }, n2.lab.lch = function(r3) {
    var e3, t3 = r3[0], n3 = r3[1], a3 = r3[2];
    return (e3 = 360 * Math.atan2(a3, n3) / 2 / Math.PI) < 0 && (e3 += 360), [t3, Math.sqrt(n3 * n3 + a3 * a3), e3];
  }, n2.lch.lab = function(r3) {
    var e3, t3 = r3[0], n3 = r3[1];
    return e3 = r3[2] / 360 * 2 * Math.PI, [t3, n3 * Math.cos(e3), n3 * Math.sin(e3)];
  }, n2.rgb.ansi16 = function(r3) {
    var e3 = r3[0], t3 = r3[1], a3 = r3[2], o3 = 1 in arguments ? arguments[1] : n2.rgb.hsv(r3)[2];
    if ((o3 = Math.round(o3 / 50)) === 0)
      return 30;
    var i3 = 30 + (Math.round(a3 / 255) << 2 | Math.round(t3 / 255) << 1 | Math.round(e3 / 255));
    return o3 === 2 && (i3 += 60), i3;
  }, n2.hsv.ansi16 = function(r3) {
    return n2.rgb.ansi16(n2.hsv.rgb(r3), r3[2]);
  }, n2.rgb.ansi256 = function(r3) {
    var e3 = r3[0], t3 = r3[1], n3 = r3[2];
    return e3 === t3 && t3 === n3 ? e3 < 8 ? 16 : e3 > 248 ? 231 : Math.round((e3 - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(e3 / 255 * 5) + 6 * Math.round(t3 / 255 * 5) + Math.round(n3 / 255 * 5);
  }, n2.ansi16.rgb = function(r3) {
    var e3 = r3 % 10;
    if (e3 === 0 || e3 === 7)
      return r3 > 50 && (e3 += 3.5), [e3 = e3 / 10.5 * 255, e3, e3];
    var t3 = 0.5 * (1 + ~~(r3 > 50));
    return [(1 & e3) * t3 * 255, (e3 >> 1 & 1) * t3 * 255, (e3 >> 2 & 1) * t3 * 255];
  }, n2.ansi256.rgb = function(r3) {
    if (r3 >= 232) {
      var e3 = 10 * (r3 - 232) + 8;
      return [e3, e3, e3];
    }
    var t3;
    return r3 -= 16, [Math.floor(r3 / 36) / 5 * 255, Math.floor((t3 = r3 % 36) / 6) / 5 * 255, t3 % 6 / 5 * 255];
  }, n2.rgb.hex = function(r3) {
    var e3 = (((255 & Math.round(r3[0])) << 16) + ((255 & Math.round(r3[1])) << 8) + (255 & Math.round(r3[2]))).toString(16).toUpperCase();
    return "000000".substring(e3.length) + e3;
  }, n2.hex.rgb = function(r3) {
    var e3 = r3.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!e3)
      return [0, 0, 0];
    var t3 = e3[0];
    e3[0].length === 3 && (t3 = t3.split("").map(function(r4) {
      return r4 + r4;
    }).join(""));
    var n3 = parseInt(t3, 16);
    return [n3 >> 16 & 255, n3 >> 8 & 255, 255 & n3];
  }, n2.rgb.hcg = function(r3) {
    var e3, t3 = r3[0] / 255, n3 = r3[1] / 255, a3 = r3[2] / 255, o3 = Math.max(Math.max(t3, n3), a3), i3 = Math.min(Math.min(t3, n3), a3), l2 = o3 - i3;
    return e3 = l2 <= 0 ? 0 : o3 === t3 ? (n3 - a3) / l2 % 6 : o3 === n3 ? 2 + (a3 - t3) / l2 : 4 + (t3 - n3) / l2 + 4, e3 /= 6, [360 * (e3 %= 1), 100 * l2, 100 * (l2 < 1 ? i3 / (1 - l2) : 0)];
  }, n2.hsl.hcg = function(r3) {
    var e3 = r3[1] / 100, t3 = r3[2] / 100, n3 = 1, a3 = 0;
    return (n3 = t3 < 0.5 ? 2 * e3 * t3 : 2 * e3 * (1 - t3)) < 1 && (a3 = (t3 - 0.5 * n3) / (1 - n3)), [r3[0], 100 * n3, 100 * a3];
  }, n2.hsv.hcg = function(r3) {
    var e3 = r3[1] / 100, t3 = r3[2] / 100, n3 = e3 * t3, a3 = 0;
    return n3 < 1 && (a3 = (t3 - n3) / (1 - n3)), [r3[0], 100 * n3, 100 * a3];
  }, n2.hcg.rgb = function(r3) {
    var e3 = r3[0] / 360, t3 = r3[1] / 100, n3 = r3[2] / 100;
    if (t3 === 0)
      return [255 * n3, 255 * n3, 255 * n3];
    var a3, o3 = [0, 0, 0], i3 = e3 % 1 * 6, l2 = i3 % 1, s2 = 1 - l2;
    switch (Math.floor(i3)) {
      case 0:
        o3[0] = 1, o3[1] = l2, o3[2] = 0;
        break;
      case 1:
        o3[0] = s2, o3[1] = 1, o3[2] = 0;
        break;
      case 2:
        o3[0] = 0, o3[1] = 1, o3[2] = l2;
        break;
      case 3:
        o3[0] = 0, o3[1] = s2, o3[2] = 1;
        break;
      case 4:
        o3[0] = l2, o3[1] = 0, o3[2] = 1;
        break;
      default:
        o3[0] = 1, o3[1] = 0, o3[2] = s2;
    }
    return a3 = (1 - t3) * n3, [255 * (t3 * o3[0] + a3), 255 * (t3 * o3[1] + a3), 255 * (t3 * o3[2] + a3)];
  }, n2.hcg.hsv = function(r3) {
    var e3 = r3[1] / 100, t3 = e3 + r3[2] / 100 * (1 - e3), n3 = 0;
    return t3 > 0 && (n3 = e3 / t3), [r3[0], 100 * n3, 100 * t3];
  }, n2.hcg.hsl = function(r3) {
    var e3 = r3[1] / 100, t3 = r3[2] / 100 * (1 - e3) + 0.5 * e3, n3 = 0;
    return t3 > 0 && t3 < 0.5 ? n3 = e3 / (2 * t3) : t3 >= 0.5 && t3 < 1 && (n3 = e3 / (2 * (1 - t3))), [r3[0], 100 * n3, 100 * t3];
  }, n2.hcg.hwb = function(r3) {
    var e3 = r3[1] / 100, t3 = e3 + r3[2] / 100 * (1 - e3);
    return [r3[0], 100 * (t3 - e3), 100 * (1 - t3)];
  }, n2.hwb.hcg = function(r3) {
    var e3 = r3[1] / 100, t3 = 1 - r3[2] / 100, n3 = t3 - e3, a3 = 0;
    return n3 < 1 && (a3 = (t3 - n3) / (1 - n3)), [r3[0], 100 * n3, 100 * a3];
  }, n2.apple.rgb = function(r3) {
    return [r3[0] / 65535 * 255, r3[1] / 65535 * 255, r3[2] / 65535 * 255];
  }, n2.rgb.apple = function(r3) {
    return [r3[0] / 255 * 65535, r3[1] / 255 * 65535, r3[2] / 255 * 65535];
  }, n2.gray.rgb = function(r3) {
    return [r3[0] / 100 * 255, r3[0] / 100 * 255, r3[0] / 100 * 255];
  }, n2.gray.hsl = n2.gray.hsv = function(r3) {
    return [0, 0, r3[0]];
  }, n2.gray.hwb = function(r3) {
    return [0, 100, r3[0]];
  }, n2.gray.cmyk = function(r3) {
    return [0, 0, 0, r3[0]];
  }, n2.gray.lab = function(r3) {
    return [r3[0], 0, 0];
  }, n2.gray.hex = function(r3) {
    var e3 = 255 & Math.round(r3[0] / 100 * 255), t3 = ((e3 << 16) + (e3 << 8) + e3).toString(16).toUpperCase();
    return "000000".substring(t3.length) + t3;
  }, n2.rgb.gray = function(r3) {
    return [(r3[0] + r3[1] + r3[2]) / 3 / 255 * 100];
  };
});
function J(r2) {
  var e2 = function() {
    for (var r3 = {}, e3 = Object.keys(T), t3 = e3.length, n3 = 0; n3 < t3; n3++)
      r3[e3[n3]] = { distance: -1, parent: null };
    return r3;
  }(), t2 = [r2];
  for (e2[r2].distance = 0; t2.length; )
    for (var n2 = t2.pop(), a2 = Object.keys(T[n2]), o2 = a2.length, i2 = 0; i2 < o2; i2++) {
      var l2 = a2[i2], s2 = e2[l2];
      s2.distance === -1 && (s2.distance = e2[n2].distance + 1, s2.parent = n2, t2.unshift(l2));
    }
  return e2;
}
function R(r2, e2) {
  return function(t2) {
    return e2(r2(t2));
  };
}
function G(r2, e2) {
  for (var t2 = [e2[r2].parent, r2], n2 = T[e2[r2].parent][r2], a2 = e2[r2].parent; e2[a2].parent; )
    t2.unshift(e2[a2].parent), n2 = R(T[e2[a2].parent][a2], n2), a2 = e2[a2].parent;
  return n2.conversion = t2, n2;
}
T.rgb, T.hsl, T.hsv, T.hwb, T.cmyk, T.xyz, T.lab, T.lch, T.hex, T.keyword, T.ansi16, T.ansi256, T.hcg, T.apple, T.gray;
var B = {};
Object.keys(T).forEach(function(r2) {
  B[r2] = {}, Object.defineProperty(B[r2], "channels", { value: T[r2].channels }), Object.defineProperty(B[r2], "labels", { value: T[r2].labels });
  var e2 = function(r3) {
    for (var e3 = J(r3), t2 = {}, n2 = Object.keys(e3), a2 = n2.length, o2 = 0; o2 < a2; o2++) {
      var i2 = n2[o2];
      e3[i2].parent !== null && (t2[i2] = G(i2, e3));
    }
    return t2;
  }(r2);
  Object.keys(e2).forEach(function(t2) {
    var n2 = e2[t2];
    B[r2][t2] = function(r3) {
      var e3 = function(e4) {
        if (e4 == null)
          return e4;
        arguments.length > 1 && (e4 = Array.prototype.slice.call(arguments));
        var t3 = r3(e4);
        if (typeof t3 == "object")
          for (var n3 = t3.length, a2 = 0; a2 < n3; a2++)
            t3[a2] = Math.round(t3[a2]);
        return t3;
      };
      return "conversion" in r3 && (e3.conversion = r3.conversion), e3;
    }(n2), B[r2][t2].raw = function(r3) {
      var e3 = function(e4) {
        return e4 == null ? e4 : (arguments.length > 1 && (e4 = Array.prototype.slice.call(arguments)), r3(e4));
      };
      return "conversion" in r3 && (e3.conversion = r3.conversion), e3;
    }(n2);
  });
});
var H = B;
var K = [].slice;
var Q = ["keyword", "gray", "hex"];
var V = {};
Object.keys(H).forEach(function(r2) {
  V[K.call(H[r2].labels).sort().join("")] = r2;
});
var W = {};
function X(r2, e2) {
  if (!(this instanceof X))
    return new X(r2, e2);
  if (e2 && e2 in Q && (e2 = null), e2 && !(e2 in H))
    throw new Error("Unknown model: " + e2);
  var t2, n2;
  if (r2 == null)
    this.model = "rgb", this.color = [0, 0, 0], this.valpha = 1;
  else if (r2 instanceof X)
    this.model = r2.model, this.color = r2.color.slice(), this.valpha = r2.valpha;
  else if (typeof r2 == "string") {
    var a2 = U.get(r2);
    if (a2 === null)
      throw new Error("Unable to parse color from string: " + r2);
    this.model = a2.model, n2 = H[this.model].channels, this.color = a2.value.slice(0, n2), this.valpha = typeof a2.value[n2] == "number" ? a2.value[n2] : 1;
  } else if (r2.length) {
    this.model = e2 || "rgb", n2 = H[this.model].channels;
    var o2 = K.call(r2, 0, n2);
    this.color = er(o2, n2), this.valpha = typeof r2[n2] == "number" ? r2[n2] : 1;
  } else if (typeof r2 == "number")
    r2 &= 16777215, this.model = "rgb", this.color = [r2 >> 16 & 255, r2 >> 8 & 255, 255 & r2], this.valpha = 1;
  else {
    this.valpha = 1;
    var i2 = Object.keys(r2);
    "alpha" in r2 && (i2.splice(i2.indexOf("alpha"), 1), this.valpha = typeof r2.alpha == "number" ? r2.alpha : 0);
    var l2 = i2.sort().join("");
    if (!(l2 in V))
      throw new Error("Unable to parse color from object: " + JSON.stringify(r2));
    this.model = V[l2];
    var s2 = H[this.model].labels, h2 = [];
    for (t2 = 0; t2 < s2.length; t2++)
      h2.push(r2[s2[t2]]);
    this.color = er(h2);
  }
  if (W[this.model])
    for (n2 = H[this.model].channels, t2 = 0; t2 < n2; t2++) {
      var u2 = W[this.model][t2];
      u2 && (this.color[t2] = u2(this.color[t2]));
    }
  this.valpha = Math.max(0, Math.min(1, this.valpha)), Object.freeze && Object.freeze(this);
}
function Y(r2, e2, t2) {
  return (r2 = Array.isArray(r2) ? r2 : [r2]).forEach(function(r3) {
    (W[r3] || (W[r3] = []))[e2] = t2;
  }), r2 = r2[0], function(n2) {
    var a2;
    return arguments.length ? (t2 && (n2 = t2(n2)), (a2 = this[r2]()).color[e2] = n2, a2) : (a2 = this[r2]().color[e2], t2 && (a2 = t2(a2)), a2);
  };
}
function Z(r2) {
  return function(e2) {
    return Math.max(0, Math.min(r2, e2));
  };
}
function rr(r2) {
  return Array.isArray(r2) ? r2 : [r2];
}
function er(r2, e2) {
  for (var t2 = 0; t2 < e2; t2++)
    typeof r2[t2] != "number" && (r2[t2] = 0);
  return r2;
}
X.prototype = { toString: function() {
  return this.string();
}, toJSON: function() {
  return this[this.model]();
}, string: function(r2) {
  var e2 = this.model in U.to ? this : this.rgb(), t2 = (e2 = e2.round(typeof r2 == "number" ? r2 : 1)).valpha === 1 ? e2.color : e2.color.concat(this.valpha);
  return U.to[e2.model](t2);
}, percentString: function(r2) {
  var e2 = this.rgb().round(typeof r2 == "number" ? r2 : 1), t2 = e2.valpha === 1 ? e2.color : e2.color.concat(this.valpha);
  return U.to.rgb.percent(t2);
}, array: function() {
  return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
}, object: function() {
  for (var r2 = {}, e2 = H[this.model].channels, t2 = H[this.model].labels, n2 = 0; n2 < e2; n2++)
    r2[t2[n2]] = this.color[n2];
  return this.valpha !== 1 && (r2.alpha = this.valpha), r2;
}, unitArray: function() {
  var r2 = this.rgb().color;
  return r2[0] /= 255, r2[1] /= 255, r2[2] /= 255, this.valpha !== 1 && r2.push(this.valpha), r2;
}, unitObject: function() {
  var r2 = this.rgb().object();
  return r2.r /= 255, r2.g /= 255, r2.b /= 255, this.valpha !== 1 && (r2.alpha = this.valpha), r2;
}, round: function(r2) {
  return r2 = Math.max(r2 || 0, 0), new X(this.color.map(function(r3) {
    return function(e2) {
      return function(r4, e3) {
        return Number(r4.toFixed(e3));
      }(e2, r3);
    };
  }(r2)).concat(this.valpha), this.model);
}, alpha: function(r2) {
  return arguments.length ? new X(this.color.concat(Math.max(0, Math.min(1, r2))), this.model) : this.valpha;
}, red: Y("rgb", 0, Z(255)), green: Y("rgb", 1, Z(255)), blue: Y("rgb", 2, Z(255)), hue: Y(["hsl", "hsv", "hsl", "hwb", "hcg"], 0, function(r2) {
  return (r2 % 360 + 360) % 360;
}), saturationl: Y("hsl", 1, Z(100)), lightness: Y("hsl", 2, Z(100)), saturationv: Y("hsv", 1, Z(100)), value: Y("hsv", 2, Z(100)), chroma: Y("hcg", 1, Z(100)), gray: Y("hcg", 2, Z(100)), white: Y("hwb", 1, Z(100)), wblack: Y("hwb", 2, Z(100)), cyan: Y("cmyk", 0, Z(100)), magenta: Y("cmyk", 1, Z(100)), yellow: Y("cmyk", 2, Z(100)), black: Y("cmyk", 3, Z(100)), x: Y("xyz", 0, Z(100)), y: Y("xyz", 1, Z(100)), z: Y("xyz", 2, Z(100)), l: Y("lab", 0, Z(100)), a: Y("lab", 1), b: Y("lab", 2), keyword: function(r2) {
  return arguments.length ? new X(r2) : H[this.model].keyword(this.color);
}, hex: function(r2) {
  return arguments.length ? new X(r2) : U.to.hex(this.rgb().round().color);
}, rgbNumber: function() {
  var r2 = this.rgb().color;
  return (255 & r2[0]) << 16 | (255 & r2[1]) << 8 | 255 & r2[2];
}, luminosity: function() {
  for (var r2 = this.rgb().color, e2 = [], t2 = 0; t2 < r2.length; t2++) {
    var n2 = r2[t2] / 255;
    e2[t2] = n2 <= 0.03928 ? n2 / 12.92 : Math.pow((n2 + 0.055) / 1.055, 2.4);
  }
  return 0.2126 * e2[0] + 0.7152 * e2[1] + 0.0722 * e2[2];
}, contrast: function(r2) {
  var e2 = this.luminosity(), t2 = r2.luminosity();
  return e2 > t2 ? (e2 + 0.05) / (t2 + 0.05) : (t2 + 0.05) / (e2 + 0.05);
}, level: function(r2) {
  var e2 = this.contrast(r2);
  return e2 >= 7.1 ? "AAA" : e2 >= 4.5 ? "AA" : "";
}, isDark: function() {
  var r2 = this.rgb().color;
  return (299 * r2[0] + 587 * r2[1] + 114 * r2[2]) / 1e3 < 128;
}, isLight: function() {
  return !this.isDark();
}, negate: function() {
  for (var r2 = this.rgb(), e2 = 0; e2 < 3; e2++)
    r2.color[e2] = 255 - r2.color[e2];
  return r2;
}, lighten: function(r2) {
  var e2 = this.hsl();
  return e2.color[2] += e2.color[2] * r2, e2;
}, darken: function(r2) {
  var e2 = this.hsl();
  return e2.color[2] -= e2.color[2] * r2, e2;
}, saturate: function(r2) {
  var e2 = this.hsl();
  return e2.color[1] += e2.color[1] * r2, e2;
}, desaturate: function(r2) {
  var e2 = this.hsl();
  return e2.color[1] -= e2.color[1] * r2, e2;
}, whiten: function(r2) {
  var e2 = this.hwb();
  return e2.color[1] += e2.color[1] * r2, e2;
}, blacken: function(r2) {
  var e2 = this.hwb();
  return e2.color[2] += e2.color[2] * r2, e2;
}, grayscale: function() {
  var r2 = this.rgb().color, e2 = 0.3 * r2[0] + 0.59 * r2[1] + 0.11 * r2[2];
  return X.rgb(e2, e2, e2);
}, fade: function(r2) {
  return this.alpha(this.valpha - this.valpha * r2);
}, opaquer: function(r2) {
  return this.alpha(this.valpha + this.valpha * r2);
}, rotate: function(r2) {
  var e2 = this.hsl(), t2 = e2.color[0];
  return t2 = (t2 = (t2 + r2) % 360) < 0 ? 360 + t2 : t2, e2.color[0] = t2, e2;
}, mix: function(r2, e2) {
  if (!r2 || !r2.rgb)
    throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof r2);
  var t2 = r2.rgb(), n2 = this.rgb(), a2 = e2 === void 0 ? 0.5 : e2, o2 = 2 * a2 - 1, i2 = t2.alpha() - n2.alpha(), l2 = ((o2 * i2 == -1 ? o2 : (o2 + i2) / (1 + o2 * i2)) + 1) / 2, s2 = 1 - l2;
  return X.rgb(l2 * t2.red() + s2 * n2.red(), l2 * t2.green() + s2 * n2.green(), l2 * t2.blue() + s2 * n2.blue(), t2.alpha() * a2 + n2.alpha() * (1 - a2));
} }, Object.keys(H).forEach(function(r2) {
  if (Q.indexOf(r2) === -1) {
    var e2 = H[r2].channels;
    X.prototype[r2] = function() {
      if (this.model === r2)
        return new X(this);
      if (arguments.length)
        return new X(arguments, r2);
      var t2 = typeof arguments[e2] == "number" ? e2 : this.valpha;
      return new X(rr(H[this.model][r2].raw(this.color)).concat(t2), r2);
    }, X[r2] = function(t2) {
      return typeof t2 == "number" && (t2 = er(K.call(arguments), e2)), new X(t2, r2);
    };
  }
});
var tr = X;
function index_es_default(r2, e2) {
  e2 === void 0 && (e2 = {});
  var t2 = [], n2 = 4.5, a2 = 3, o2 = 7, i2 = 4.5, l2 = Object.assign({ threshold: 0, compact: false, uniq: true }, e2);
  if (Array.isArray(r2)) {
    var s2 = r2;
    l2.uniq && (s2 = L(r2)), s2 !== void 0 && (t2 = s2.map(function(r3) {
      return tr(r3);
    }));
  } else {
    if (typeof r2 != "object")
      return console.error("Must provide an array or object"), false;
    t2 = Object.keys(r2).map(function(e3) {
      return tr(r2[e3]);
    }), l2.uniq && (t2 = L(t2));
  }
  return t2.map(function(r3) {
    var e3 = l2.compact ? { hex: "", combinations: [] } : { color: r3.color, model: r3.model, valpha: r3.valpha, hex: "", combinations: [] };
    return e3.hex = r3.hex(), e3.combinations = t2.filter(function(e4) {
      return r3 !== e4;
    }).filter(function(e4) {
      return l2.threshold === void 0 || r3.contrast(e4) > l2.threshold;
    }).map(function(e4) {
      var t3 = l2.compact ? { accessibility: { aa: false, aaLarge: false, aaa: false, aaaLarge: false }, hex: "", contrast: 0 } : { accessibility: { aa: false, aaLarge: false, aaa: false, aaaLarge: false }, hex: "", contrast: 0, color: e4.color, model: e4.model, valpha: e4.valpha };
      return (t3 = Object.assign(t3, { hex: e4.hex(), contrast: r3.contrast(e4) })).accessibility = { aa: t3.contrast >= n2, aaLarge: t3.contrast >= a2, aaa: t3.contrast >= o2, aaaLarge: t3.contrast >= i2 }, t3;
    }), e3;
  });
}

// src/utils.ts
var import_tokens_raw = __toESM(require("@twilio-paste/design-tokens/dist/tokens.raw.json"));
var import_camelCase = __toESM(require_camelCase());
var getNumberOfTextFailures = (ratings) => ratings.filter((rating) => {
  return !rating.aa;
}).length;
var getNumberOfUIControlFailures = (ratings) => ratings.filter((rating) => {
  return !rating.aaLarge;
}).length;
var flattenCategorizedTokens = (tokens) => {
  let flatTheme = {};
  Object.values(tokens).forEach((value) => {
    flatTheme = __spreadValues(__spreadValues({}, flatTheme), value);
  });
  return flatTheme;
};
var convertRawTokenJSONToArray = (rawTokens) => {
  const rawTokenNames = Object.keys(rawTokens);
  return rawTokenNames.reduce((tokens, token) => {
    return [rawTokens[token], ...tokens];
  }, []);
};
var getTokensWithTextContrastRequirements = (rawTokens) => convertRawTokenJSONToArray(rawTokens).filter((token) => token.type === "color" && token.text_contrast_pairing != null);
var getTokensWithUIControlContrastRequirements = (rawTokens) => convertRawTokenJSONToArray(rawTokens).filter((token) => token.type === "color" && token.uicontrol_contrast_pairing != null);
var getTokensWithDataVisualizationContrastRequirements = (rawTokens) => convertRawTokenJSONToArray(rawTokens).filter((token) => token.type === "color" && token.data_visualization_contrast_pairing != null);
var getContrastRatingForTokenPairing = (filteredTokens, tokens, pairingKey) => {
  return filteredTokens.reduce((tokenRatings, token) => {
    const tokensToCompare = token[pairingKey];
    if (tokensToCompare !== void 0) {
      const ratings = tokensToCompare.map((tokenToCompare) => {
        const baseTokenName = (0, import_camelCase.default)(token.name);
        const baseTokenValue = tokens[baseTokenName];
        const tokenToCompareName = (0, import_camelCase.default)(tokenToCompare);
        const tokenToCompareValue = tokens[tokenToCompareName];
        let comboRating = { aa: false, aaLarge: false, aaa: false, aaaLarge: false };
        let comboContrast = 0;
        let combos = false;
        if (baseTokenValue != null && tokenToCompareValue != null) {
          combos = index_es_default([baseTokenValue, tokenToCompareValue]);
        }
        if (combos !== false && combos[0].combinations[0] !== void 0) {
          comboRating = combos[0].combinations[0].accessibility;
          comboContrast = combos[0].combinations[0].contrast;
        }
        return __spreadValues({
          foreground: token.name,
          foregroundValue: baseTokenValue,
          background: tokenToCompare,
          backgroundValue: tokenToCompareValue,
          contrast: comboContrast
        }, comboRating);
      }).filter((rating) => {
        if (rating.foregroundValue === void 0 || rating.backgroundValue === void 0) {
          return false;
        }
        return true;
      });
      return [...tokenRatings, ...ratings];
    }
    return tokenRatings;
  }, []);
};
var getContrastRatingsOfTokensWithTextContrastRequirements = (tokens) => {
  const defaultThemeRawJSON = import_tokens_raw.default.props;
  const tokenWithTextContrastRequirements = getTokensWithTextContrastRequirements(defaultThemeRawJSON);
  const flattenedTokens = flattenCategorizedTokens(tokens);
  return getContrastRatingForTokenPairing(tokenWithTextContrastRequirements, flattenedTokens, "text_contrast_pairing");
};
var getContrastRatingsOfTokensWithUIControlContrastRequirements = (tokens) => {
  const defaultThemeRawJSON = import_tokens_raw.default.props;
  const tokenWithUIControlContrastRequirements = getTokensWithUIControlContrastRequirements(defaultThemeRawJSON);
  const flattenedTokens = flattenCategorizedTokens(tokens);
  return getContrastRatingForTokenPairing(tokenWithUIControlContrastRequirements, flattenedTokens, "uicontrol_contrast_pairing");
};
var getContrastRatingsOfTokensWithDataVisualizationContrastRequirements = (tokens) => {
  const defaultThemeRawJSON = import_tokens_raw.default.props;
  const tokenWithDataVisualizationContrastRequirements = getTokensWithDataVisualizationContrastRequirements(defaultThemeRawJSON);
  const flattenedTokens = flattenCategorizedTokens(tokens);
  return getContrastRatingForTokenPairing(tokenWithDataVisualizationContrastRequirements, flattenedTokens, "data_visualization_contrast_pairing");
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  convertRawTokenJSONToArray,
  flattenCategorizedTokens,
  getContrastRatingForTokenPairing,
  getContrastRatingsOfTokensWithDataVisualizationContrastRequirements,
  getContrastRatingsOfTokensWithTextContrastRequirements,
  getContrastRatingsOfTokensWithUIControlContrastRequirements,
  getNumberOfTextFailures,
  getNumberOfUIControlFailures,
  getTokensWithDataVisualizationContrastRequirements,
  getTokensWithTextContrastRequirements,
  getTokensWithUIControlContrastRequirements
});
