"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Tooltip: () => Tooltip,
  useTooltipState: () => import_tooltip_primitive2.useTooltipPrimitiveState
});
module.exports = __toCommonJS(src_exports);
var React2 = __toESM(require("react"));
var import_prop_types = require("prop-types");
var import_uid_library = require("@twilio-paste/uid-library");
var import_box = require("@twilio-paste/box");
var import_theme2 = require("@twilio-paste/theme");
var import_text = require("@twilio-paste/text");
var import_tooltip_primitive2 = require("@twilio-paste/tooltip-primitive");

// src/TooltipArrow.tsx
var React = __toESM(require("react"));
var import_tooltip_primitive = require("@twilio-paste/tooltip-primitive");
var import_theme = require("@twilio-paste/theme");
var TooltipArrow = (props) => {
  const theme = (0, import_theme.useTheme)();
  return /* @__PURE__ */ React.createElement(
    import_tooltip_primitive.TooltipPrimitiveArrow,
    __spreadProps(__spreadValues({}, props), {
      size: theme.fontSizes.fontSize50,
      stroke: theme.borderColors.colorBorderInverseWeaker,
      fill: theme.backgroundColors.colorBackgroundBodyInverse
    })
  );
};
TooltipArrow.displayName = "TooltipArrow";

// src/index.tsx
var StyledTooltip = React2.forwardRef((_a, ref) => {
  var _b = _a, { style, element } = _b, props = __objRest(_b, ["style", "element"]);
  return /* @__PURE__ */ React2.createElement(
    import_box.Box,
    __spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
      backgroundColor: "colorBackgroundBodyInverse",
      borderColor: "colorBorderInverseWeaker",
      borderRadius: "borderRadius20",
      borderStyle: "solid",
      borderWidth: "borderWidth10",
      boxShadow: "shadow",
      element,
      maxWidth: "size30",
      padding: "space30",
      paddingBottom: "space20",
      paddingTop: "space20",
      zIndex: "zIndex90",
      _focus: { outline: "none" },
      style,
      ref
    })
  );
});
StyledTooltip.displayName = "StyledTooltip";
var Tooltip = React2.forwardRef(
  (_a, ref) => {
    var _b = _a, { baseId, children, element = "TOOLTIP", state, text } = _b, props = __objRest(_b, ["baseId", "children", "element", "state", "text"]);
    const tooltip = state || (0, import_tooltip_primitive2.useTooltipPrimitiveState)(__spreadValues({ baseId: `paste-tooltip-${(0, import_uid_library.useUID)()}` }, props));
    return /* @__PURE__ */ React2.createElement(React2.Fragment, null, React2.Children.only(
      /* @__PURE__ */ React2.createElement(import_tooltip_primitive2.TooltipPrimitiveReference, __spreadValues(__spreadProps(__spreadValues({}, tooltip), { ref }), children.props), (referenceProps) => React2.cloneElement(children, referenceProps))
    ), /* @__PURE__ */ React2.createElement(import_tooltip_primitive2.TooltipPrimitive, __spreadProps(__spreadValues(__spreadValues({ element }, tooltip), props), { as: StyledTooltip }), /* @__PURE__ */ React2.createElement(import_theme2.StyledBase, null, /* @__PURE__ */ React2.createElement(TooltipArrow, __spreadValues({}, tooltip)), /* @__PURE__ */ React2.createElement(import_text.Text, { element: `${element}_TEXT`, as: "span", color: "colorTextInverse" }, text))));
  }
);
if (false) {
  Tooltip.propTypes = {
    children: PropTypes.element.isRequired,
    text: PropTypes.string.isRequired,
    element: PropTypes.string
  };
}
Tooltip.displayName = "Tooltip";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Tooltip,
  useTooltipState
});
