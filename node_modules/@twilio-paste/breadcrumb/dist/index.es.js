var __defProp=Object.defineProperty,__defProps=Object.defineProperties;var __getOwnPropDescs=Object.getOwnPropertyDescriptors;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:!0,configurable:!0,writable:!0,value}):obj[key]=value,__spreadValues=(a,b)=>{for(var prop in b||(b={}))__hasOwnProp.call(b,prop)&&__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b))__propIsEnum.call(b,prop)&&__defNormalProp(a,prop,b[prop]);return a},__spreadProps=(a,b)=>__defProps(a,__getOwnPropDescs(b));var __objRest=(source,exclude)=>{var target={};for(var prop in source)__hasOwnProp.call(source,prop)&&exclude.indexOf(prop)<0&&(target[prop]=source[prop]);if(source!=null&&__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(source))exclude.indexOf(prop)<0&&__propIsEnum.call(source,prop)&&(target[prop]=source[prop]);return target};import*as React from"react";import PropTypes from"prop-types";import{Box,safelySpreadBoxProps}from"@twilio-paste/box";import{Anchor}from"@twilio-paste/anchor";import{Text,safelySpreadTextProps}from"@twilio-paste/text";import{useUIDSeed}from"@twilio-paste/uid-library";var BreadcrumbSeparator=({element})=>React.createElement(Text,{as:"span",color:"colorTextWeak",fontSize:"fontSize20",lineHeight:"lineHeight20",paddingLeft:"space20",paddingRight:"space20",role:"presentation",element:`${element}_SEPARATOR`},"/");BreadcrumbSeparator.displayName="BreadcrumbSeparator";var DEFAULT_ELEMENT_NAME="BREADCRUMB",BreadcrumbItem=React.forwardRef((_a,ref)=>{var _b=_a,{children,element,parentElement,href,last}=_b,props=__objRest(_b,["children","element","parentElement","href","last"]);let elementName=element||parentElement||DEFAULT_ELEMENT_NAME;return React.createElement(Box,{alignItems:"center",as:"li",color:"colorText",display:"inline-flex",element:`${elementName}_ITEM`,fontSize:"fontSize20",lineHeight:"lineHeight20"},href?React.createElement(Anchor,__spreadProps(__spreadValues({},props),{element:`${elementName}_ANCHOR`,href,ref}),children):React.createElement(Text,__spreadProps(__spreadValues({},safelySpreadTextProps(props)),{"aria-current":"page",as:"span",element:`${elementName}_TEXT`,fontSize:"fontSize20",lineHeight:"lineHeight20",ref}),children),!last&&React.createElement(BreadcrumbSeparator,{element:elementName}))});BreadcrumbItem.displayName="BreadcrumbItem";var Breadcrumb=React.forwardRef((_a,ref)=>{var _b=_a,{children,element=DEFAULT_ELEMENT_NAME}=_b,props=__objRest(_b,["children","element"]);let[childrenCount,validChildren]=React.useMemo(()=>[React.Children.count(children),React.Children.toArray(children).filter(child=>React.isValidElement(child)||typeof child=="string")],[children]),keySeed=useUIDSeed();return React.createElement(Box,__spreadProps(__spreadValues({"aria-label":"breadcrumb"},safelySpreadBoxProps(props)),{as:"nav",element,ref}),React.createElement(Box,{alignItems:"center",as:"ol",display:"inline-flex",listStyleType:"none",margin:"space0",padding:"space0"},validChildren.map((child,index)=>React.cloneElement(child,{last:childrenCount===index+1,key:keySeed(`breadcrumb-${index}`),parentElement:element}))))});Breadcrumb.displayName="Breadcrumb";Breadcrumb.propTypes={children:PropTypes.node.isRequired,element:PropTypes.string};export{Breadcrumb,BreadcrumbItem};
