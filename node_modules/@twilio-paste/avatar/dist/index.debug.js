"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/react-is/cjs/react-is.production.min.js
var require_react_is_production_min = __commonJS({
  "node_modules/react-is/cjs/react-is.production.min.js"(exports) {
    "use strict";
    var b = Symbol.for("react.element");
    var c = Symbol.for("react.portal");
    var d = Symbol.for("react.fragment");
    var e = Symbol.for("react.strict_mode");
    var f = Symbol.for("react.profiler");
    var g = Symbol.for("react.provider");
    var h = Symbol.for("react.context");
    var k = Symbol.for("react.server_context");
    var l = Symbol.for("react.forward_ref");
    var m = Symbol.for("react.suspense");
    var n = Symbol.for("react.suspense_list");
    var p = Symbol.for("react.memo");
    var q = Symbol.for("react.lazy");
    var t = Symbol.for("react.offscreen");
    var u = Symbol.for("react.module.reference");
    function v(a) {
      if ("object" === typeof a && null !== a) {
        var r = a.$$typeof;
        switch (r) {
          case b:
            switch (a = a.type, a) {
              case d:
              case f:
              case e:
              case m:
              case n:
                return a;
              default:
                switch (a = a && a.$$typeof, a) {
                  case k:
                  case h:
                  case l:
                  case q:
                  case p:
                  case g:
                    return a;
                  default:
                    return r;
                }
            }
          case c:
            return r;
        }
      }
    }
    exports.ContextConsumer = h;
    exports.ContextProvider = g;
    exports.Element = b;
    exports.ForwardRef = l;
    exports.Fragment = d;
    exports.Lazy = q;
    exports.Memo = p;
    exports.Portal = c;
    exports.Profiler = f;
    exports.StrictMode = e;
    exports.Suspense = m;
    exports.SuspenseList = n;
    exports.isAsyncMode = function() {
      return false;
    };
    exports.isConcurrentMode = function() {
      return false;
    };
    exports.isContextConsumer = function(a) {
      return v(a) === h;
    };
    exports.isContextProvider = function(a) {
      return v(a) === g;
    };
    exports.isElement = function(a) {
      return "object" === typeof a && null !== a && a.$$typeof === b;
    };
    exports.isForwardRef = function(a) {
      return v(a) === l;
    };
    exports.isFragment = function(a) {
      return v(a) === d;
    };
    exports.isLazy = function(a) {
      return v(a) === q;
    };
    exports.isMemo = function(a) {
      return v(a) === p;
    };
    exports.isPortal = function(a) {
      return v(a) === c;
    };
    exports.isProfiler = function(a) {
      return v(a) === f;
    };
    exports.isStrictMode = function(a) {
      return v(a) === e;
    };
    exports.isSuspense = function(a) {
      return v(a) === m;
    };
    exports.isSuspenseList = function(a) {
      return v(a) === n;
    };
    exports.isValidElementType = function(a) {
      return "string" === typeof a || "function" === typeof a || a === d || a === f || a === e || a === m || a === n || a === t || "object" === typeof a && null !== a && (a.$$typeof === q || a.$$typeof === p || a.$$typeof === g || a.$$typeof === h || a.$$typeof === l || a.$$typeof === u || void 0 !== a.getModuleId) ? true : false;
    };
    exports.typeOf = v;
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module2) {
    "use strict";
    if (true) {
      module2.exports = require_react_is_production_min();
    } else {
      module2.exports = null;
    }
  }
});

// src/index.tsx
var src_exports = {};
__export(src_exports, {
  Avatar: () => Avatar
});
module.exports = __toCommonJS(src_exports);
var React = __toESM(require("react"));
var import_prop_types = __toESM(require("prop-types"));
var import_react_is = __toESM(require_react_is());
var import_text = require("@twilio-paste/text");
var import_box = require("@twilio-paste/box");
var import_style_props = require("@twilio-paste/style-props");

// src/utils.ts
var getInitialsFromName = (fullname) => {
  return fullname.split(" ").map((name) => name.slice(0, 1)).reduce((previous, currentInitial, index, initials) => {
    if (index === 0 || index === initials.length - 1) {
      return `${previous}${currentInitial}`;
    }
    return previous;
  }, "");
};
var getCorrespondingLineHeightFromSizeToken = (size) => {
  if (typeof size === "string" && size.includes("sizeIcon")) {
    return size.replace("sizeIcon", "lineHeight");
  }
  throw new Error("[Avatar]: size must be of type IconSizeOptions.");
};
var getCorrespondingFontSizeFromSizeToken = (size) => {
  if (typeof size === "string" && size.includes("sizeIcon")) {
    switch (size) {
      case "sizeIcon10":
      case "sizeIcon20":
      case "sizeIcon30":
      case "sizeIcon40":
      case "sizeIcon50":
      case "sizeIcon60":
      default:
        return "fontSize10";
      case "sizeIcon70":
        return "fontSize20";
      case "sizeIcon80":
        return "fontSize30";
      case "sizeIcon90":
        return "fontSize40";
      case "sizeIcon100":
        return "fontSize60";
      case "sizeIcon110":
        return "fontSize70";
    }
  }
  throw new Error("[Avatar]: size must be of type IconSizeOptions.");
};
var getCorrespondingIconSizeFromSizeToken = (size) => {
  if (typeof size === "string" && size.includes("sizeIcon")) {
    switch (size) {
      case "sizeIcon10":
      case "sizeIcon20":
      case "sizeIcon30":
      case "sizeIcon40":
      default:
        return "sizeIcon10";
      case "sizeIcon50":
      case "sizeIcon60":
        return "sizeIcon20";
      case "sizeIcon70":
        return "sizeIcon30";
      case "sizeIcon80":
        return "sizeIcon40";
      case "sizeIcon90":
        return "sizeIcon50";
      case "sizeIcon100":
        return "sizeIcon70";
      case "sizeIcon110":
        return "sizeIcon80";
    }
  }
  throw new Error("[Avatar]: size must be of type IconSizeOptions.");
};
var getComputedTokenNames = (size) => {
  if (typeof size === "string") {
    return {
      lineHeight: getCorrespondingLineHeightFromSizeToken(size),
      fontSize: getCorrespondingFontSizeFromSizeToken(size),
      iconSize: getCorrespondingIconSizeFromSizeToken(size)
    };
  }
  if (Array.isArray(size)) {
    return {
      lineHeight: size.map((s) => {
        if (s != null) {
          return getCorrespondingLineHeightFromSizeToken(s);
        }
        return null;
      }),
      fontSize: size.map((s) => {
        if (s != null) {
          return getCorrespondingFontSizeFromSizeToken(s);
        }
        return null;
      }),
      iconSize: size.map((s) => {
        if (s != null) {
          return getCorrespondingIconSizeFromSizeToken(s);
        }
        return null;
      })
    };
  }
  throw new Error("[Avatar]: size must be a string or an array");
};

// src/index.tsx
var DEFAULT_SIZE = "sizeIcon70";
var AvatarContents = ({ name, size = DEFAULT_SIZE, src, icon: Icon }) => {
  const computedTokenNames = getComputedTokenNames(size);
  if (src != null) {
    return /* @__PURE__ */ React.createElement(import_box.Box, { as: "img", alt: name, maxWidth: "100%", src, size, title: name });
  }
  if (Icon != null) {
    if (!(0, import_react_is.isValidElementType)(Icon) || typeof Icon.displayName !== "string" || !Icon.displayName.includes("Icon")) {
      throw new Error("[Paste Avatar]: icon prop expected to be a Paste icon only.");
    }
    return /* @__PURE__ */ React.createElement(import_box.Box, { maxWidth: "100%", size, display: "flex", alignItems: "center", justifyContent: "center" }, /* @__PURE__ */ React.createElement(Icon, { decorative: false, title: name, size: computedTokenNames.iconSize }));
  }
  return /* @__PURE__ */ React.createElement(
    import_text.Text,
    {
      as: "abbr",
      display: "inline-block",
      fontSize: computedTokenNames.fontSize,
      fontWeight: "fontWeightBold",
      lineHeight: computedTokenNames.lineHeight,
      verticalAlign: "top",
      textDecoration: "none",
      title: name,
      color: "inherit"
    },
    getInitialsFromName(name)
  );
};
AvatarContents.displayName = "AvatarContents";
var colorVariants = {
  default: {
    backgroundColor: "colorBackgroundUser",
    color: "colorText"
  },
  decorative10: {
    backgroundColor: "colorBackgroundDecorative10Weakest",
    color: "colorTextDecorative10"
  },
  decorative20: {
    backgroundColor: "colorBackgroundDecorative20Weakest",
    color: "colorTextDecorative20"
  },
  decorative30: {
    backgroundColor: "colorBackgroundDecorative30Weakest",
    color: "colorTextDecorative30"
  },
  decorative40: {
    backgroundColor: "colorBackgroundDecorative40Weakest",
    color: "colorTextDecorative40"
  }
};
var variants = {
  user: {
    borderRadius: "borderRadiusCircle"
  },
  entity: {
    borderRadius: "borderRadius20"
  }
};
var Avatar = React.forwardRef(
  (_a, ref) => {
    var _b = _a, { name, children, size = DEFAULT_SIZE, element = "AVATAR", src, icon, color = "default", variant = "user" } = _b, props = __objRest(_b, ["name", "children", "size", "element", "src", "icon", "color", "variant"]);
    if (name === void 0) {
      console.error("[Paste Avatar]: name prop is required");
    }
    return /* @__PURE__ */ React.createElement(
      import_box.Box,
      __spreadValues(__spreadValues(__spreadProps(__spreadValues({}, (0, import_box.safelySpreadBoxProps)(props)), {
        as: "div",
        element,
        overflow: "hidden",
        textAlign: "center",
        flexShrink: 0,
        ref,
        size
      }), colorVariants[color]), variants[variant]),
      /* @__PURE__ */ React.createElement(AvatarContents, { name, size, icon, src })
    );
  }
);
Avatar.displayName = "Avatar";
Avatar.propTypes = {
  size: import_style_props.isIconSizeTokenProp,
  name: import_prop_types.default.string.isRequired,
  element: import_prop_types.default.string,
  src: import_prop_types.default.string,
  color: import_prop_types.default.oneOf([
    "default",
    "decorative10",
    "decorative20",
    "decorative30",
    "decorative40"
  ]),
  variant: import_prop_types.default.oneOf(["user", "entity"]),
  icon: (props) => {
    if (typeof props.icon !== "function")
      new Error("[Paste Avatar]: icon prop must be a Paste Icon");
    return null;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Avatar
});
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
