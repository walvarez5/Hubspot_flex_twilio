"use strict";
exports.__esModule = true;
exports.VisualizationObject = void 0;
var isEmpty = require("lodash/isEmpty");
var VisualizationObject;
(function (VisualizationObject) {
    function isMeasure(bucketItem) {
        return !isEmpty(bucketItem) && bucketItem.measure !== undefined;
    }
    VisualizationObject.isMeasure = isMeasure;
    function isVisualizationAttribute(bucketItem) {
        return !isEmpty(bucketItem) && bucketItem.visualizationAttribute !== undefined;
    }
    VisualizationObject.isVisualizationAttribute = isVisualizationAttribute;
    function isMeasureDefinition(definition) {
        return !isEmpty(definition) && definition.measureDefinition !== undefined;
    }
    VisualizationObject.isMeasureDefinition = isMeasureDefinition;
    function isArithmeticMeasureDefinition(definition) {
        return !isEmpty(definition) && definition.arithmeticMeasure !== undefined;
    }
    VisualizationObject.isArithmeticMeasureDefinition = isArithmeticMeasureDefinition;
    function isPopMeasureDefinition(definition) {
        return !isEmpty(definition) && definition.popMeasureDefinition !== undefined;
    }
    VisualizationObject.isPopMeasureDefinition = isPopMeasureDefinition;
    function isPreviousPeriodMeasureDefinition(definition) {
        return !isEmpty(definition)
            && definition.previousPeriodMeasure !== undefined;
    }
    VisualizationObject.isPreviousPeriodMeasureDefinition = isPreviousPeriodMeasureDefinition;
    function isAttributeFilter(filter) {
        return !isEmpty(filter) && (filter.positiveAttributeFilter !== undefined
            || filter.negativeAttributeFilter !== undefined);
    }
    VisualizationObject.isAttributeFilter = isAttributeFilter;
    function isDateFilter(filter) {
        return !isEmpty(filter) && (filter.absoluteDateFilter !== undefined
            || filter.relativeDateFilter !== undefined);
    }
    VisualizationObject.isDateFilter = isDateFilter;
    function isPositiveAttributeFilter(filter) {
        return !isEmpty(filter)
            && filter.positiveAttributeFilter !== undefined;
    }
    VisualizationObject.isPositiveAttributeFilter = isPositiveAttributeFilter;
    function isMeasureValueFilter(filter) {
        return !isEmpty(filter)
            && filter.measureValueFilter !== undefined;
    }
    VisualizationObject.isMeasureValueFilter = isMeasureValueFilter;
    function isRankingFilter(filter) {
        return !isEmpty(filter)
            && filter.rankingFilter !== undefined;
    }
    VisualizationObject.isRankingFilter = isRankingFilter;
    function isAbsoluteDateFilter(filter) {
        return !isEmpty(filter) && filter.absoluteDateFilter !== undefined;
    }
    VisualizationObject.isAbsoluteDateFilter = isAbsoluteDateFilter;
    function isRelativeDateFilter(filter) {
        return !isEmpty(filter) && filter.relativeDateFilter !== undefined;
    }
    VisualizationObject.isRelativeDateFilter = isRelativeDateFilter;
    function isAttribute(bucketItem) {
        return !isEmpty(bucketItem) && bucketItem.visualizationAttribute !== undefined;
    }
    VisualizationObject.isAttribute = isAttribute;
    function isLocalIdentifierQualifier(objectQualifier) {
        return (!isEmpty(objectQualifier) &&
            objectQualifier.localIdentifier !== undefined);
    }
    VisualizationObject.isLocalIdentifierQualifier = isLocalIdentifierQualifier;
    function isComparisonCondition(condition) {
        return !isEmpty(condition) && condition.comparison !== undefined;
    }
    VisualizationObject.isComparisonCondition = isComparisonCondition;
    function isRangeCondition(condition) {
        return !isEmpty(condition) && condition.range !== undefined;
    }
    VisualizationObject.isRangeCondition = isRangeCondition;
})(VisualizationObject = exports.VisualizationObject || (exports.VisualizationObject = {}));
//# sourceMappingURL=VisualizationObject.js.map