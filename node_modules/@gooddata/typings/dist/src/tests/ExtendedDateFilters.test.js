"use strict";
exports.__esModule = true;
// (C) 2019 GoodData Corporation
var ExtendedDateFilters_1 = require("../ExtendedDateFilters");
describe('ExtendedDateFilters', function () {
    var absoluteForm = {
        from: '2000-01-01',
        localIdentifier: 'foo',
        to: '2020-01-01',
        type: 'absoluteForm',
        name: 'Absolute Form',
        visible: true
    };
    var absolutePreset = {
        from: '2000-01-01',
        localIdentifier: 'foo',
        name: 'bar',
        to: '2020-01-01',
        type: 'absolutePreset',
        visible: true
    };
    var relativeForm = {
        from: -2,
        granularity: 'GDC.time.date',
        availableGranularities: ['GDC.time.date'],
        localIdentifier: 'foo',
        name: 'bar',
        to: 0,
        type: 'relativeForm',
        visible: true
    };
    var relativePreset = {
        from: -2,
        granularity: 'GDC.time.date',
        localIdentifier: 'foo',
        name: 'bar',
        to: 0,
        type: 'relativePreset',
        visible: true
    };
    var allTimeFilter = {
        localIdentifier: 'foo',
        type: 'allTime',
        name: 'All time',
        visible: true
    };
    describe('isAllTimeDateFilter', function () {
        it.each([
            ['null', null],
            ['undefined', undefined],
            ['a relative form', relativeForm],
            ['a relative preset', relativePreset],
            ['an absolute form', absoluteForm],
            ['an absolute preset', absolutePreset]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAllTimeDateFilter(input);
            expect(result).toEqual(false);
        });
        it('should return true when an all-time filter is tested', function () {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAllTimeDateFilter(allTimeFilter);
            expect(result).toEqual(true);
        });
    });
    describe('isAbsoluteDateFilterForm', function () {
        it.each([
            ['null', null],
            ['undefined', undefined],
            ['a relative form', relativeForm],
            ['a relative preset', relativePreset],
            ['an absolute preset', absolutePreset],
            ['an all-time filter', allTimeFilter]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAbsoluteDateFilterForm(input);
            expect(result).toEqual(false);
        });
        it('should return true when an absolute form is tested', function () {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAbsoluteDateFilterForm(absoluteForm);
            expect(result).toEqual(true);
        });
    });
    describe('isAbsoluteDateFilterPreset', function () {
        it.each([
            ['null', null],
            ['undefined', undefined],
            ['a relative form', relativeForm],
            ['a relative preset', relativePreset],
            ['an absolute form', absoluteForm],
            ['an all-time filter', allTimeFilter]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAbsoluteDateFilterPreset(input);
            expect(result).toEqual(false);
        });
        it('should return true when an absolute preset is tested', function () {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAbsoluteDateFilterPreset(absolutePreset);
            expect(result).toEqual(true);
        });
    });
    describe('isRelativeDateFilterForm', function () {
        it.each([
            ['null', null],
            ['undefined', undefined],
            ['a relative preset', relativePreset],
            ['an absolute form', absoluteForm],
            ['an absolute preset', absolutePreset],
            ['an all-time filter', allTimeFilter]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isRelativeDateFilterForm(input);
            expect(result).toEqual(false);
        });
        it('should return true when a relative form is tested', function () {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isRelativeDateFilterForm(relativeForm);
            expect(result).toEqual(true);
        });
    });
    describe('isRelativeDateFilterPreset', function () {
        it.each([
            ['null', null],
            ['undefined', undefined],
            ['a relative form', relativeForm],
            ['an absolute form', absoluteForm],
            ['an absolute preset', absolutePreset],
            ['an all-time filter', allTimeFilter]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isRelativeDateFilterPreset(input);
            expect(result).toEqual(false);
        });
        it('should return true when a relative preset is tested', function () {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isRelativeDateFilterPreset(relativePreset);
            expect(result).toEqual(true);
        });
    });
    describe('isAbsoluteDateFilterOption', function () {
        it.each([
            ['null', null],
            ['undefined', undefined],
            ['a relative form', relativeForm],
            ['a relative preset', relativePreset],
            ['an all-time filter', allTimeFilter]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAbsoluteDateFilterOption(input);
            expect(result).toEqual(false);
        });
        it.each([
            ['an absolute form', absoluteForm],
            ['an absolute preset', absolutePreset]
        ])('should return true when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isAbsoluteDateFilterOption(input);
            expect(result).toEqual(true);
        });
    });
    describe('isRelativeDateFilterOption', function () {
        it.each([
            ['null', null],
            ['undefined', undefined],
            ['an absolute form', absoluteForm],
            ['an absolute preset', absolutePreset],
            ['an all-time filter', allTimeFilter]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isRelativeDateFilterOption(input);
            expect(result).toEqual(false);
        });
        it.each([
            ['a relative form', relativeForm],
            ['a relative preset', relativePreset]
        ])('should return false when %s is tested', function (_, input) {
            var result = ExtendedDateFilters_1.ExtendedDateFilters.isRelativeDateFilterOption(input);
            expect(result).toEqual(true);
        });
    });
});
//# sourceMappingURL=ExtendedDateFilters.test.js.map